%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 24.2
%%For:  
%%CreationDate: 1/17/2022
%%BoundingBox: 0 0 688 400
%%HiResBoundingBox: 0 0 687.4733 400
%%CropBox: 0 0 687.4733 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.2.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.2.0 x490 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 76 8%%BeginData: 21716 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFFFFFCAFFA8FFCAFFA8FF
%FFFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAA8CAA8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA77D7D
%FFA8CAA8FFA8FF7D527DFFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8CAA8FFCACAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8
%FFA8CAA8FFFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFA827F84BCAFFA8FFCAFFCA76F805A8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8A14B7DA8FD05FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCAA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8
%FFA8FFCAFFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8CACA7DF86F6FCAA8CAA8FFA8CA759A207DA8FFA8CAA8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8A8F8F84BFFCA7D4B
%7D7DFFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFFFCAFFA8FFCAFFA8FFCAFF
%A8FFCAA852A8CAFFA8FFA87DA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF524BC29AA8FFCAFFA8FFFFC3
%99C3CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%A75176A1CAFF4B20F8F852FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8A8FFA8
%CAA8FFA8CAA8FFA8CAA852F8F87DFFA8FF7DF8F852A8FFA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFCF5227A175
%7EA8FFA8FFA8A17D7777A8A8CFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAA8FFA1A0A1FFA8A06F6FF827A8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAFFCAFFA8FFCAFFA8FFCAFFA8FF4B4B4BCAFFFFCA52F84B4BCA
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFFF7E28535A5A287EA8A87EA24C7E5A5A535A59CBCFFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF84847D8484FFA7A075F8F8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCAFFA8A8FFA8CAA8FFA8CAA8FFA8CAA8CA999AA7
%FFA8FF274A99757DFFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8CAA87E282E28605A2F282F28532F5A5353537D535353
%A8A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CF84605A61366059
%53765306F87DFFA8CAA8FFA8CAA8FFA8CAA8FFA8CAFFA8FFCAFFA8FFCAFF
%A8FFCACAA2A09ACAA8FFFF7D52A176A7A8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAA8282F28535A612F2F28537E5A
%535A53A1537E7E5A53FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CA85367E767E607E28532E5327A1CAFFCAFFA8FFCAFFA8FFCAFFA8FFCAA8
%CAA8FFA8CAA8FFA8FFA8A17677597E76A17DA97E845AA86FA1A8FFA7C9A7
%CAA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FF5328285328
%5A5A53282F537E7E7E7D7D6F76595A5353A8FFA8CAA8FFA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAA8FF846053BB75532E53535328287DFFA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFFFA8FFCAFFA8FFCAFFA8A277A17785607D777E7F857F85
%7EA1A1AFA89A99C8C9FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCA53285353535A852F53535A537D76A27DC29A5A535459FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAA95A61A17628532F53285328A8
%CAFFCAFFA8FFCAFFA8FFCAFFA8FFCAA8CAA8FFA8CAA8FFA8A8767D777D5A
%60A7C97DA87E855A857E855A8577C2A0CFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8CAA8FF5328282F285A5A2F7DA853545276767D777D53
%5A59A8A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA85A5A612F
%28282F282F2828A1FFA8FFA8CAA8FFA8CAA8FFA8CAA8FFFFCAFFA8FFCAFF
%A8FF77A176A1777D9AC8C1A87EA87E857EA885855AA9CAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFCA7E2853282F77842F7EFFA8
%A8A8A07D535A53A1A1CACAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFCAA95A605AA876775253527675FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8A8FFA8CAA8FFA8FF7D9ABBC299C2BBBC99A77E855A85A19976855AA9A8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CFA85906
%537DC299767DFFA8AFA8C9FD04A07D7E7D7EA8CAA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA8FFA8FFFD047D77A17DA2A1A076CAA8FFA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAFFCAFFA8FFCAFFA87E76C2BCC2C2A17DA17E857F8585A2
%9A7E53547EFFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCF777CCEC29A76CAFFFF6061A1FD04C8857F857FA9CAFFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFCAA8A1A177A17E855B857E85A8FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAFFA8A8FFA8CAA8FFA8CA535976A176775336
%53532F7EA1A7A1A7A0A753547EA8A8FFA8FFA8CAA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA8FFA8CFA8A877A0A0A177777DA87E5A367D76A0A0A07D7F
%5A857EA87ECAA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8FF7D77777D7D85
%5A7F5A855AA9A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAFFA8FFCAFFA8FFA8
%5A535A545A285328532F2F52A0C2C8C2C9C8C8A059537E7EFFCAFFCAFFA7
%837DFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCA7E2E5352532E532EFD055352
%53525352FD05532E537DFFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAA276
%A17DA27E857E857E8584FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAA8CAA8FF
%A8CAA8CA5353537E5353282F28532E2F2852A0C8A0C9A0C8A07D535A7DA7
%A8CA7D585783A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8A82877767D7777
%7DFFA8C99FC2A0A0A0C29FCAA8CF7D2FA8CAA8FFA8CAA8FFA8CAA8FFA8CA
%A8FFA8CAA8FF7D77767D7D855A857E855AA9A8CAA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFFFA8FFCAFFA8FFA87E537E5A7E5353285328592F5328A1C8C8C2
%C9C2C8A17E5A7D58AEA77C5883A8FFCAFFCAFFA8FFCAFFA8FFCAFFA8FFCA
%FFA85377A177A177A8CAFFC8C8C2C9A0C8C2C8C9FFCAA82FFFCAFFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAA177A177A87F857E857E8585FFA8FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAA8CAA8FFA8CAA8FF5353537E535A282F282E
%2F53282952C8C2C8A0C8C2A1537E58587DA8587C58A8A7A8A8FFA8CAA8FF
%A8CAA8FFA8CAA8FFA8A8287777777677A1FFA7C8C2C8A0C8C2C89FC9A8FF
%7D53A8FFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FF777776A17E855A85
%7E855A85A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFFFCAFFA8FFCAFFA87E53
%5A537E532F28532F5328532853C2C8C8C9C2C8A15A538358A7A8837C7D58
%7D5883A8FFCAFFA8FFCAFFA8FFCAFFA8FFA8539AC39AC299CAAFCAC2C8C2
%C8C2C8C2C8C9FFCFA828FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8
%A1777D77A97F857E857F857EFFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8A8FF
%A8CAA8FFA8CA5353535A5353282F28532F28282F28C2A0C8C2C2C1A1535A
%7DCFA883A87DFD05587CA8FFA8CAA8FFA8CAA8FFA8CAA8A8289ABBC299BC
%A1FFA1C2A0C8A0C99FC8C2C9A8FF7D2FA8FFA8CAA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CA767D767D7E855A7E5A855A85A8FFA8CAA8FFA8CAA8FFA8CA
%A8FFA8CAFFCAFFA8FFCAFFA87E535A597E532F28532F5328532853A0C8C8
%C9C2C8A15A5AFFCAFF83A8838358837CA8A8FFCAFFA8FFCAFFA8FFCAFFA8
%FFA8539AC2C2C29AFFCAC9C2C9C2C9C9C8C2C8C8FFFFA828FFCAFFA8FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAFFA8A177A1778585855A857F857EFFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8A8FFA8CAA8FFA8CA5353535A5353282F2853
%282F282F28A0C2C9C8C8C1A1545AA8FFA8A17DCAA7837DFFA8FFA8FFA8CA
%A8FFA8CAA8FFA8CAA8A8289ABBC299C3A8FFC2C8A0C8A7C99FC8C2C8A8FF
%7E2FA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CA767D77777E855A7E
%7E857E85A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAFFA8FFCAFFA8FFA87E53
%5A5A7E532F282F2F53282F282FA0C8C2C9C2C87D5A5ACBA8A1777D76A2FF
%FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA85A53539AC2BBC3CAFFA8C8C2C8C2
%CACAC8C2C8C2FFCAA82ECBA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA8
%7D77A177857F855A857E857FA9A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAA8CA
%A8FFA8CAA8FF5353535A5353282F28532F2F282906A0C2C8A0C2A07D537E
%A8CA767776777DFFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8A82F5328A0BBC2
%A8FFA8CAA0C8A0C2A7CAC2C8A0C8A8FF7D2FA8CFA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA8CA7677767DFD055A7E5A7E84CFA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFFFA8FFCAFFA8FFCA7E535A5A7E7DC2A07D547E7DA0A0A177A1A1
%7D76A1A27E5AFFCAA277A176A8FFFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF7E
%5453539AC2C3FFCAFFC9C8C2C8C2CFCAC8C2C8C2CFCAA82FFFCAFFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFA87D77A177A27EA27E857E857EA9CAFFCA
%FFA8FFCAFFA8FFCAFFA8FFCAA8CAA8FFA8CAA8FF7D53535A53A1C1C8A05A
%53C9C2C8C2A177A2777752774C77A8FF77777677A1FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA884535328C2BBC9A8FFA8CAC2C8C2C9A8CFC2C2A0C9A8FF
%7D53A8FFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8CA7DA27D7D77CABBC2
%BCC2BCCAA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFFFCAFFA8FFCAFFA8FFA8
%A8A8A9C2C8C2C9A7A9C2C8C2C8C2C9A1A27DA8A8A8A2FFCACAA1A8A2CAA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF7D5A53539AA17DA8CAFFA8A19AA1A8
%FFA8A89BA1A2FFCAA828FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFCA
%A8535A535A7D7676777676A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8A8FF
%A8CAA8FFA8CAA8FFA8FFA8C9C1C29FC8A8C99FC8C2C2C1C8A8FFA8FFA8FF
%A8FFA8FFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA87E297E28535359
%537EA2A2777752A8A8CA7DA27DA1A8FF7D2FA8FFA8CAA8FFA8CAA8FFA8CA
%A8FFA8CAA8FFA8CF7D535353285328282F7E287DA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAFFCAFFA8FFCAFFA8FFCAFFA8FFCACAC9C9C9CFA8CFC9CAC9
%CAC9CFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCA
%FF7E84A8532F5A537D76A177A177A1A8FFA8A177A177CAFFA828FFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFCA84535A535A53542F77525377FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAFFA8A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8FF
%A8FFA8CBA8FFA8FFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA8FFA8CFA8A82F7E597EA0C2A0C3A0C3A0CAA8CAA0C8A0C2
%A1FFA853A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8FF7E7E5359537E
%537DA0C8A0A7A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAFFA8FFCAFFA8FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFCA
%FFA8FFCAFFA8FFCAFFA8FFA8FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFA8FFA8FFCAFFA8FFA8FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCA
%A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CA
%A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CA
%A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA8FFFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAA8CAA8FFA8CAA8FFA8CAA8FFA8CA
%A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CA
%A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFFFCAFFA8FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCA
%FFA8A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CA
%A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CA
%A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFCAFFCAFFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA8FFA8CAFFCAFFA8FFCAFFA8FFCAFFA8FFCAFD05FFA8FFCA
%FFA8FFCAFFFFFFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFCAFF52527D7DA8FFA8
%5227A8CAFFCAFFA8FFCAFFA8FFCAFFA8A8FFA8CAA8FFA8CAA8FFA8CAA8FF
%A8FD0452CAA8FFA8CAA8FFA876F87DCACAA8FFA8CAA8FFA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8FFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8FF7D
%FD04F8A8CACA512627FFA8FFA8CAA8FFA8CAA8FFA8CAFFA8FFCAFFA8FFCA
%FFA8FFCAFFFF7DF8F82675A1FFA8FFCAFFFF7D00537DFFCAFFA8FFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFCAFFFFFFA8FFCAFFA8FFCAFFA8FFCA
%FFA8FFCAFFA8FFCAFFFFFFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFFFC96F75F87DCAFFA8A07652CAFFA8FFCAFFA8FFCAFFA8FFCA
%A8CAA8FFA8CAA8FFA8CAA8FFA8FF27F8F8996FA1A8CAA8FFA8FF7D769AA1
%A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8FFA8FFCAA85252A8FFA8FF
%A8CFA8FFA8CAA8FFA8CFA8FFA8CFA8CA527DF852CAFFA8FFA8CAA8FFA8CA
%A8FFA8CAA8FFA8CAA8FFA8CAA8FF51996FF8F8A8A8FF9A9AA8FFA8CAA8FF
%A8CAA8FFA8CAA8FFFFA8FFCAFFA8FFCAFFA8FFCAFFCA52F8279AC2CAFFA8
%FFCAFFA8FFA1A0A7FFCAFFA8FFCA7675CACBFFA8FFCAFFA8FFCAFF7E847E
%7E00F8F87D7EA87E7E7EA87E7E7EA97E7E7E847E7E7EA95220F8F827847E
%FFCAFFA8FFCAFFA8FFCAFFA8FFCACACAFFCAFFCAFFA253A1A2522752FFA9
%7E7D5A7EFFCAFFCAFFA8FFCAFFA8FFCAA8CAA8FFA8CAA8FFA8CAA8FFCAA8
%2828287776A8CAFFA8CAA7C9C2C976C9A7FFA8FFA8C9754BA1FFA8CAA8FF
%A8CAA8FF7E532F542F2020755353535A53532F5484A985852F532F535353
%2F766F26F85A53537DFFA8CAA8FFA8CAA8FFA8CAA1A175A17DFFA8CA7D77
%287D77A176F82F615A602E5A60A8A8FFA8CAA8FFA8CAA8FFFFCAFFA8FFCA
%FFA8FFCAFFCAA8282F28532F2F287EA8CAC2C8C2C8C2C9C2C8C2CACAC9C2
%C3A1FFA8FFCAFFA8FFCAFFA87E535A535A76C2757D535A535A535453CAA8
%A8A77E535A535A535A76BC752F535A537EA8FFCAFFA8FFCAFFA8FFCAC293
%9A767D7DCA7D7D775353A177A177605A615AA1A06084FFA8FFCAFFA8FFCA
%FFA8A8FFA8CAA8FFA8CAA8FFA87E062F282F282F285328539AC2A0C2759A
%C2C8A0C8A0C3C2C3A7FFA8CAA8FFA8CAA8FFA8CAFD04532F7D7576FD0753
%7DA17E7DC9FD04532F54537D9AA153532F5353CAA8FFA8CAA8FFA8CAA8CA
%A7CAA1777677FD047D287776A1767D5A605A6076C37D60A8CFA8FFA8CAA8
%FFA8CAFFCAFFA8FFCAFFA8FFCAFF522F285328532E532F5352C2BCC29A75
%6FC8C8C8C2C9C3C3C9FFCAFFA8FFCAFFA8FFCAFFA87E535A5A617EC27D61
%5A5A535A537D75A1537776A1535A537E7DC9C2C9C8C8A05A537EA8FFCAFF
%A8FFCAFFA8FFCAFFFFCB777D77A177A2777D76A0A1A1777E5A85605AA0C9
%C3A2A8FFCAFFA8FFCAFFA8A8FFA8CAA8FFA8CAA8FFA1C29A762F2F282F28
%530676BBC29AC299A0A0C8A0C2A0CAA8FFA8FFA8CAA8FFA8CAA8FFA8CF53
%545A605A84C2A736615A5A537D9A4B6F7D767676C37CA7A0C8C8C8A0C8C2
%C87C5453CAA8FFA8CAA8FFA8CAA8FFA8CAA8CA7D77767D7DA1767D767776
%7D5A605A60367DC2C976A8A8FFA8CAA8FFA8CAFFA8FFCAFFA8FFCAFFA8C3
%BCC2C37E2853282F537D9AC3C9C9C2C9C8C8C2C9CACFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCA7E5A615A615AC8A1615A615AA1BBC29A77537E77C2C2C8
%C8C9C2C9C2C8C2C8C2C8537EA8FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA8A8
%A8A1BBC277A17DA1A1855A615A615AA1C3777EFFA8FFCAFFA8FFCAA8CAA8
%FFA8CAA8FFA8CA99C2A0A8282F282F2876C2C3A8FFC9C8C2C8C2C8A0FFA8
%CAA8FFA8CAA8FFA8CAA8FFA8CAA8FF596036605A84A0A0757D36609AC299
%7D2F532F5476C8C1C8C2C8A0C8A0C9A7C8C27D53FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8FF52997D7E5377767D5A605A605A59285228A8A8CAA8
%FFA8CAA8FFFFA8FFCAFFA8FFCFFFA1C2C2FFA87D5353282F76A0CAFFCAA7
%A0C9A0C8C2C9CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAA8A0A1A0C3A0C2
%BC997D6160C29A7D535A537E535A77A1A0C9A0C9C9C9C8C9C2C8777ECAFF
%A8CFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8845A61362F2F532F7E7D7E7DA1
%532F2F7ECAFFA8FFCAFFA8FFCAA8CAA8FFA8CFA8A276C299A0C9A877A177
%7752A1A7FFA8FF7EFD05537DFFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8A853
%779AC2BBC299C27D605A5A77532F5A5353535A53532F5A769A9AC8C2C8A0
%C8A05353A8A87D58A8A8CAA8FFA8CAA8FFA8CAA8FFA8A77DA87D7D52532F
%5376A1767776A27EA8A8FFA8CAA8FFA8CAA8FFFFCAFFA8CF7D7D76C9A0A0
%9FC97D7777A177A17DFFCAFFCFA854542F542F54A8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAA8535A535A9AC37DC9C2845A53535A535A535A535A535A535A
%537D9AC3C2C9C2C9A05A5353537D587DA7FFCAFFA8FFCAFFA8FFCAFFA8CF
%C2C8C2C8C276285377A176A1777D7DFFCFFFA8FFCAFFA8FFCAFFA8A8FFA8
%FFA1A1A0C8C1C8C2C2767D767776A17D77A1FFA8A8535A53532F53297EA8
%FFA8CAA8FFA8CAA8FFA8CAA8FF7D53282F2F59537D767D767D7677FD0953
%7E5A855A847E847D7D7D5A2F2F2853585858A8A8FFA8CAA8FFA8CAA8FFA8
%FFA7C8A0C8A0C87C367EA176A1767D7677A8FFA8CAA8FFA8CAA8FFA8CAFF
%CAFFA8FFCACAC9CFCAA17DA2A2A177A17DA276A8A87E535A547E53545354
%53FFCAFFA8FFCAFFA8FFCAFFA8FFCA7E2F53285A537D77A177A177A177A1
%7677535A535A537E85857E8585857E835883587E2F2F528358A7A8CFCAFF
%A8FFCAFFA8FFCAFFA8CAC2C8C2C9C2A76085777D7CA177A177A8FFFFA8FF
%CAFFA8FFCAFFA8A8FFA8CAA8FFA8FFA9FFA2A177A17D77767D7D7D76A153
%532F53535A2F5353537DFFA8CAA8FFA8CAA8FFA8CAA8FF7E532F53537776
%7D7777767D7777767D7677282F28535A857E855A857E8559835858585953
%595883585858FFA8CAA8FFA8CAA8FFA8FFA1C8C2C8A0C8A06159A1777D76
%7D777777FFA8CAA8FFA8CAA8FFA8CAFFA8FFCAFFA8FFCAFFA8FF7D7D77A1
%777D76A27D7D9A7D5353535A545A53542F54A8FFCAFFA8FFCAFFA8FFCAFF
%A8FF7E53535352A177A1777D77A1777D77777677282F53857E857EA87EA9
%5A5A527D585853547DA8587C5883A8FFCAFFA8FFCAFFA8FFCAC9C2C8C2C8
%C2C9607E76A1777D77A1777D7DFFCAFFA8FFCAFFA8FFCAA8CAA8FFA8CAA8
%FFA8CAA8A87677767D767777A1767D53532F532F5A5353295377CAA8FFA8
%CAA8FFA8CAA8FFA8CAA8A8282E282E2877767D7677767D76775277765228
%7E7E855A857DA87E5A285252592E2E287D5858587DA8CBA8FFA8CAA8FFA8
%CAA8FFA0C2A0C8A0C8A0605977767D7677767D7677A1FFA8CAA8FFA8CAA8
%FFFFA8FFCAFFA8FFCAFFA8FFCFA877A177A177A27D7D777D2F5353A8A87E
%53A1C3C9C9FFCAFFA8FFCAFFA8FFCAFFA8FFA82F2853282F2853525377A1
%77A17777767752537F857E857FA97E857F535883587D2E2E7D837CA8A8FF
%A8FFCAFFA8FFCAFFA8FFCAA87D847E845A85607E77A177A177A177A177A1
%A8FFA8FFCAFFA8FFCAA8CAA8FFA8CAA8FFA8CAA8FFA8A1767D76777DA177
%77777E7ECAA8FFA8A8C3C3C2C3A8FFA8CAA8FFA8CAA8FFA8CAA8FF532805
%2E2828052828A1767D77775277767653857E855A857E855A855328527D52
%522EA7A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA860366136603661597776
%7D77A1767D777D76A8A8CAA8FFA8CAA8FFFFCAFFA8FFCAFFA8FFCAFFA8CF
%C27D77A1A1A277A1777DA8FFCAFFA8FFCACAC2C9C3CAA8FFCAFFA8FFCAFF
%A8FFCAFFA8FF7E7E28537D7E7D7D777D77A177777677767E7F857F857E85
%7F857F857D5328A1A1A17DA1A1FFA8FFCAFFA8FFCAFFA8FFCAFFA8FF8484
%7D84847EA1A1777D77A1A8A176A1A1A17DFFCAFFA8FFCAFFA8A8FFA8CAA8
%FFA8CAA8FFA8CBA7A029A8A8FFA877767D767DA8FFA8CAA8FFA8C9A0C3A1
%FFA8FFA8CAA8FFA8CAA8FFA8CAA8FFCA5353FFCAFFA1777677767D52764C
%777E855A855A855A857E7E77FF7D287DA17DA176A8A8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8CABBBCA1FFC2BB767D767776FFA87D76A1532F53FFA8CAA8
%FFA8CAFFCAFFA8FFCAFFA8FFCAFFA8CFA1A8CAFFCAFF7DA17DA17DCACAFF
%A8FFCAFFA8C9C3FFCFFFCAFFA8FFCAFFA8FFCAFFA8FFCAFF537ECFFFCAA8
%77A177A17777767777857F858585A8A9857E76537EA853A8A1A17DA1A8FF
%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAC2BBCAFFCAC2A177A19AA1A8FFA8CA
%7D5453547EFFA8FFCAFFA8A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%A877A27D7D7DFFA8CAA8FFA8CACAFFA87EA8FFA8FFA8FFA8CAA8FFA8CAA8
%FFA8CAA8FFA8FF7D77777776A17D7652A17DA27E847EA9A8A82F532F53A8
%FFA1A17DA176A8A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8CAC2C2A0CAA8C8A0
%77777DA2FFA8FFA8842F53297EA8CFA8FFA8CAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFA8A29AC2C2CAFFFFA8FFA8FFCAA953532FFD047ECBA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAC9A0C9A0A1A1FFA1C8C17D77C29ACAFF
%FF5354535353FFCFA87DA17DA1A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA7
%C8C2C8CAFFA77D2F5453FFA8FFCAFF59542F5AA8FFCAFFA8FFCAA8CAA8FF
%A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8C29FC8C2CAA8FFA8CAA8FF7E2F
%29532F535277A1FFA8FFA8CAA8FFA8CAA8FFA8CAA8CAC2C89FC8CAFFA8A8
%767D2F5353537DFF535329537ECFA8FFA8A8A1A8A1CAA8FFA8CAA8FFA8CA
%A8FFA8CAA8FFA8C9A0C8C2A87D542F532F53A8CAA8FFA2532953A8FFA8FF
%A8CAA8FFFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFFD04C8C2C9
%C9FFA8FFCACB537D7CA1A0C9C9C9A8FFCAFFA8FFCAFFA8FFCAFFA8FFCACA
%C2C8C2C9C9C953542F5453542FC9A153537EA8FFA8FFCAFFCAFFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8CFC9C8C2C9C2C8535453542F5453FFCAFFCF7E
%295AA8FFA8FFCAFFA8FFCAA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8
%FFA8A1A0C2A0A0A0C2A0CAA8FFA8C9C2C9C9CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8CAA0C8C1C2C1A1537E537E535AA7A853A8A8FFA8CAA8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA0C8C2C8A0C9A1532F5353
%5A537EA8CFA8FFA8537EFFA8CAA8FFA8CAA8FFFFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFA17D77A17DA177A1A8FFA8FFCAFFA8FFA8FFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA8FFA7CAC9C9C9FFCAFFA8FFA8FF
%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCACFA8FF
%CAFFA8FFA8A8A8FFCAFFCAFFCAFFA8FFA8FFA8FFCAFFA8FFCAFFA8A8FFA8
%CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8CAA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8FFA8FFA8
%FFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAFFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCAFFA8A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAFFCAFFFFFFCAFFFFFF
%CAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFF
%FFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFF
%CAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFF
%FFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFD81FF
%FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164460, 2020/05/12-16:04:17        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator 24.2 (Windows)"
   xmp:CreateDate="2022-01-17T14:47:34+03:00"
   xmp:ModifyDate="2022-01-17T14:47:35+03:00"
   xmp:MetadataDate="2022-01-17T14:47:35+03:00"
   xmpMM:OriginalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
   xmpMM:DocumentID="xmp.did:3da07ff8-e058-0147-976e-e55d70f58372"
   xmpMM:InstanceID="xmp.iid:3da07ff8-e058-0147-976e-e55d70f58372"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Basic RGB"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">2201.w037.n003.132A.p1.132</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="152"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAmAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9CZFudirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVQcOs6PNfPYQ31vLfRjlJaJKjTKBtVoweQ+7FCMxSgtX1rSNGsnvtWvYL&#xA;CzjpzuLiRYoxyIUVZiBuSBihE29xb3MEdxbypNbzKHimjYMjowqrKwqCCOhGKVTFXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYqwfz7+cfknyVI1pqdy9xq/BZI9KtUMk7K5oN9o18fiYEjpihmNj&#xA;dw3tlb3kNfRuY0mj5CjcZFDCo7GhxSwy/wDzr/Lqx84J5Tm1KuqtIsLtGjPBHK3+65JVqqkftdl/&#xA;apQ0UWzrFLsVdirsVdirsVdirsVSbzpfzad5O13UIGZJ7PT7qeJ1+0Hjgd1K071GIQXz/wDkd5L0&#xA;vQNY8t6zNco2o3okmnmkXkqi5haJIA5X4JOZ3HPl7b5QfE8Wq2c2OPF+X4r9V/in0zl7hvMPzn0v&#xA;Qtf06G1upYLk6ZIXuLIj1JFa4X01c8eRSic6fD9oqe29GXjltj3Pk5mljjBJy7CtrTr8ptJsNB8p&#xA;W+iW2qJqCwvLLbp6okeGGVzIkJH2hwDUIPfL4wmIjjFFxcnBxEQNxZrixdirsVdirsVdiryn88NC&#xA;896ydKg0LVm0fRVEv6UuIpWR3clGiUhaMT8FE41qWNR415MnCLbcOE5DV0yaGTXvL/5YerCZ9U1y&#xA;zsGaFrtmuZZLgqShmb4GcKzAtQ/ZGET9PEUSxevhHfTyTSv+clvN+n69p+nebtDto7G7nWE6hamS&#xA;I+k7cFnVHaQFa79R0I2IxhMSGyMuKWM+oPovJsHYq7FXYq7FXYqo3d5a2du1xcyrFCm7OxoMVAt4&#xA;7570ryf5g179NWdl6+pNEtvPdvGAUVSQksW3PmFJG5XanfKs2myzrg+LnafPhw34tAn6XqGk+YfL&#xA;81lEtveRqsaiNYpGCP8AAKfYY1+7L4Y5chu4eU0STs8C0z8n3tL3W7i6jsrm51C8uHtb5pZCVgeR&#xA;mUuvpck5q1H4k7ZDPocxN8ojm26PW4IxIIuZ2H46Pf8AytrNpq2iWtzBci6YRos8gBU+oFHKqncE&#xA;nscjCYlyYZMRgd0zFxbsaCaMsDx4815V6UpWuR8eF8Ni18KdXRpflrW7FXYq7FXYq7FXz9+bHnu8&#xA;1rV59GtHK6TYyFGVf93Sx7O7U6qpB4/f8trpcAiLPMuFmyWa6IG3tVf8upG4/FVpVb/Vm/otMza2&#xA;dTKZGevxyd5U8z+dLhk0631mWG2WihpplVQAPhQSS/YH0jKJYYcyHZjJLlaZDSPMUs8119UumllP&#xA;K5uvTkYt8NOTyAEkcffpkf3ULIpsvJOonktsLaCTjdJeC2ghTl9bHLkZSvJVjQcXr8S7+HxdKZDT&#xA;6oZQSN9+X6/vZ6jTSxEAvTvy58z3er2lxa3jGWezK8bgijPG9QOVP2hxzF1eEQII6ssMyRuzHMNv&#xA;dirsVdirsVeaebNRumv7hZkluEExgSGPoqFuIJFRRafaObDNPFhwCUo8QNOo0uPPqNWYwnwyF/L3&#xA;fjvY5qvnzVrLTDBpN2FmmpC9m6pLKjvQhSj81UBQ4bY70y7hxZoiVbEJwQz6fJKMibifteS/mToi&#xA;6pGrzQfVrm2tv9FjS5NxQgsx5jm4Uu3agNKZj49BCECI8+92Go1s8sgZcu59eaPdNd6RY3bV5XFv&#xA;FKa9augbt88wW1GYpdirsVdirsVea+ddUn1bUWtbb/eOxZozvs0w2c/7H7I/tyGXUQxGpc6t2Oi0&#xA;k8keKPekllBcQciyAluI4hh0rv8Adkodr4sYJHqPyatb2Bm1BiCREC7PNkMdvoyxpLZ2yROdnZGd&#xA;m6bg83cD6MHY+bUZZSNACtjW1/2NPbGPHjAiSSb3FrLieCCMySNRFBLE9gBXN5m1YwxvLQvbbf8A&#xA;Q6jTaOWeRGLpvvsqaZfNJaxDTZGFvc0ljSKqhzIORbiKbtWpyOmhiMOIAVZ+9dTLKJ8JJugyLy55&#xA;Sg0mGpleSaSVriXkan1H3pXwWgAptQZzcuz4DLxgmgdney185Qoj1EbshzMcN2KuxV2KuxV2Kvlr&#xA;zJ5d1jSPNU+mvC7XMk5FmQpPrLI1Iyn83KtPntm7x5YmHF0dfKBEqZJ9S1Sy8nzadqFqbS8dZBa2&#xA;rAiR1qZD8JNa/a6dsxx2nh4+C9+/p80S7GzkjMB6e699vJmg/K61udE0qfT3TT5jZwfW45VIDylA&#xA;S7Hs5JodshDVkEg77t8sIq+SSXflDWdKkkijBvqtyZkcFFqB8KKQrAf59Sc1v5rEMshkmY/1gfvd&#xA;rEyOKPhx4vcQpjQb69ZTqLfUmWiqfT9Qsp8Qjcq7eFPcZl6PNghYw3O+dcg4+sObLRy1GuT0byNY&#xA;6HY2MkGnu73LcXu2mXhITTbbpxWvYnHUSnI3IUGiEYx2Btk2YzY7FXYq7FXYq8v165iGs3sikBPX&#xA;dHU7fGhoaH+GbaEsUsXBLcVu6Wen1Ec3iQBBBsEU86v/ACHqlxdTT2NzFeRuxdnY+kwLGp5cwErv&#xA;2bI484AoRlQ22Fj7HZTwSl6jKPFLc8R4TfXnsg5fy48xzzDS0aGO/u4yYIxKrPxao5gdDxoT1zHy&#xA;dpRNiIN+5uj2bMbyIA976bsrWO0s4LSL+7t40iT/AFUUKP1ZhslbFXYq7FXYq7FXgVhqd+skgUq/&#xA;qMZHLgnc9TsR1zZavszFnIMrBHcjR9q5dOCI0Qe9L9T86avYXRhe3iJoGU1YqVPcfZPbK9P2Vhxn&#xA;lxe/dGt7Wz540JGH9U0p23nrUbaVblQktm7KbqFRxZXO7UqWpUdDmfGHBEiG3d3D9jgTn4hHHZrr&#xA;1Px72f6Lqvl7zJat9WkdmjKtLbueEiEGqk8e1R2NM5TtTXaqHpzRgY9DRr73fdn6fDfFilMS67/s&#xA;ROo+VIEuoNS0iVra7iKvGzbxmRKGhX9n8dshp+3px2yDigfgR/Z+Cyy9lxlvE8Mvx+P0Iy2/MTU7&#xA;Wb0NZ09FcEcngYj4f5grcgf+CzeYcOPNDjxSsOqyTljlwzG7NLXUbG6iMkEyuqqGehHwhhyBPhtm&#xA;HbYJA8klvPO1jHefUrOJrq45iP7QRKk8dmPI9fbKzmF0GqWcXQ3ZHlre7FXYq7FXkH5j+YNcTzBp&#xA;dvf6LCBBPJNp7C4VzKqOp5V4/uzRBmT4EZ45ASqxR272OPKYzHpvfb4JLq+ta7qTJdDSY41t2ULW&#xA;4V2DsrCoPFf2a9Mw9J2biwg3LiPu/a7DJrM0thGh72ZHU/zAufLlvEfL0JtvQiKzi9jBZQgoxXj3&#xA;60zNGTFiPGZbDydTnwTzAwqiUojvfO1sE4aKgWtCpu4yDXpX4ds0+ty6TUzMjOtv5p6Ow0Gn1Glx&#xA;iHDe/eOqIF553uZEj/QERYmigXkY3PzU5Z2TqNNp5kRyGXHW3CR7l7RwZs0QZRrh81S98xebvKVp&#xA;Jqt/5ejWCqxF/rqPTmdhxRK9s3+XJHPUQXUY8Zxbl6BoV3rdzZtJrFgmn3QchYY5hOClBRuQAA3r&#xA;tmtmIg7G3NiT1TLIMnYq7FXYq8T1W6lnvrjm5ZBNKyLWqjk5Jp88uDmxGyd+ittNDHCPSj+sSxlA&#xA;SQyqr0LVrv8AADX+G2bfSRrGPN0GtnxZD5Jrp0pjvrd60AkWvyrvluaAMD7nHxSIkPezzOdd07FX&#xA;Yq7FXYq7FXzvZki4A8ag/dXOidYUl84zVureHiBwQvy7nmaU+jhgKAk0Pw2ly/ZuEVP9Zudf+SeB&#xA;WT/lbdGHzUkVdrmGSMj5D1P+NM0ntBj4tNf80g/o/S7PsmdZq7wf1vaV/wB5ZP8AXT9T5xA+k+8f&#xA;pemP1D3H9DD/ADbT69D4+kK/8Ec7L2a/uZf1v0B53tr+8H9X9JTjQ9F1XToruS+BgsLm3eAysQSr&#xA;SAcGYKSeNdq+/wA6Y4gQTbr8eOQu+VJJEbjQ9URrqJWvYisjxEepSoqteNaUB2yneJad4S3ZVpf5&#xA;ipLMI762KKx2liV9t+6t/A/Rl0c/e5EdT3szVgyhh0IqO3XMhy28Vdiryn824DJ5s8tgNTmlwB7U&#xA;of45eMnBhnLuplgx8eeEe+/uSiSweOgLih329s1R7UHSL0ceySecnqLJ9U8t2dtWp9OJCfktT+rK&#xA;u08v7n+tX63V6WH74+VpX6HrAqei/H/wB5fwzQ4rs13H7naTqt+8Kto3G6hbwdT+OHTyrJE+YY5h&#xA;cCPIpb+dn/KCy/8AMRD+s53Wj+t5bP8ASz3MVudirsVdirsVeFSNzkZ+nIk0+Zy5z2W33D6xE52A&#xA;nJFPFlZf+Ns3uIVEe55bKbkT5qqMVYMOqkEfRlhFhrBehggio6ZzDvnYq7FXYq7FXYq+el/46L/6&#xA;7/xzoY8nWSY75w/46cX/ABhX/ibYlASz6rN+jfrW/per6ZFdq8a1pgVM/JE3o+bNMfxmCf8ABgp/&#xA;xtmv7VjxaaY8vu3czQSrNH3veuaLbPyIFXShJA7NnnsRcT7x+l60n1D8dzDfNTq+opxIIESio3/a&#xA;Y523s5EjTm/55+4PN9sG8w/q/pLNfOGvSaZplvbC3WZL+GSN2ZiOICqDsB/l5Exu048fEEh0We08&#xA;y362NzaejOsLyvewt8bFWUEupBB5M+Vzwghjm0satmek+WtL03i8UfO4C8WmYkk716V4j6BgjjAa&#xA;oYhFNcm2uxVQvrn6rZXF1x5ehE8vGtK8FLUr9GSiLICCaDxLzD5sl8xea9DeS2W3Fv6wUKxavNa7&#xA;1A8MyNdg8PTT35197PszJxaqHx+5lWkaDPq16gpxtIiDPJ7V+yPc5y+mwHIfJ6/W62OCH9I8mY6+&#xA;wHoRjYAMafcBk+15fSPe6Ls4fUUJp0fM3HtC9PnmFoocXH/ULlaqVcP9YIRTxYEdjXMMGjbkkWED&#xA;+dhr5FlI/wCWiH9ZzvtH9byWf6We5itzsVdirsVWyNwjZxvxBNPkMVeE5c57J7i7tjHGDKplWWIF&#xA;Wb4qlwp269zm/HJ5SXMq316ypX6xFTx5r2+nJWxp6NauJLaFwahkVgR0NRXOamKkXeQOwVciydir&#xA;sVdirsVedS/lPL9ckmh1FRGzsyI0RJAY9CQ2bGOv25OKdP5oiHyvbaeotrxI55A3IyheoPz60zlO&#xA;2dXKWfYkCg9D2XDgxbcySoR+SrFrmS9gkQW8DiX6oYgPfajEUrmdHtYz0cob8cY1f6XDloeHUCX8&#xA;JNqs2haTLC0Yt0hY7pJEqqwbxrTpmiwa3JCVkmXkS7fJiEgllz5K1fVLZYIY7V/q/wAKTep6UgB3&#xA;qwkYK3Lv1zo9Hq4ZQTEUeodbnj4Z36omP8uPMT20EUuo2SRxKFEQhYMAKmhkiiPLc9eRr75n485g&#xA;dnByiE+YZN5r8tXes2NpFA8Uc1uanmX4EFQDQ8a9u65QJbsscxFCeT/J19o2ozXl3LE/OH0UWIsT&#xA;uwYk8lX+UYylacmQSDLsi1OxV2KpX5pfh5a1Q0rW1mX/AIJCP45bg+se9hk+kvAgHttW0e8m2tmk&#xA;nVDTeqovI/L4hmfrsRyY5Qj9RA+9j2fmGLNGcvpBP3PUfJvnHRrdpLG7kFuZX9SG4dl9MigFGNfg&#xA;O37WarTdnzx4+89R+Ofwc/tDXwzZLHIDbz/Uj/N3mGztpoDFWcuuzIRwoN9mrv1zB1nZ5zSBBqnI&#xA;0OYQBBR/lC4i1DTpbtVZC7GFlNOwBqCD/lYNLoPCuzfEw1moEpADkEjj1RWv/SaOln9YNuZw6FwO&#xA;RQOUryC1HU5jfyMb+rZzDrRw8vU786l4+Q5FrWk8Ar9JzotCKmB5PP6g2LZ9mM2uxV2KuxVp1Doy&#xA;nowIP04q8L1e90y0ubm3ht5gbdpI/UkmVgWQlQ3ERLtt0r9ObOGksAksJa4jotvfP+jwaZpkbpIZ&#xA;gji5eIq4MiSck2Zgx2oa9O3bbG1Wn1HF+6ma8y5Gj1OlAIzQBvuH4KbaJ5qil1HSl1C0mhs9Sljj&#xA;gkcxUYyD4ahX5AVIyMRrBucgIHPb/jqMktDIERxyEjy3P/FPYEVUUIooqgBR4AZQTZtqApvAl2Ku&#xA;xV2KuxV2KrJIYpRSRFcduQByE8cZ/UAWUZyjyNNR21vFX041WuxoBuMjDBCP0gBMsspcyWvqtt/v&#xA;pP8AgRj4GP8Amj5J8Wfefmujhhj/ALtFT/VAH6slDHGP0gBjKcpcza/JsXYq7FXYq7FXYqpXNtb3&#xA;VvJb3EYlglHGSNtwQcIJBsIItinmP8ttM1m50tklNja6YJVFvCi/EJaHYnpuKnY1zIxaqUbPMlqn&#xA;iBpQtPys0y3dm+stNy2AkXp8uDJleqzzygAHh937W7TiOMk1aKX8udLHV6/Q4H/E8xODJ/P+wOX+&#xA;ZH837U+0XR7fSrQ2sH2C5fv1IA7lvDxycBID1HiP47mjLMSNgUkr/l9pLsXY1diSx+Pcn/Z5jjFn&#xA;H+U/2Icn81D+Z9qK81+U4vMXl79DTXLQ0aJvrAHI1jIrUE9xXvmdgyHGQeZcDLESvon+QZOxV2Ku&#xA;xV2KsC1L8qbe7vri6TUWiFxK8vpmIPx5sWpXmvSuZ0dcQAKcc4ATzQp/Ju2egm1L1IwQSjW4oafN&#xA;zjPXSIoBMcABR9v+UfleCdJ0hRZUZWVlEm3E1BAMrAH3pmsvUHnlNe4fe5l4ukBfvLOMtanYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXnP56fmbf8A5f8AlCLUdNgin1K9uVtbYThmjQFGd5GVShagSgFepwsSaYp+WH5v&#xA;+e/Mdzpt3rf6PSx1CUW6WNlazmT4iEDvO0rJG1T6nGjfB1C8gcxZaip8NOVDSyljM3uOZLjsT/Mz&#xA;zL5g8v8AltbvQbSK61G4uoLSNrkOYIfXbj6soj+MgGigA7sR8iQBe5pjIkDYWfJr8tr/AMy3ekXv&#xA;+Ir2O+1CG9kjEkVt9VVI/TjYRhCW5BSxo/cePUjiifpNhlwTj9Y4Sy3FWldGJCsCVNGANaH3wApM&#xA;SObeFDsVdiqUa35w8qaFIsWtaxZ6bK6GVI7qeOJmQNx5BXIJHLbFFpsCCAQag7gjFLeKuxV2KuJA&#xA;FT0xVi+pfmf+XunSWkV15gsg99N9WthFKJqy7bMYufAbirPQe+KLZRil2KuxV2KuxV2Kvk/80td8&#xA;4W3mHUPOGiecJ49OiuCthbxXDNHQMQoSIkRtHReLLxPxdRQk5jwz3Mxpy8ukrGMgIqvx+r3vd/yY&#xA;vbO+/L2xuLbXbvzIHaX19RvwwnMvM84yrl2UJ0UFm270zILhxYn+V/lrzTpHnZ5bW+uZfL89vONa&#xA;s7+aaYpdJIBC8Qm+IF/i+IEqyA9+JynDlMrty9Tphjoh7LlziuxV2KuxV2KqV1dW9rbS3NzIsVvC&#xA;pkllY0VVUVJJwgWaCCafN/5x+a9K8+S2lits36L02V5IZGYq8rMvHkQKcVp0HX9WbHFowB6nEyZ7&#xA;5IfyZ5t/w62nRWunpOLI8Ioi/FWQ7AAEGj/5YO5+1yyufZeOU+MbOTDtPJHF4fR7doP5m6BrlmZb&#xA;PlHdJQTWsw4lK1oeQqrA02ofuzWdozlpgNrtytFg/MXXTms1jzXbLEtve3EUMd4fRj2PEu2yryH2&#xA;WJ+zuCT03zR/ns0+mzuIaGMCDvavoNw+k2a2u06c3dpCFRiXYt+wFXavhv3qanDj7UMT9Pp+1hn0&#xA;Yyb3umF7r0bRNHAhJcEMz9BX275sjrBKPp6tODs03czskvkLyZqWhXt5eT3SG3vV5raxJ6YEjsXb&#xA;kNxxj6R03oSDl+GB5lxdVkiTwjfdmuXuG7FXhuu+ZtdudXuna9mjUSuqRxyMiKqsQAFUjN5iwxER&#xA;s4E5knm8+1vyBDrus3Oua1qE9w8oihs7eaT4WJogjLymMBVJ5hVep3oKj4tH2lKcMgER9TuOzsGP&#xA;JjMpH6fx+N2Yx6zqkKiKK9uPSQBYx60goq7Do3hm+jjjQsC3TTluaOytDrOtTTJEL6dS7BeXrS7V&#xA;7/a7YyjCIsgUseKRoWS9IdtEPr6Wk9wlyYVl/v5y6seS8uRkrVaA0rx36ZqvzY8MZPDluaqh+K83&#xA;L/Ly4zDjjyu7/G7zI63rQJH6QuTTv60n9c23hx7g4fEe9ZNdarqcEunTXtzJDeRvBKnOR6pIpVvh&#xA;BqwoemY+riI4pEAXTfpfVkiCdrYRL+UtpYeZrbVvqcsWnPH9ZMEwZFW4LDiqLxSiqQTQk+HTNV2X&#xA;+8Pqrb5uw7UxRxkcF7/Y9k/LfX9Xk8wpZT3Uk9vcI/JJXZ6Mi8gy8iaHambPWYo8FgbuuwzPFT1f&#xA;NU5bsVSXzNfa/a2q/oW1W5uH2q4JVakAEgGu1a/RmPnnONcItzdHixSvjNd3RiGnefdf0+5NtrKR&#xA;3HpOyS+mCrABjQjl3A6qa798t08ZcHq5s9VigZeivhyKJ80ec9QmMtppqvbQxosk05IEhR+PHjQ/&#xA;CDzHTfLxFx4YxzLzny7682gPp8kavAJXSVGjSshHIgMxHJxQNsSemW6ngGS9rIXSCRx1vQJR/kSx&#xA;1Dy7c6pDpmoyw6JeBZItIFPSgmZiZXhJ3jDbfCtB19qX6TDGRJPR0/bGSeIDg2Ek2awma/tZLK4a&#xA;2nheW4REZ0E0pHLizr9nk27Ghr4HDrcscAsQviO7X2Vjyau4SnXBH0/j4bvR/LesyX0TwXNBdwfa&#xA;7cl6cqfrzH1GKIqUfpLfpM05XCYqcU6zGc12KuxV2KsW8/yQTaYumTIJIrs1mQ/yoQR/w1D9GYWs&#xA;1MsdcJou17L0ccpkZi4h4p518n2WhWlreI7qdQL/AFa1Y1KrHxLSV68fioAfnXN12ZqsmWFzHxdV&#xA;2rpsWLJWMnz8mM6YvLUbVeSrWaMcmJCj4huSAdvozYzmIgyPR1sYGRER1es+QPIOqwWcwZ4SZnD+&#xA;srMU4cRxoeNe5Ocvr5HVTHB9MR1er0BjosZ495SPTuTPVPJVheyILqVzJbv8DJQDaqsOLc1+IMQd&#xA;v1Zz8s5hIgOylmGQA0yGys2nlit434AftEV2UZDTYfFnw97jZ8vBHiTu10K2ikEkhMrjcA7LX5Z0&#xA;WDSCAF706zL2hOQobBMsy3AdirsVeL2umRG9urqZQxaaT01PQAOd86HH9Ieb1uoPFwxTu3+pi2ma&#xA;44LQVSRqDjRSa1znu2shhnwyHIHf5h3XYGKWTT54jqK+YKS3Fhp+pxCeCRW5V43ERDKaGhrTY0Ip&#xA;m/xZoZBcTbo5eNppcMxX46IC80ER6XchL17W5ZDwu49ijDdKCtSOVKiu4275yuo7QnqpiEY+m+Xe&#xA;+h4OzYaXEckpVKufd+PtSwSiRkMss0UlQ0lzbuVkLH7Rq5k6kk0r+G2biegmcYjxXXTv+PP73SQ1&#xA;8BkMuGr6jmPhy+5m2n+VdGurW0uZxI5dEaQiQ/GKDckitSOpzmz2xnwSOMUBE1XOvi7XJoMWb18y&#xA;QN+V7c6T2x0nTbKCQ2kCx0KqG/aoa7sxqT0zW6jV5M1mcjL8d3JyMWCGOhEAIh7Z5bd3kj5wE8HL&#xA;Cqknsa9cxo8Q9YvY824mJ9J+TF/KmnJp/wCYcdvH/dBZGjr/ACtETT6Omd3g1Rz6QTP1dfgXl82A&#xA;Ys5iOT1bMZm7FXYqxbzF5Es9Sla6tHFrduaybVjcnuQOh9xkhJthlIYfrOgny9DCmoXMfPUpBbxC&#xA;MO3Rg1KkChJ49sr1GYwjxAW5mlEcs+EmkkKQWbLOJILYBpWt5JJY4WPMDkyh2UsaNsfc06nLhglI&#xA;AzibodGr81iEiISjVnqmGmLbsrTx3UNy7GjiGRZePf4mUkVOZ2gBs7EAd4p0fb+QcMACJE2djatf&#xA;TLbW7XpFWsgbhKbGsakkf7JaqfY5m6jEMkDE9XS6DUSw5ozj3ojR/PGmXvmLQYtKmaSe4nZbmHiy&#xA;lYWhfkr7U2fi238uc/p9Fkx8RkNq/S9vrtbiyxjwne/0PVsLhOxV2KsX1jzNqyXctlpll8UR4vdz&#xA;7JWn7K7V+f4ZjZtXjx/Ufh1cvDpDMWx29g1q4uEe6YXDfAZp3bggj5/vFXjQgha0oKV+nNJm1QyS&#xA;4h8B9zv8PDjxcMdil3nTVLTV7pYzHFcRRwrHzZeVGDEtwr8O+24+/Ok0k5+GCfTJ0U8MbI5i2O6Z&#xA;5c0yG8h1QRCOK0lRno2xO5ChCTUkKfbMrJllKJiTzao4IRmJAbh7bpltpek6PFHbyBLCGMETyyFq&#xA;rT7byOd6+JOYkMdbBqy5DI3J45rfmPU7e+u5dP1B5bZ7mRoHIBURc24BQwNQafhmzHZGmnEGUBfX&#xA;8Bxfz+aJoS2TLyN57vhr9vBqsqyW9z+5WTiqFHc/ATxAFCdjlM+xsOP14xUh5n9LZ+fyT9MzYew5&#xA;hs3Yq7FUj83+Zo/L+l/WuAlnkb04IyaAmhJLHwAGX4MPiSpryT4Q8f0vzZFd3JRyjKWPJgCCvI9d&#xA;+oyWu7OlKJljnLi7r2/Y5XZ/aGOEhHJCHD38O/7WRwXemMx9a5CKv8oLE/cDnPZuz8wAP1E+fJ3+&#xA;PtTGSRGJiB1Iq/hz+dJVJfRWX7qwt1aDdiVqvxkmpIpUk9a51ulOLFARifm8PqtJqNTMzy7Hyrl8&#xA;/v3Se8v7q6b982y9IxsAflh0mjw4R6OffzLna3W5sx/ecu7kENmY4Ka6QnmCnLT2lSOvUNxQ/Qx4&#xA;nMfNosWb64iX472zHqp4/pkQy3QbnW4ppGv5DwLFVVir1RQKMVA4glq/RTvnMavsnNuMeOIHlX6S&#xA;9Dh7R03Dcpky+P6Amlzrdp6ckslx6vpKWIryNFFdvuzVY+zNRllW3+mj+tsPaeniNj9h/U88Tz1L&#xA;b+a47+JUF2P3ccLBinFl4hSQRuQc7TT6GGHB4d7c7dBn1RyZON6DpfmzVtT8xQRofTt2fg1sKFQv&#xA;GrValSQN65pRkJltyYRzSlPyZ3mQ5jsVdirE/MEEd9fn1CwWEBFVaU2JNdwd981WTtnJimYxjAgH&#xA;qD+tzP5JhmiJGU47fwmv0PN/zB8syLHaXGnwNdT8miKsA4VWq9QtAvXbfNv2R2tk1OQxmIihe1/r&#xA;Lrtd2bi0kBKJO5rf3e4ITRtO1CyBhv4xa3UxVxFFwCqrqpj2jPHcGvjmXq85ux/C3aLBGULIviRs&#xA;TwSOIr1PXtZCBOjFgSnRgCpBFVJykmRINnZyvCiAQAN3pvl38v8Ayzod0L2wiZpqfundgQoZeNV4&#xA;hQTxJFWqdzvvjk1E5ii6+OGMTYZLlDa7FXYqteKJ/torfMA/ryEscZcwCyjMjkUm846WL7TPVtrd&#xA;TPaLVYBUJIF6gqpFSBuB44wxQErAFtkMsuRJovLLjUJ7iARTEPwblEQAoQEUZVVaKA2xoB2zJcgC&#xA;nWpDW91Ee6CRB/low3/4BmxUobzDqtzPpVhE5DizLRKGqQFPxIeNeJOzDcdMzdAfVIfjz/Q4Gvxi&#xA;hId+/wCj9KS2tw0vOGbk4YGlBUgAVIAHstR7gdq5tLdZXchZInjl4dWBHEjvXcEfPAkbvoPyjqN5&#xA;qHl6zubyNo7spwmDijFk+HnT/KpXOdzCIkeE2HZASA9QopxlaXYqxrz95fXWdCcBxHLacp0LV4kK&#xA;p5KaV6jMjTZeCXvassOIPnq31LSbCVWgSSTm6+oaH4Urv+GbaZ2NOJjIEhfJllpcWkycraRZFO5K&#xA;mpqfHv8AfmpkCObvISiRsVUOjMyhgWWnIA7ivjgplaA1JaSI42JFD9GGMiDYRKIkKKSW7avPrMGn&#xA;JJvO6qr8R9gndun7IrXNtiycYt0efH4ciHrsUSRRpFGOKIAqjwAzJcBq8mW1t5Z3BdIlLsEHJiAK&#xA;7D5ZRi1AmORB6+X48m3Jh4TzH6/x5sNg1+wv2k+qR3AiH2ZXhZkPtVOX40zntVpPDl6SK9+7MWkc&#xA;SaZe+ZreO1jJvJZkSIb8DLWgH39Ns2ePIfAPH9Vf2MwL2ZrbXc9hdvHpspkIJj+tqOPLf4uA+I/E&#xA;fD+zOfBo7KDR2epaIt8ulW4v2LXfGshPXckgH3C0BzMhdbuwx3wi+aOyTN2KsTuH5zyP/MzH7znH&#xA;ZpcUye8l6XGKiB5Jbq61t1P8p/Xm39np8OqA/nRI/T+h0vtFDi0pP82QP6P0sOu53N60lfiRgB/s&#xA;KAfqzo84BlIe9p0G2GH9UIbIOU9Q8ia+t/pwspm/0uzULv1aIbK30dDlcg4uWFG2UZFqdirsVdir&#xA;sVeV+ctLhTzJFbWEZM+oOwWBKUDgKSfYHlU+G+OmmchmK2hXXvcqUxCMb/iU7zyxq2kadPeXcSgP&#xA;xhXiwYpzNSxpt0HH6ctBtImCaCSW1pp93dQwagzraO6iV4yAyg7cgWDDbvt0y3HlMDYRmxicaes6&#xA;F5O8vaIC1jbD1mFGuJDzkIPUcj0B8BTIZdROfMuFHGI8kBc+S9EsI2u7C1CzozOWPxFVY1KpX7IW&#xA;u1O2Y2tzZJw57BzuzeCGTcc+qN8u3FGltydj8aj5bH+GYeknzDmdp4thL4J5mc6h2KrJYo5onikH&#xA;KORSjr4qwoRiCh8/+dfyZ1TQrO91Wzv47jS7ajiOTktwFZwtKAFG48tzUfLtmyxaniIHVxJ4a3UN&#xA;D/Jfzdqul2uqWt9aQxXUYliWR5lkCnpXjGR+OGepAJBtY4SRYTCPTZ9MBsLhle5tmMU8iVKtIh4s&#xA;wJAJqR1OYkpWbdviFRCD1P8A3V/sv4YA2I3yhp0c2qG+YfFaoVQ+8u36gcz9CDZ7nV9qEUO9moFT&#xA;TNiTs6YOYg1Pb+GQgOGO/wAf0speqWzBNc0/VPLeltqNu1pd6FPeNDbQcmMsTsGkKGg48QVam9c1&#xA;GbTY82Swf1OXLDKI9Qoo+28rwxa5DqtxKZJIHVxCoMYqmw+LkzD5g5giZEeEcnOjogOr0vypBpNy&#xA;kt3Dp8dtLFJwVlJYV4hvh5fZ+12yMYjuZHDGJ2ZLk0uxV2KsC80Ws9tqkjk0jnPOOh7UAP45kjW6&#xA;fFECY39zgnsjV6icpYz6f61IK70q9tbWG6lUehcAGNga/aHIV8Nsvy9rYoQEqJBcbTezuoy5DC4g&#xA;x52WKzms8h/yj+vMXj4/V37vSQw+HEQ/m7fLZNpvLdx/h601i3BkjcOLpBuUKyMob/VoN/DBe6BP&#xA;ekDp2qwaRcwX8krRsrgfAKsVrRgFJXlt70wwxTySqPJGbJGEbk9lsb60vrSK7tJVmt5l5RyL0I/z&#xA;6jK5RMTR5uGDavkUuxV2KuxVCrpmnrefXRAn1uhAmIqwDfa41+zXvTrghERutr5+aZSMqvou1Gxi&#xA;vrGezl/u50KE+BPQ/Qd8kFBo28z/AMPajbXBtzbwJLFQNOQZa1ANaSEx71/lzC1HaUMcjGiS7fDp&#xA;eOIkZbF6ZpaD9FW7GcTMo4ElQjHjtXiNhl+HPHJHii6vNjMJEEIggEEHcHqMtawXmnmH8zI9Ev59&#xA;M0jSIhNbOYp7u7LSOxXrwVSvEHt8XTtmdpezIcIl3sNTr8kzROyZx/m7o000cS2FxJ8C82tl9T4z&#xA;1HF+DUB+eDJo+EWZAe/ZrhlvYAlmltcRXMEc8RJjkUMtQVO/Yg7g+IOYVjpu3kVzVMVQ9/YWmoWU&#xA;1leRCa1uFKTRGoDKe21DhjIg2EEW3ZWdrY2cNnaxiK2t0WOGMVIVFFAKmpxlKzZUCtnm+q+WJrrU&#xA;rq5hnUrPNJIqkEbO5NNq+Oav+WYA1wl3MdIeEbqlz+WF/wDomaS+kS2uV4zQOSxURgN6isCFoTsf&#xA;ozZDP6eKjy5dXCOQcdAsdi1HTvL0BijmF+8zcmaIAKKClC3Jht4ZldnZdVME8AhH+ldn4bfjvcbt&#xA;CGnMhcjI/wBGqZV5N1PTtW1gxRyV+rJ652IB4kAD4qeNcunq83BWSAhxf0v0NM9FgibxzM6/o19r&#xA;E/PPmGC41gW+hzMLSHkhMRakkjHcg9x2WnzHXM3Hi44fvd/IuNHJ4crx+nzZL5B8k3kumTQ+Y7QN&#xA;psk0d1aWkxYSLPHUerxUgrVTQg9fCmYmrzxscB3bcWM16la90bU1u5glpMyc24sqMwIqaUIBGaun&#xA;YCQplHlCyuLTSmWeNopJZnk4MKGmyio/2OSDVkNlPMLB2KuxVjnmW3huriLmOSRKRUHoxO4NPkM0&#xA;PamY8YA5Afa7vsyRhE+ajqeqaTaeWuGozxxhAqwxMRzYIQFCr1PT+uZmmxZdTp+GO8v1OLlzxwaj&#xA;j+PzeSz+YmS+leGFPQaQsFq3LjWtOStSvyzpcfZkRACRJIHwdYe0pGRIAo++3vdjYW9lZpaQ8jDH&#xA;UDmSx+IljUn3OawCuTOUiTZeLfmXJYv5oe1sYlX6siQlYhReX2ioA2rV6bZu9FGse7gZyTN6J+XH&#xA;lq/0TRm+vSt612wl+qV+GLb/AImf2s1+szCctujkYYGI3ZbmI3OxV2KuxV2KuxVjHmG18wNqHPT7&#xA;JLmBlFX9RUIYbEEMVzX5+zo5ZmRNOfp9XwQpAJa+c0YMmnxqw6ETID+DZVHsuMTYlIFulrokUQGW&#xA;aW2oNYxHUEWO7ofURDyA323HtmzgCBRNutyVxbckovfJGiXmqT6jPAjzT8SxZQ26qF6NUdF8MhlG&#xA;aWwySjHuDLHKEecAT5pha6BplsAscXwjopoF/wCBFF/DKBocd2bkfPdsOrnVDb3I+ONI0CRjii9A&#xA;MyoQERQ5OPKRkbPNdkkOxV2Kpdf6RHOTJDSOXv8Ayn50zW6vs6OTeO0vsc7T60w2luEs1HyvcajY&#xA;yWN1KDbyijAO+1CCCNuxFcq0uk1GGYnGQ29/6mzPqcOSJiYn7GO/8qX0z/q4z/8AAJnUfyjLudL+&#xA;XHemWgfllY6Ut4GvZZ2u4Wg5KojKK6lWIoW3+LMXU5vFlGRH0Gw24omAkB/EKTDyz5D0LQaSxJ9Z&#xA;vR1u5gCw/wBQdE+jf3yWbVSyeQRDEIskzGbHYq7FXYq7FUNe2stwiokpiWtXoKk+HcZi6rBLKABL&#xA;hDfgyxgbItAjy+vecn5LT+OYA7HHWX2OYe0j/N+1h+r/AJT3epatcXj6oscUrD01MZdgoFAPtKM6&#xA;TR6iODFHGBdOozxOSZkTzdb/AJL6epH1jUpZKdQkapX7y+XHtGXQNX5cd70fNc5LFtP/AC/0u18z&#xA;3Wuu5neaQzQQuNopXJZ3r+1ufh22zKnqpGAg1DEBK2U5itrsVR36Iuf5k+8/0w0x4g79EXP8yfef&#xA;6Y0vEHfoi5/mT7z/AExpeIO/RFz/ADJ95/pjS8Qd+iLn+ZPvP9MaXiDv0Rc/zJ95/pjS8Qd+iLn+&#xA;ZPvP9MaXiDv0Rc/zJ95/pjS8Qd+iLn+ZPvP9MaXiDv0Rc/zJ95/pjS8Qd+iLn+ZPvP8ATGl4g79E&#xA;XP8AMn3n+mNLxB36Iuf5k+8/0xpeIO/RFz/Mn3n+mNLxB36Iuf5k+8/0xpeIO/RFz/Mn3n+mNLxB&#xA;36Iuf5k+8/0xpeIO/RFz/Mn3n+mNLxB36Iuf5k+8/wBMaXiDv0Rc/wAyfef6Y0vEHfoi5/mT7z/T&#xA;Gl4g79EXP8yfef6Y0vEHfoi5/mT7z/TGl4g79EXP8yfef6Y0vEHfoi5/mT7z/TGl4g79EXP8yfef&#xA;6Y0vEHfoi5/mT7z/AExpeIO/RFz/ADJ95/pjS8Qd+iLn+ZPvP9MaXiDv0Rc/zJ95/pjS8Qd+iLn+&#xA;ZPvP9MaXiDv0Rc/zJ95/pjS8Qf/Z"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:e7cad905-84ab-614b-b57f-a6800ca71a70"
    stRef:documentID="xmp.did:e7cad905-84ab-614b-b57f-a6800ca71a70"
    stRef:originalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:70f8aa99-76da-7d40-aa1a-1c7a0e09fb88"
      stEvt:when="2021-11-02T18:45:28+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.2 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:e7cad905-84ab-614b-b57f-a6800ca71a70"
      stEvt:when="2022-01-17T14:47:31+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.2 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:3da07ff8-e058-0147-976e-e55d70f58372"
      stEvt:when="2022-01-17T14:47:35+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.2 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="687.473183"
    stDim:h="400.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Default Swatch Group"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                 
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
687.473 400 li
687.473 0 li
cp
clp
687.474 400 mo
-7.35729e-06 400 li
-7.35729e-06 0 li
687.474 0 li
687.474 400 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.917647 .878431 .878431 rgb
f
126.542 306.264 mo
126.542 306.264 108.701 310.29 99.3511 310.284 cv
90.0019 310.278 99.9502 324.48 99.9502 324.48 cv
99.9502 324.48 132.479 329.032 132.544 320.345 cv
132.609 311.657 126.542 306.264 126.542 306.264 cv
cp
.976471 .639216 .560784 rgb
f
159.028 324.067 mo
159.028 324.067 170.697 342.835 173.812 351.65 cv
176.925 360.466 186.865 346.038 186.865 346.038 cv
186.865 346.038 177.351 310.32 168.388 309.258 cv
159.761 308.236 159.028 324.067 159.028 324.067 cv
cp
f
99.9502 324.48 mo
92.7319 324.683 li
91.4292 309.825 li
99.3511 310.284 li
99.9502 324.48 li
cp
1 1 1 rgb
f
84.5991 307.796 mo
79.7964 307.546 li
76.3057 307.365 li
70.0146 347.162 li
70.0146 347.162 71.5644 347.465 73.5102 347.312 cv
75.7988 347.126 78.6357 346.304 80.1269 343.597 cv
85.2446 334.307 91.5952 326.925 92.9863 325.903 cv
93.6152 325.438 94.0034 324.664 94.0078 323.836 cv
93.7236 311.169 li
93.729 310.027 93.0107 309.065 92.0059 308.868 cv
88.7275 308.225 li
87.3677 307.958 85.9863 307.813 84.5991 307.796 cv
cp
.360784 .411765 .647059 rgb
f
79.7964 307.546 mo
76.3057 307.365 li
76.2812 307.521 li
73.6938 307.112 li
72.9619 311.742 li
75.5493 312.151 li
74.8931 316.303 li
72.3057 315.894 li
71.5664 320.57 li
74.1538 320.979 li
73.5508 324.793 li
70.9634 324.384 li
70.2236 329.063 li
72.811 329.473 li
72.167 333.546 li
69.5796 333.137 li
68.8398 337.816 li
71.4272 338.226 li
70.7451 342.539 li
68.1577 342.13 li
67.4268 346.753 li
70.0146 347.162 li
70.0146 347.162 71.5644 347.465 73.5102 347.312 cv
79.7964 307.546 li
cp
.968627 .701961 .411765 rgb
f
85.6059 334.857 mo
85.5098 334.857 85.4199 334.798 85.3862 334.701 cv
83.6553 329.736 li
83.6128 329.615 83.6772 329.482 83.7983 329.44 cv
83.9204 329.398 84.0527 329.462 84.0947 329.584 cv
85.8257 334.549 li
85.8677 334.67 85.8037 334.803 85.6826 334.845 cv
85.6572 334.854 85.6313 334.857 85.6059 334.857 cv
cp
1 1 1 rgb
f
87.9463 331.792 mo
87.8501 331.792 87.7602 331.732 87.7266 331.636 cv
85.9951 326.671 li
85.9526 326.55 86.0171 326.417 86.1382 326.375 cv
86.2612 326.333 86.3921 326.396 86.4346 326.519 cv
88.166 331.483 li
88.2085 331.604 88.144 331.737 88.0229 331.779 cv
87.9976 331.788 87.9717 331.792 87.9463 331.792 cv
cp
f
89.3955 331.134 mo
91.3418 331.363 93.7417 331.423 94.1201 330.888 cv
94.144 330.854 94.2075 330.764 94.0845 330.534 cv
93.9609 330.303 93.7637 330.151 93.4809 330.071 cv
92.3735 329.754 90.4224 330.616 89.3955 331.134 cv
cp
91.4477 337.78 mo
91.2363 337.78 91.0264 337.741 90.8188 337.663 cv
88.7632 336.89 87.7329 332.414 87.6904 332.224 cv
87.6597 332.089 87.7446 331.955 87.8789 331.925 cv
88.0151 331.896 88.1479 331.979 88.1777 332.114 cv
88.188 332.158 89.1909 336.517 90.9951 337.195 cv
91.46 337.368 91.9365 337.273 92.4517 336.899 cv
92.9302 336.551 93.1455 336.166 93.1108 335.722 cv
92.9863 334.137 89.73 332.14 88.4829 331.502 cv
88.4526 331.487 88.4253 331.466 88.4028 331.438 cv
88.3901 331.424 88.3799 331.407 88.3716 331.391 cv
88.3496 331.347 88.3413 331.3 88.3457 331.254 cv
88.3594 331.168 88.4014 331.102 88.4687 331.063 cv
88.6074 330.982 91.8638 329.094 93.6172 329.59 cv
94.0312 329.707 94.3369 329.945 94.5259 330.298 cv
94.7476 330.713 94.6494 331.005 94.5283 331.177 cv
93.9643 331.975 91.4463 331.856 89.8213 331.686 cv
91.2319 332.546 93.4888 334.151 93.6094 335.683 cv
93.6582 336.306 93.3677 336.852 92.7456 337.304 cv
92.3101 337.621 91.8755 337.78 91.4477 337.78 cv
cp
f
186.865 346.038 mo
189.623 352.712 li
176.202 359.217 li
173.812 351.65 li
186.865 346.038 li
cp
f
116.908 303.222 mo
122.369 330.375 li
127.374 329.861 132.289 328.853 136.491 327.099 cv
147.917 322.325 153.08 311.545 153.08 311.545 cv
138.146 290.266 li
138.146 290.266 130.294 299.714 118.439 302.841 cv
117.934 302.974 117.429 303.098 116.908 303.222 cv
cp
.360784 .411765 .647059 rgb
f
176.736 366.322 mo
178.212 370.899 li
179.286 374.226 li
218.716 365.94 li
218.716 365.94 218.447 364.385 217.611 362.621 cv
216.623 360.548 214.845 358.189 211.784 357.76 cv
201.282 356.283 192.123 352.976 190.672 352.04 cv
190.015 351.617 189.153 351.529 188.377 351.82 cv
176.641 356.595 li
175.572 356.996 174.928 358.01 175.102 359.019 cv
175.667 362.312 li
175.903 363.677 176.259 365.02 176.736 366.322 cv
cp
f
178.212 370.899 mo
179.286 374.226 li
179.44 374.193 li
179.979 376.757 li
184.566 375.793 li
184.027 373.229 li
188.141 372.365 li
188.679 374.929 li
193.313 373.955 li
192.774 371.392 li
196.553 370.598 li
197.091 373.161 li
201.728 372.188 li
201.189 369.623 li
205.225 368.775 li
205.764 371.339 li
210.4 370.365 li
209.861 367.802 li
214.135 366.903 li
214.674 369.467 li
219.254 368.505 li
218.716 365.94 li
218.716 365.94 218.447 364.385 217.611 362.621 cv
178.212 370.899 li
cp
.968627 .701961 .411765 rgb
f
197.427 359.467 mo
197.355 359.467 197.285 359.437 197.235 359.378 cv
197.146 359.272 197.16 359.114 197.266 359.025 cv
201.289 355.641 li
201.395 355.553 201.553 355.566 201.642 355.671 cv
201.73 355.776 201.717 355.935 201.611 356.023 cv
197.588 359.408 li
197.541 359.447 197.484 359.467 197.427 359.467 cv
cp
1 1 1 rgb
f
193.729 358.371 mo
193.658 358.371 193.587 358.341 193.538 358.282 cv
193.449 358.177 193.462 358.019 193.568 357.93 cv
197.591 354.545 li
197.697 354.458 197.855 354.47 197.944 354.575 cv
198.033 354.681 198.019 354.839 197.914 354.928 cv
193.89 358.313 li
193.843 358.352 193.786 358.371 193.729 358.371 cv
cp
f
194.876 349.198 mo
194.82 349.198 194.731 349.226 194.609 349.365 cv
194.437 349.563 194.365 349.802 194.391 350.094 cv
194.492 351.241 195.99 352.759 196.839 353.534 cv
196.362 351.632 195.563 349.369 194.928 349.206 cv
194.916 349.203 194.899 349.198 194.876 349.198 cv
cp
198.327 354.78 mo
198.246 354.78 198.167 354.741 198.118 354.669 cv
198.042 354.554 198.073 354.398 198.188 354.322 cv
198.226 354.297 201.942 351.809 201.934 349.881 cv
201.932 349.384 201.672 348.973 201.139 348.625 cv
200.644 348.303 200.208 348.236 199.804 348.429 cv
198.367 349.108 197.659 352.864 197.507 354.256 cv
197.504 354.288 197.495 354.32 197.479 354.35 cv
197.468 354.368 197.457 354.385 197.443 354.399 cv
197.412 354.433 197.375 354.456 197.334 354.469 cv
197.231 354.49 197.16 354.471 197.102 354.425 cv
196.978 354.325 194.053 351.948 193.893 350.139 cv
193.855 349.709 193.969 349.339 194.232 349.037 cv
194.542 348.682 194.848 348.671 195.052 348.722 cv
195.998 348.965 196.783 351.359 197.203 352.938 cv
197.504 351.314 198.202 348.634 199.589 347.977 cv
200.155 347.709 200.767 347.786 201.413 348.207 cv
202.087 348.646 202.431 349.21 202.434 349.88 cv
202.442 352.075 198.627 354.631 198.465 354.738 cv
198.422 354.767 198.375 354.78 198.327 354.78 cv
cp
f
178.212 317.254 mo
154.806 329.077 li
154.806 329.077 149.105 322.275 143.767 313.306 cv
136.059 300.355 129.847 290.614 131.851 279.483 cv
133.383 270.975 161.631 283.928 161.631 283.928 cv
161.631 283.928 172.557 304.748 178.212 317.254 cv
cp
.360784 .411765 .647059 rgb
f
130.713 246.132 mo
130.713 246.132 123.837 248.767 117.983 254.287 cv
111.955 259.972 109.285 272.923 109.285 272.923 cv
117.134 276.713 li
117.134 276.713 122.558 268.092 127.63 265.267 cv
132.703 262.442 136.979 260.851 136.979 260.851 cv
130.713 246.132 li
cp
.976471 .639216 .560784 rgb
f
168.853 265.573 mo
168.853 265.573 176.582 269.278 184.843 264.775 cv
192.796 260.44 199.163 247.868 199.163 247.868 cv
193.982 241.511 li
193.982 241.511 184.445 248.794 178.904 250.529 cv
173.364 252.264 168.853 252.952 168.853 252.952 cv
168.853 265.573 li
cp
f
119.854 272.445 mo
119.854 272.445 114.615 282.31 112.764 284.146 cv
110.912 285.98 105.446 290.925 104.78 289.58 cv
104.106 288.22 107.229 284.959 107.229 284.959 cv
107.229 284.959 103.849 287.982 102.783 288.104 cv
101.716 288.227 101.431 286.813 102.705 285.03 cv
103.979 283.248 106.953 280.19 106.953 280.19 cv
106.953 280.19 102.222 282.483 101.021 283.149 cv
99.4614 284.015 97.3237 283.066 99.9541 280.86 cv
101.706 279.391 104.843 277.164 104.843 277.164 cv
104.843 277.164 99.5122 278.369 99.1792 277.81 cv
98.8467 277.249 99.0723 276.729 100.38 275.878 cv
101.687 275.027 106.498 273.596 107.059 272.966 cv
107.288 272.709 107.795 271.943 108.317 271.124 cv
109.241 269.676 111.054 269.073 112.658 269.688 cv
119.854 272.445 li
cp
f
107.714 284.95 mo
107.65 284.95 107.585 284.926 107.537 284.876 cv
107.439 284.778 107.44 284.62 107.539 284.522 cv
110.633 281.455 li
110.73 281.358 110.89 281.358 110.987 281.457 cv
111.084 281.555 111.083 281.713 110.985 281.811 cv
107.89 284.878 li
107.842 284.926 107.778 284.95 107.714 284.95 cv
cp
0 0 0 rgb
f
107.064 280.624 mo
106.986 280.624 106.909 280.588 106.86 280.519 cv
106.78 280.406 106.807 280.25 106.919 280.17 cv
109.322 278.46 li
109.434 278.38 109.59 278.405 109.67 278.52 cv
109.75 278.632 109.724 278.788 109.612 278.868 cv
107.209 280.578 li
107.165 280.609 107.114 280.624 107.064 280.624 cv
cp
f
104.238 277.701 mo
104.137 277.701 104.041 277.64 104.004 277.539 cv
103.956 277.409 104.021 277.266 104.151 277.217 cv
107.627 275.917 li
107.755 275.87 107.9 275.934 107.949 276.063 cv
107.997 276.193 107.931 276.337 107.802 276.386 cv
104.326 277.686 li
104.297 277.696 104.268 277.701 104.238 277.701 cv
cp
f
191.784 244.736 mo
191.784 244.736 192.105 239.891 192.636 238.745 cv
193.166 237.599 195.686 236.446 195.686 236.446 cv
195.686 236.446 199.796 233.642 200.99 234.028 cv
202.184 234.416 202.449 236.631 202.449 236.631 cv
202.449 236.631 206.88 240.41 207.09 243.748 cv
207.3 247.086 196.965 251.094 196.965 251.094 cv
191.784 248.605 li
191.784 244.736 li
cp
.976471 .639216 .560784 rgb
f
175.074 269.093 mo
175.074 251.242 li
175.074 251.242 168.925 245.731 153.082 242.937 cv
136.979 240.096 119.854 249.873 119.854 249.873 cv
127.094 266.394 li
132.211 264.489 li
130.733 282.358 li
164.312 285.474 li
166.273 268.638 li
175.074 269.093 li
cp
.968627 .701961 .411765 rgb
f
146.989 317.504 mo
146.906 317.504 146.826 317.463 146.778 317.389 cv
146.677 317.229 136.637 301.463 133.764 295.381 cv
133.705 295.257 133.759 295.107 133.883 295.049 cv
134.009 294.99 134.158 295.043 134.216 295.168 cv
137.076 301.221 147.099 316.961 147.2 317.119 cv
147.274 317.236 147.24 317.391 147.123 317.465 cv
147.082 317.491 147.035 317.504 146.989 317.504 cv
cp
.572549 .705882 .917647 rgb
f
134.932 291.533 mo
134.898 291.533 134.865 291.532 134.831 291.532 cv
134.693 291.53 134.583 291.417 134.584 291.278 cv
134.586 291.142 134.698 291.032 134.834 291.032 cv
134.858 291.025 134.899 291.033 134.931 291.033 cv
139.921 291.033 141.38 285.404 141.395 285.347 cv
141.428 285.213 141.56 285.125 141.698 285.165 cv
141.832 285.198 141.913 285.334 141.88 285.468 cv
141.865 285.528 140.306 291.533 134.932 291.533 cv
cp
f
159.028 327.483 mo
158.95 327.483 158.874 327.447 158.825 327.379 cv
147.491 311.559 137.106 291.597 137.002 291.397 cv
136.939 291.274 136.987 291.124 137.109 291.061 cv
137.233 290.995 137.382 291.044 137.447 291.167 cv
137.55 291.366 147.919 311.297 159.231 327.088 cv
159.312 327.2 159.286 327.356 159.173 327.437 cv
159.129 327.468 159.079 327.483 159.028 327.483 cv
cp
f
117.846 308.14 mo
117.726 308.14 117.619 308.052 117.6 307.929 cv
117.578 307.792 117.671 307.664 117.808 307.643 cv
127.77 306.062 136.114 300.271 136.197 300.212 cv
136.31 300.134 136.466 300.16 136.545 300.273 cv
136.625 300.387 136.598 300.542 136.484 300.622 cv
136.4 300.681 127.965 306.537 117.886 308.137 cv
117.873 308.139 117.859 308.14 117.846 308.14 cv
cp
f
148.048 238.571 mo
147.92 244.563 li
147.92 244.563 148.964 246.309 152.463 246.668 cv
155.07 246.936 156 246.365 156 246.365 cv
155.7 243.323 li
155.404 240.356 li
149.105 238.829 li
148.048 238.571 li
cp
.976471 .639216 .560784 rgb
f
149.105 238.829 mo
149.117 238.993 149.175 239.188 149.267 239.411 cv
150.543 242.433 154.195 243.155 155.7 243.323 cv
155.404 240.356 li
149.105 238.829 li
cp
0 0 0 rgb
f
157.031 226.728 mo
157.031 226.728 160.016 234.307 158.687 238.454 cv
157.358 242.602 153.565 241.802 151.311 240.907 cv
149.056 240.013 148.047 238.573 148.047 238.573 cv
148.047 238.573 145.887 239.218 144.533 237.181 cv
143.178 235.145 144.141 232.897 145.378 232.421 cv
146.616 231.943 148.033 232.876 148.033 232.876 cv
146.977 230.667 li
146.977 230.667 152.16 219.826 157.031 226.728 cv
cp
.976471 .639216 .560784 rgb
f
156.348 236.205 mo
156.32 236.205 156.292 236.2 156.264 236.19 cv
156.134 236.144 156.066 236.001 156.113 235.871 cv
156.596 234.521 155.636 233 155.626 232.984 cv
155.551 232.868 155.585 232.714 155.702 232.64 cv
155.815 232.563 155.972 232.598 156.047 232.715 cv
156.092 232.785 157.148 234.46 156.583 236.039 cv
156.547 236.142 156.451 236.205 156.348 236.205 cv
cp
0 0 0 rgb
f
147.574 236.372 mo
147.504 236.372 147.434 236.343 147.385 236.285 cv
145.453 234.051 li
145.362 233.947 145.374 233.789 145.478 233.698 cv
145.583 233.61 145.74 233.619 145.831 233.725 cv
147.763 235.959 li
147.853 236.063 147.842 236.221 147.737 236.312 cv
147.69 236.352 147.632 236.372 147.574 236.372 cv
cp
f
145.454 235.704 mo
145.328 235.704 145.22 235.609 145.206 235.48 cv
145.191 235.344 145.291 235.221 145.428 235.205 cv
146.838 235.054 li
146.978 235.043 147.099 235.138 147.113 235.276 cv
147.128 235.413 147.029 235.536 146.892 235.552 cv
145.481 235.703 li
145.472 235.704 145.463 235.704 145.454 235.704 cv
cp
f
151.912 230.557 mo
151.869 230.557 151.827 230.546 151.788 230.523 cv
151.667 230.455 151.626 230.303 151.694 230.183 cv
152.248 229.216 153.49 229.529 153.543 229.541 cv
153.676 229.576 153.756 229.712 153.721 229.846 cv
153.687 229.979 153.548 230.058 153.417 230.025 cv
153.38 230.017 152.491 229.797 152.129 230.431 cv
152.083 230.512 151.998 230.557 151.912 230.557 cv
cp
f
157.693 229.948 mo
157.631 229.948 157.569 229.925 157.52 229.879 cv
157.396 229.759 157.006 229.469 156.639 229.486 cv
156.462 229.501 156.311 229.595 156.177 229.774 cv
156.094 229.886 155.938 229.905 155.827 229.824 cv
155.717 229.741 155.694 229.585 155.777 229.474 cv
156 229.178 156.276 229.014 156.601 228.988 cv
157.243 228.928 157.842 229.495 157.867 229.519 cv
157.966 229.614 157.969 229.771 157.874 229.871 cv
157.824 229.922 157.759 229.948 157.693 229.948 cv
cp
f
154.806 238.506 mo
154.79 238.506 154.773 238.504 154.756 238.501 cv
154.704 238.49 153.466 238.232 152.94 237.294 cv
152.872 237.174 152.915 237.021 153.035 236.954 cv
153.156 236.888 153.308 236.929 153.375 237.05 cv
153.791 237.789 154.844 238.009 154.855 238.011 cv
154.99 238.038 155.078 238.17 155.051 238.305 cv
155.027 238.424 154.922 238.506 154.806 238.506 cv
cp
f
157.38 232.785 mo
157.262 232.785 157.157 232.701 157.135 232.58 cv
156.895 231.273 li
156.87 231.138 156.959 231.008 157.095 230.982 cv
157.23 230.958 157.361 231.047 157.387 231.184 cv
157.627 232.49 li
157.652 232.626 157.562 232.756 157.426 232.781 cv
157.411 232.784 157.396 232.785 157.38 232.785 cv
cp
f
153.73 233.048 mo
153.612 233.048 153.507 232.964 153.484 232.843 cv
153.244 231.535 li
153.219 231.399 153.309 231.27 153.445 231.244 cv
153.584 231.216 153.711 231.309 153.736 231.445 cv
153.977 232.753 li
154.001 232.889 153.912 233.019 153.776 233.044 cv
153.76 233.047 153.745 233.048 153.73 233.048 cv
cp
f
206.273 245.619 mo
206.273 245.619 202.631 249.937 200.723 248.354 cv
198.815 246.771 196.563 243.369 196.563 243.369 cv
201.313 238.186 li
206.273 245.619 li
cp
.976471 .639216 .560784 rgb
f
148.118 233.027 mo
148.118 233.027 149.727 232.739 150.715 230.992 cv
151.703 229.246 151.912 226.741 151.912 226.741 cv
151.912 226.741 152.922 228.005 155.059 227.936 cv
157.195 227.867 157.012 226.947 157.012 226.947 cv
157.381 227.555 li
157.381 227.555 159.494 221.915 156.299 221.317 cv
153.105 220.72 151.912 222.397 151.912 222.397 cv
151.912 222.397 146.67 222.65 144.326 226.144 cv
141.982 229.637 144.381 233.296 144.381 233.296 cv
144.381 233.296 145.843 231.821 148.118 233.027 cv
cp
0 0 0 rgb
f
202.449 236.631 mo
200.076 238.745 li
202.449 236.631 li
cp
.956863 .517647 .384314 rgb
f
200.076 238.995 mo
200.007 238.995 199.939 238.967 199.89 238.911 cv
199.798 238.809 199.807 238.65 199.91 238.559 cv
202.282 236.444 li
202.385 236.351 202.542 236.361 202.635 236.465 cv
202.727 236.567 202.718 236.726 202.615 236.817 cv
200.243 238.932 li
200.195 238.975 200.135 238.995 200.076 238.995 cv
cp
0 0 0 rgb
f
193.353 237.889 mo
193.353 237.889 200.209 237.356 200.076 239.533 cv
199.944 241.71 196.715 241.625 196.715 241.625 cv
196.715 241.625 197.093 246.739 193.829 247.194 cv
193.353 237.889 li
cp
.976471 .639216 .560784 rgb
f
193.828 247.444 mo
193.705 247.444 193.598 247.354 193.581 247.229 cv
193.562 247.092 193.657 246.966 193.793 246.946 cv
196.788 246.529 196.47 241.692 196.466 241.644 cv
196.461 241.573 196.486 241.504 196.535 241.452 cv
196.583 241.401 196.668 241.373 196.722 241.375 cv
196.754 241.374 199.71 241.427 199.827 239.518 cv
199.839 239.308 199.765 239.126 199.598 238.962 cv
198.588 237.969 194.76 238.03 193.372 238.138 cv
193.224 238.161 193.114 238.045 193.104 237.908 cv
193.093 237.771 193.196 237.65 193.333 237.64 cv
193.547 237.625 198.571 237.251 199.949 238.605 cv
200.221 238.873 200.348 239.19 200.326 239.549 cv
200.217 241.326 198.222 241.837 196.977 241.874 cv
197.008 242.974 196.911 247.017 193.863 247.442 cv
193.851 247.443 193.839 247.444 193.828 247.444 cv
cp
0 0 0 rgb
f
201.603 246.161 mo
201.603 246.161 199.611 245.647 199.438 244.54 cv
199.266 243.434 204.482 239.666 204.482 239.666 cv
201.603 246.161 li
cp
.976471 .639216 .560784 rgb
f
201.603 246.411 mo
201.582 246.411 201.561 246.408 201.54 246.403 cv
201.452 246.381 199.387 245.834 199.191 244.578 cv
199.009 243.411 203.083 240.368 204.336 239.463 cv
204.448 239.383 204.604 239.407 204.685 239.52 cv
204.766 239.632 204.741 239.788 204.629 239.869 cv
202.18 241.638 199.593 243.912 199.686 244.501 cv
199.806 245.274 201.155 245.787 201.665 245.919 cv
201.799 245.954 201.879 246.09 201.845 246.224 cv
201.815 246.336 201.714 246.411 201.603 246.411 cv
cp
0 0 0 rgb
f
202.666 248.354 mo
202.666 248.354 200.898 247.332 201.603 246.161 cv
202.307 244.991 206.493 243.224 206.493 243.224 cv
202.666 248.354 li
cp
.976471 .639216 .560784 rgb
f
202.665 248.604 mo
202.623 248.604 202.58 248.594 202.541 248.571 cv
202.496 248.545 201.455 247.935 201.23 247.063 cv
201.138 246.706 201.191 246.359 201.388 246.032 cv
202.113 244.827 205.959 243.178 206.396 242.993 cv
206.522 242.938 206.669 243 206.723 243.126 cv
206.777 243.254 206.717 243.4 206.59 243.454 cv
205.446 243.937 202.36 245.388 201.817 246.29 cv
201.69 246.501 201.656 246.712 201.714 246.937 cv
201.886 247.604 202.782 248.133 202.791 248.139 cv
202.91 248.208 202.951 248.36 202.882 248.479 cv
202.835 248.56 202.751 248.604 202.665 248.604 cv
cp
0 0 0 rgb
f
199.219 244.334 mo
198.853 244.334 198.317 244.254 197.928 243.854 cv
197.455 243.365 197.346 242.561 197.605 241.46 cv
197.636 241.326 197.77 241.241 197.905 241.274 cv
198.04 241.306 198.123 241.44 198.091 241.575 cv
197.875 242.496 197.94 243.146 198.285 243.503 cv
198.727 243.962 199.525 243.812 199.533 243.809 cv
199.67 243.786 199.8 243.869 199.827 244.005 cv
199.854 244.14 199.768 244.271 199.632 244.299 cv
199.616 244.302 199.451 244.334 199.219 244.334 cv
cp
f
153.322 247.191 mo
151.789 247.191 149.788 246.685 147.748 244.745 cv
147.647 244.649 147.644 244.491 147.739 244.392 cv
147.835 244.291 147.993 244.288 148.092 244.382 cv
152.069 248.164 155.725 246.23 155.879 246.146 cv
156 246.078 156.152 246.124 156.218 246.245 cv
156.285 246.365 156.241 246.518 156.121 246.584 cv
156.099 246.596 154.985 247.191 153.322 247.191 cv
cp
.639216 .482353 .564706 rgb
f
166.273 268.888 mo
166.122 268.88 166.016 268.762 166.024 268.624 cv
166.304 263.59 li
166.312 263.451 166.434 263.354 166.567 263.354 cv
166.706 263.361 166.811 263.479 166.803 263.617 cv
166.523 268.651 li
166.516 268.785 166.405 268.888 166.273 268.888 cv
cp
f
148.118 233.027 mo
148.118 233.027 151.181 229.656 154.461 229.13 cv
157.743 228.604 157.919 229.394 157.919 229.394 cv
157.613 226.76 li
157.613 226.76 156.239 225.69 152.186 226.99 cv
147.944 228.351 145.983 232.577 145.983 232.577 cv
148.118 233.027 li
cp
.407843 .713726 .847059 rgb
f
91.5791 225.244 mo
91.5791 225.244 84.687 219.437 80.0933 225.244 cv
75.5 231.052 77.5459 249.134 77.5459 249.134 cv
88.1489 249.134 li
89.4297 232.174 li
91.5791 225.244 li
cp
0 0 0 rgb
f
101.088 223.895 mo
101.088 223.895 99.9897 221.228 92.4326 223.098 cv
84.8755 224.967 84.3193 241.739 96.0884 240.367 cv
107.857 238.994 101.088 223.895 101.088 223.895 cv
cp
f
26.499 293.228 mo
59.1631 279.282 li
60.5967 278.671 62.2588 279.27 62.9585 280.642 cv
64.54 283.737 li
71.2026 296.777 li
57.6694 304.981 li
57.6694 304.981 45.228 302.197 36.1851 302.163 cv
31.918 302.15 28.7373 300.499 26.5581 298.759 cv
26.2251 298.488 25.9199 298.222 25.6323 297.956 cv
24.1084 296.538 24.5752 294.047 26.499 293.228 cv
cp
.968627 .701961 .411765 rgb
f
26.499 293.228 mo
59.1631 279.282 li
60.5967 278.671 62.2588 279.27 62.9585 280.642 cv
64.54 283.737 li
26.5581 298.759 li
26.2251 298.488 25.9199 298.222 25.6323 297.956 cv
24.1084 296.538 24.5752 294.047 26.499 293.228 cv
cp
.639216 .482353 .564706 rgb
f
49.209 311.335 mo
48.8232 311.335 48.5679 311.164 48.4116 311 cv
47.6768 310.229 47.7866 308.15 48.1025 306.188 cv
47.437 307.706 46.5947 309.152 45.7031 309.495 cv
45.3525 309.629 44.998 309.596 44.6792 309.394 cv
44.374 309.201 44.1894 308.906 44.1309 308.52 cv
43.7842 306.232 48.2544 300.958 48.4448 300.734 cv
48.5347 300.629 48.6924 300.616 48.7974 300.706 cv
48.9023 300.796 48.915 300.953 48.8257 301.059 cv
47.5693 302.532 44.3652 306.733 44.625 308.444 cv
44.6616 308.686 44.7666 308.857 44.9468 308.972 cv
45.1333 309.09 45.3169 309.108 45.5234 309.028 cv
46.9228 308.491 48.4697 304.022 48.9902 302.208 cv
49.0019 302.165 49.0122 302.13 49.02 302.103 cv
49.0581 301.968 49.1948 301.888 49.3291 301.93 cv
49.4614 301.967 49.5386 302.104 49.5015 302.237 cv
49.4936 302.265 49.4834 302.302 49.4707 302.347 cv
48.8955 304.39 47.7295 309.561 48.7734 310.655 cv
48.8765 310.764 49.0576 310.896 49.4473 310.805 cv
49.8452 310.711 50.1352 310.482 50.334 310.106 cv
51.3672 308.151 49.5044 303.241 49.4853 303.192 cv
49.436 303.063 49.5005 302.919 49.6294 302.869 cv
49.7583 302.817 49.9028 302.884 49.9521 303.013 cv
50.0327 303.223 51.915 308.185 50.7764 310.34 cv
50.5098 310.844 50.1016 311.164 49.5625 311.291 cv
49.4341 311.321 49.3164 311.335 49.209 311.335 cv
cp
1 1 1 rgb
f
108.717 349.063 mo
115.343 368.164 li
123.625 373.386 li
136.615 373.513 li
130.592 360.576 li
123.145 345.059 li
108.717 349.063 li
cp
.956863 .517647 .384314 rgb
f
100.751 281.195 mo
133.069 352.664 li
108.936 358.144 li
98.5278 334.872 li
98.5278 334.872 83.8784 342.739 73.4272 331.83 cv
62.9761 320.921 54.6665 304.884 54.6665 304.884 cv
71.2026 295.449 li
71.2026 295.449 72.1352 278.938 78.7358 275.615 cv
85.3359 272.293 100.751 281.195 100.751 281.195 cv
cp
.639216 .482353 .564706 rgb
f
153.534 380.324 mo
117.926 380.821 li
116.363 380.843 115.064 379.66 114.956 378.129 cv
114.71 374.674 li
113.554 363.007 li
129.376 357.672 li
129.376 357.672 139.766 364.954 148.097 368.41 cv
152.03 370.038 154.318 372.767 155.646 375.198 cv
155.848 375.573 156.025 375.935 156.187 376.289 cv
157.037 378.176 155.63 380.298 153.534 380.324 cv
cp
.968627 .701961 .411765 rgb
f
100.751 263.187 mo
100.751 263.187 109.585 272.005 118.502 271.68 cv
127.086 271.367 142.689 264.808 142.689 264.808 cv
140.808 256.609 li
140.808 256.609 130.239 256.57 124.802 255.716 cv
119.365 254.861 115.244 253.562 115.244 253.562 cv
100.751 263.187 li
cp
.956863 .517647 .384314 rgb
f
137.579 258.388 mo
137.579 258.388 139.899 254.478 140.834 253.741 cv
141.769 253.005 144.395 253.09 144.395 253.09 cv
144.395 253.09 149.071 252.457 149.92 253.276 cv
150.77 254.096 150.059 256.055 150.059 256.055 cv
150.059 256.055 152.223 261.05 150.991 263.923 cv
149.758 266.796 139.29 265.847 139.29 265.847 cv
135.943 261.617 li
137.579 258.388 li
cp
f
149.506 265.145 mo
149.506 265.145 144.589 267.235 143.638 265.121 cv
142.688 263.008 142.214 259.232 142.214 259.232 cv
148.438 256.88 li
149.506 265.145 li
cp
f
141.805 253.324 mo
141.805 253.324 147.85 255.729 146.817 257.491 cv
145.785 259.253 143.08 257.84 143.08 257.84 cv
143.08 257.84 141.239 262.266 138.275 261.289 cv
141.805 253.324 li
cp
f
139.141 261.684 mo
138.84 261.684 138.525 261.635 138.197 261.526 cv
138.065 261.483 137.994 261.342 138.038 261.211 cv
138.081 261.08 138.223 261.007 138.353 261.052 cv
141.062 261.939 142.832 257.785 142.849 257.744 cv
142.876 257.679 142.929 257.629 142.995 257.604 cv
143.061 257.582 143.135 257.586 143.196 257.618 cv
143.221 257.631 145.703 258.899 146.602 257.365 cv
146.699 257.199 146.712 257.028 146.643 256.827 cv
146.216 255.584 142.939 254.045 141.712 253.557 cv
141.584 253.506 141.521 253.36 141.572 253.231 cv
141.624 253.104 141.77 253.042 141.897 253.092 cv
142.086 253.167 146.527 254.951 147.116 256.665 cv
147.232 257.004 147.205 257.325 147.033 257.617 cv
146.188 259.06 144.28 258.663 143.203 258.177 cv
142.807 259.013 141.368 261.683 139.141 261.684 cv
cp
0 0 0 rgb
f
145.312 263.657 mo
145.312 263.657 143.838 262.4 144.16 261.405 cv
144.481 260.409 150.502 259.433 150.502 259.433 cv
145.312 263.657 li
cp
.956863 .517647 .384314 rgb
f
145.312 263.907 mo
145.254 263.907 145.196 263.888 145.149 263.848 cv
145.084 263.792 143.553 262.469 143.922 261.328 cv
144.263 260.27 149.014 259.421 150.462 259.186 cv
150.595 259.165 150.727 259.255 150.749 259.393 cv
150.771 259.529 150.678 259.657 150.542 259.68 cv
147.719 260.138 144.567 260.957 144.397 261.482 cv
144.176 262.168 145.099 263.147 145.474 263.467 cv
145.579 263.557 145.591 263.715 145.502 263.819 cv
145.452 263.878 145.382 263.907 145.312 263.907 cv
cp
0 0 0 rgb
f
145.288 265.929 mo
145.288 265.929 144.219 264.342 145.312 263.657 cv
146.405 262.973 150.705 263.237 150.705 263.237 cv
145.288 265.929 li
cp
.956863 .517647 .384314 rgb
f
145.288 266.179 mo
145.208 266.179 145.128 266.14 145.08 266.068 cv
145.053 266.028 144.425 265.083 144.601 264.255 cv
144.674 263.912 144.868 263.64 145.179 263.445 cv
146.306 262.737 150.271 262.96 150.72 262.987 cv
150.858 262.996 150.963 263.115 150.955 263.253 cv
150.946 263.39 150.824 263.487 150.69 263.487 cv
149.516 263.414 146.285 263.343 145.444 263.869 cv
145.25 263.99 145.135 264.15 145.09 264.357 cv
144.958 264.978 145.49 265.781 145.495 265.789 cv
145.572 265.904 145.542 266.06 145.427 266.136 cv
145.384 266.165 145.335 266.179 145.288 266.179 cv
cp
0 0 0 rgb
f
144.488 261.309 mo
144.467 261.309 144.445 261.306 144.424 261.301 cv
144.383 261.29 143.414 261.026 143.153 260.201 cv
142.96 259.592 143.211 258.872 143.896 258.061 cv
143.986 257.955 144.145 257.943 144.249 258.03 cv
144.354 258.12 144.368 258.277 144.278 258.383 cv
143.72 259.044 143.495 259.62 143.629 260.048 cv
143.805 260.61 144.544 260.815 144.552 260.817 cv
144.685 260.853 144.765 260.989 144.729 261.123 cv
144.699 261.234 144.599 261.309 144.488 261.309 cv
cp
f
103.382 269.724 mo
103.382 269.724 106.514 270.81 110.113 271.352 cv
112.564 271.722 114.235 271.722 114.235 271.722 cv
118.502 254.081 li
100.751 244.729 li
103.382 269.724 li
cp
.25098 .313726 .498039 rgb
f
98.7783 334.51 mo
98.7212 334.51 98.6636 334.49 98.6162 334.45 cv
98.5112 334.36 98.4985 334.203 98.5879 334.098 cv
98.6279 334.051 102.57 329.307 102.06 320.905 cv
101.544 312.424 96.2417 296.829 96.1885 296.673 cv
96.1655 296.606 96.1719 296.534 96.2051 296.473 cv
96.2383 296.411 96.2954 296.367 96.3633 296.35 cv
103.425 294.55 li
103.559 294.516 103.694 294.597 103.729 294.73 cv
103.763 294.864 103.682 295 103.548 295.034 cv
96.748 296.768 li
97.4419 298.841 102.076 312.929 102.559 320.874 cv
103.082 329.488 99.0098 334.374 98.9687 334.422 cv
98.9189 334.479 98.8491 334.51 98.7783 334.51 cv
cp
1 1 1 rgb
f
110.882 352.113 mo
110.769 352.113 110.667 352.036 110.639 351.922 cv
110.607 351.787 110.69 351.652 110.824 351.62 cv
130.658 346.859 li
130.797 346.824 130.927 346.91 130.959 347.044 cv
130.992 347.179 130.909 347.313 130.774 347.346 cv
110.941 352.106 li
110.921 352.111 110.901 352.113 110.882 352.113 cv
cp
f
73.3462 302.462 mo
74.6811 305.972 76.2607 309.257 76.9219 309.334 cv
76.936 309.332 76.9678 309.338 77.0234 309.253 cv
77.6479 308.285 75.3686 304.933 73.3462 302.462 cv
cp
76.9292 309.834 mo
76.9058 309.834 76.8838 309.833 76.8647 309.83 cv
75.4385 309.665 72.8848 302.702 72.3877 301.308 cv
72.3472 301.194 72.3931 301.069 72.4961 301.008 cv
72.5991 300.949 72.7314 300.969 72.8105 301.059 cv
73.4072 301.735 78.6059 307.723 77.4434 309.524 cv
77.2768 309.782 77.0688 309.834 76.9292 309.834 cv
cp
f
57.2886 309.834 mo
57.2002 309.834 57.1143 309.787 57.0688 309.704 cv
57.0029 309.582 57.0478 309.431 57.1689 309.364 cv
72.5034 301.004 li
72.625 300.938 72.7768 300.982 72.8428 301.104 cv
72.9087 301.226 72.8638 301.377 72.7427 301.443 cv
57.4082 309.804 li
57.3701 309.824 57.3291 309.834 57.2886 309.834 cv
cp
f
153.534 380.324 mo
117.926 380.821 li
116.363 380.843 115.064 379.66 114.956 378.129 cv
114.71 374.674 li
155.646 375.198 li
155.848 375.573 156.025 375.935 156.187 376.289 cv
157.037 378.176 155.63 380.298 153.534 380.324 cv
cp
.639216 .482353 .564706 rgb
f
136.111 365.113 mo
136.021 365.113 135.933 365.063 135.889 364.977 cv
135.826 364.854 135.875 364.703 135.998 364.641 cv
137.741 363.753 142.355 361.083 142.773 359.405 cv
142.831 359.174 142.8 358.979 142.681 358.809 cv
142.557 358.631 142.397 358.545 142.179 358.539 cv
140.64 358.538 137.489 362.044 136.3 363.519 cv
136.271 363.555 136.247 363.585 136.228 363.608 cv
136.141 363.716 135.983 363.732 135.877 363.646 cv
135.77 363.56 135.752 363.403 135.838 363.295 cv
135.856 363.272 135.88 363.242 135.91 363.205 cv
137.244 361.534 140.348 357.202 139.808 355.801 cv
139.755 355.664 139.64 355.475 139.248 355.413 cv
138.843 355.348 138.484 355.45 138.151 355.725 cv
136.433 357.141 136.228 362.373 136.226 362.426 cv
136.222 362.563 136.125 362.686 135.967 362.667 cv
135.829 362.662 135.721 362.546 135.726 362.408 cv
135.734 362.184 135.941 356.897 137.833 355.339 cv
138.277 354.974 138.78 354.833 139.326 354.919 cv
139.923 355.014 140.171 355.354 140.274 355.621 cv
140.655 356.608 139.742 358.482 138.684 360.173 cv
139.877 359.04 141.202 358.038 142.154 358.038 cv
142.567 358.05 142.877 358.217 143.09 358.521 cv
143.295 358.813 143.352 359.151 143.258 359.526 cv
142.7 361.768 136.489 364.951 136.225 365.086 cv
136.188 365.104 136.15 365.113 136.111 365.113 cv
cp
1 1 1 rgb
f
81.9941 252.885 mo
81.9941 252.885 70.9243 248.315 62.5776 257.346 cv
54.2305 266.376 51.9189 282.287 51.9189 282.287 cv
60.1597 284.916 li
77.3672 266.407 li
81.9941 252.885 li
cp
.956863 .517647 .384314 rgb
f
60.8906 284.626 mo
60.8906 284.626 61.6543 289.09 61.4155 290.244 cv
61.1768 291.397 59.104 292.987 59.104 292.987 cv
59.104 292.987 55.9243 296.419 54.7383 296.325 cv
53.5518 296.231 52.8227 294.28 52.8227 294.28 cv
52.8227 294.28 47.9067 291.809 46.9829 288.827 cv
46.0586 285.845 54.7187 279.979 54.7187 279.979 cv
60.0439 281.116 li
60.8906 284.626 li
cp
f
52.8223 294.529 mo
52.7676 294.529 52.7129 294.512 52.667 294.476 cv
52.5586 294.39 52.5405 294.232 52.6265 294.124 cv
53.4228 293.118 li
53.5083 293.01 53.6665 292.992 53.7739 293.077 cv
53.8823 293.163 53.9004 293.32 53.8144 293.429 cv
53.0181 294.435 li
52.9687 294.497 52.896 294.529 52.8223 294.529 cv
cp
0 0 0 rgb
f
59.1035 293.237 mo
59.0654 293.237 59.0268 293.229 58.9907 293.21 cv
58.8677 293.148 58.8184 292.998 58.8804 292.875 cv
60.9023 288.873 li
60.9648 288.748 61.1152 288.699 61.2383 288.763 cv
61.3613 288.824 61.4106 288.975 61.3486 289.098 cv
59.3267 293.1 li
59.2827 293.188 59.1948 293.237 59.1035 293.237 cv
cp
f
58.9946 259.963 mo
58.9946 259.963 71.2026 242.757 85.9365 242.231 cv
103.494 241.604 106.437 249.668 106.987 253.782 cv
107.587 258.272 104.86 271.752 104.86 271.752 cv
103.121 286.628 li
74.6172 279.473 li
77.7612 268.869 li
58.9946 259.963 li
cp
.25098 .313726 .498039 rgb
f
93.1567 238.015 mo
92.6797 243.551 li
92.6797 243.551 93.5581 245.228 96.8301 245.766 cv
99.2671 246.166 100.177 245.692 100.177 245.692 cv
100.076 242.859 li
99.9746 240.097 li
94.1362 238.314 li
93.1567 238.015 li
cp
.956863 .517647 .384314 rgb
f
94.1362 238.314 mo
94.1377 238.467 94.1807 238.65 94.2539 238.862 cv
95.2759 241.733 98.6694 242.617 100.076 242.859 cv
99.9746 240.097 li
94.1362 238.314 li
cp
0 0 0 rgb
f
102.318 227.582 mo
102.318 227.582 104.675 234.77 103.178 238.529 cv
101.68 242.289 98.1572 241.326 96.0884 240.367 cv
94.0195 239.407 93.1562 238.016 93.1562 238.016 cv
93.1562 238.016 91.084 238.486 89.9307 236.522 cv
88.7778 234.558 89.8179 232.536 91.0112 232.167 cv
92.2046 231.798 93.4819 232.744 93.4819 232.744 cv
92.6201 230.638 li
92.6201 230.638 98.145 220.91 102.318 227.582 cv
cp
.956863 .517647 .384314 rgb
f
93.0351 235.745 mo
92.978 235.745 92.9209 235.726 92.874 235.687 cv
90.4912 233.682 li
90.3857 233.593 90.3721 233.435 90.4609 233.329 cv
90.5498 233.224 90.7075 233.21 90.8135 233.299 cv
93.1963 235.304 li
93.3018 235.393 93.3154 235.551 93.2266 235.656 cv
93.1772 235.715 93.1064 235.745 93.0351 235.745 cv
cp
0 0 0 rgb
f
90.7246 235.521 mo
90.6045 235.521 90.4985 235.435 90.4785 235.313 cv
90.456 235.176 90.5478 235.048 90.6841 235.024 cv
92.3911 234.741 li
92.5308 234.725 92.6562 234.812 92.6787 234.947 cv
92.7012 235.084 92.6094 235.212 92.4731 235.235 cv
90.7661 235.519 li
90.7519 235.521 90.7383 235.521 90.7246 235.521 cv
cp
f
101.451 235.521 mo
101.431 235.521 101.411 235.52 101.391 235.515 cv
101.257 235.481 101.175 235.346 101.208 235.212 cv
101.603 233.602 100.62 232.637 100.578 232.596 cv
100.479 232.501 100.475 232.343 100.57 232.243 cv
100.665 232.143 100.822 232.138 100.922 232.233 cv
100.973 232.281 102.159 233.431 101.693 235.331 cv
101.666 235.445 101.563 235.521 101.451 235.521 cv
cp
f
102.598 232.991 mo
102.48 232.991 102.375 232.907 102.353 232.787 cv
102.11 231.488 li
102.084 231.353 102.174 231.222 102.31 231.196 cv
102.444 231.171 102.575 231.261 102.601 231.396 cv
102.844 232.695 li
102.87 232.831 102.78 232.962 102.645 232.987 cv
102.629 232.99 102.614 232.991 102.598 232.991 cv
cp
f
99.0278 232.763 mo
98.9101 232.763 98.8052 232.679 98.7827 232.559 cv
98.54 231.26 li
98.5146 231.124 98.604 230.993 98.7397 230.968 cv
98.874 230.942 99.0059 231.032 99.0312 231.168 cv
99.2739 232.467 li
99.2993 232.603 99.21 232.733 99.0742 232.759 cv
99.0586 232.762 99.0434 232.763 99.0278 232.763 cv
cp
f
102.776 229.195 mo
102.776 229.195 102.261 228.031 100.856 227.905 cv
99.4526 227.778 98.5483 228.683 98.5483 228.683 cv
98.5483 228.683 98.9643 231.061 96.9473 232.137 cv
94.9307 233.213 93.4819 232.744 93.4819 232.744 cv
92.1382 232.143 li
91.2934 230.067 li
95.668 226.155 li
101.088 223.895 li
102.477 226.624 li
102.776 229.195 li
cp
f
99.8613 237.609 mo
99.7432 237.609 98.3594 237.58 97.8652 236.266 cv
97.8164 236.137 97.8818 235.992 98.0112 235.943 cv
98.1387 235.896 98.2847 235.96 98.333 236.09 cv
98.7173 237.111 99.8491 237.1 99.8618 237.109 cv
100.001 237.109 100.113 237.22 100.115 237.356 cv
100.116 237.495 100.005 237.607 99.8677 237.609 cv
99.8662 237.609 99.8643 237.609 99.8613 237.609 cv
cp
f
102.972 230.245 mo
102.928 230.241 101.867 230.057 101.867 230.057 cv
101.731 230.033 101.64 229.903 101.664 229.768 cv
101.687 229.632 101.819 229.535 101.953 229.564 cv
103.014 229.749 li
103.15 229.772 103.241 229.902 103.217 230.038 cv
103.196 230.159 103.091 230.245 102.972 230.245 cv
cp
f
98.0991 230.562 mo
97.9946 230.562 97.897 230.495 97.8623 230.391 cv
97.8184 230.26 97.8887 230.118 98.0195 230.074 cv
99.5151 229.573 li
99.6465 229.53 99.7886 229.601 99.8315 229.731 cv
99.8755 229.862 99.8052 230.004 99.6743 230.048 cv
98.1787 230.549 li
98.1523 230.558 98.1255 230.562 98.0991 230.562 cv
cp
f
74.998 287.171 mo
74.8867 287.171 74.7851 287.097 74.7563 286.983 cv
74.7212 286.851 74.8018 286.714 74.9351 286.679 cv
74.9746 286.669 78.9121 285.623 79.8662 283.563 cv
79.9243 283.438 80.0747 283.385 80.1982 283.442 cv
80.3237 283.5 80.3779 283.648 80.3203 283.774 cv
79.2666 286.048 75.2319 287.118 75.061 287.163 cv
75.04 287.168 75.0185 287.171 74.998 287.171 cv
cp
1 1 1 rgb
f
93.4819 232.744 mo
93.4819 232.744 96.1958 229.452 99.3999 228.938 cv
102.604 228.424 102.776 229.195 102.776 229.195 cv
102.477 226.624 li
102.477 226.624 101.135 225.58 97.1777 226.85 cv
93.0351 228.178 91.2934 232.104 91.2934 232.104 cv
93.4819 232.744 li
cp
.968627 .701961 .411765 rgb
f
97.9961 246.298 mo
94.5908 246.298 92.5083 243.737 92.4834 243.706 cv
92.3975 243.599 92.4155 243.441 92.5234 243.355 cv
92.6313 243.269 92.7891 243.287 92.8745 243.395 cv
92.9888 243.537 95.7134 246.874 100.1 245.454 cv
100.23 245.415 100.372 245.484 100.414 245.615 cv
100.457 245.747 100.384 245.888 100.253 245.931 cv
99.4497 246.189 98.6948 246.298 97.9961 246.298 cv
cp
.572549 .705882 .917647 rgb
f
105.494 268.624 mo
105.465 268.624 105.436 268.619 105.407 268.608 cv
105.277 268.561 105.212 268.416 105.26 268.287 cv
108.881 258.554 104.176 253.787 104.128 253.74 cv
104.03 253.644 104.028 253.485 104.125 253.387 cv
104.221 253.29 104.38 253.286 104.478 253.383 cv
104.528 253.432 109.47 258.405 105.729 268.461 cv
105.691 268.562 105.596 268.624 105.494 268.624 cv
cp
f
77.7607 269.119 mo
77.7109 269.119 77.6611 269.104 77.6172 269.074 cv
77.5044 268.995 77.4766 268.839 77.5557 268.726 cv
79.6313 265.759 li
79.7114 265.646 79.8662 265.619 79.98 265.697 cv
80.0928 265.776 80.1206 265.933 80.0415 266.046 cv
77.9658 269.013 li
77.917 269.082 77.8393 269.119 77.7607 269.119 cv
cp
f
593.834 292.919 mo
575.717 296.777 li
574.564 297.023 573.432 296.288 573.186 295.136 cv
570.146 280.864 li
569.9 279.711 570.636 278.578 571.788 278.332 cv
589.905 274.474 li
591.058 274.229 592.191 274.964 592.437 276.116 cv
595.477 290.388 li
595.722 291.54 594.986 292.673 593.834 292.919 cv
cp
.207843 .270588 .427451 rgb
f
577.579 228.646 mo
577.579 228.646 581.734 227.988 584.262 230.672 cv
588.31 234.97 585.595 239.355 585.595 239.355 cv
585.595 239.355 593.356 239.517 593.265 247.093 cv
593.195 252.861 584.813 253.48 584.813 253.48 cv
560.175 240.954 li
560.175 240.954 557.401 235.753 562.461 230.245 cv
567.521 224.736 576.269 226.421 576.269 226.421 cv
577.579 228.646 li
cp
0 0 0 rgb
f
630.674 252.621 mo
630.674 252.621 642.171 262.359 639.737 276.541 cv
637.304 290.723 621.695 285.78 619.933 282.881 cv
618.171 279.981 618.339 267.45 618.339 267.45 cv
625.556 251.949 li
630.674 252.621 li
cp
.25098 .313726 .498039 rgb
f
565.141 218.227 mo
565.141 218.227 571.956 214.338 576.924 219.695 cv
582.256 225.445 577.754 231.966 577.754 231.966 cv
577.754 231.966 557.681 231.555 562.728 229.18 cv
567.773 226.804 565.141 218.227 565.141 218.227 cv
cp
0 0 0 rgb
f
524.498 246.662 mo
524.498 246.662 523.509 243.185 522.269 242.202 cv
521.028 241.219 516.504 239.237 515.837 240.225 cv
515.171 241.211 517.832 243.639 517.832 243.639 cv
517.832 243.639 515.236 243.337 511.337 244.025 cv
507.438 244.714 507.49 245.782 507.49 245.782 cv
507.49 245.782 504.755 245.899 504.454 247.057 cv
504.154 248.214 506.591 249.285 506.591 249.285 cv
506.591 249.285 501.757 250.359 503.617 251.816 cv
505.477 253.274 510.853 254.238 515.06 254.23 cv
519.268 254.223 520.768 253.948 520.768 253.948 cv
524.498 246.662 li
cp
.956863 .517647 .384314 rgb
f
510.828 250.542 mo
510.761 250.542 510.694 250.516 510.646 250.462 cv
510.551 250.361 510.557 250.203 510.658 250.109 cv
515.923 245.213 li
516.024 245.119 516.184 245.125 516.275 245.226 cv
516.37 245.326 516.364 245.484 516.263 245.578 cv
510.998 250.475 li
510.95 250.52 510.889 250.542 510.828 250.542 cv
cp
0 0 0 rgb
f
522.358 248.857 mo
522.139 248.839 517.476 248.398 517.323 245.335 cv
517.316 245.196 517.423 245.079 517.561 245.072 cv
517.73 245.074 517.816 245.172 517.823 245.31 cv
517.953 247.938 522.336 248.354 522.38 248.358 cv
522.518 248.37 522.619 248.492 522.607 248.629 cv
522.596 248.76 522.487 248.857 522.358 248.857 cv
cp
f
628.62 342.889 mo
632.691 347.296 li
643.122 337.66 li
639.051 333.253 li
628.62 342.889 li
cp
.976471 .639216 .560784 rgb
f
619.439 276.847 mo
619.439 276.847 619.439 294.834 627.812 308.906 cv
636.184 322.979 643.451 330.466 643.451 330.466 cv
625.669 346.556 li
625.669 346.556 605.341 333.679 600.331 311.11 cv
595.321 288.542 600.271 276.173 600.271 276.173 cv
619.439 276.847 li
cp
.639216 .482353 .564706 rgb
f
564.641 237.419 mo
564.641 237.419 558.022 238.094 553.889 241.214 cv
549.755 244.334 541.139 250.762 539.496 251.971 cv
538.006 253.066 527.436 244.601 525.472 243.008 cv
525.308 242.875 525.072 242.928 524.98 243.117 cv
523.888 245.374 518.104 257.372 518.215 258.271 cv
518.336 259.264 531.688 271.397 541.337 270.663 cv
550.986 269.93 556.095 262.476 556.095 262.476 cv
564.641 237.419 li
cp
f
546.267 333.821 mo
548.276 352.557 li
560.855 351.935 li
560.855 334.933 li
546.267 333.821 li
cp
.956863 .517647 .384314 rgb
f
554.203 270.031 mo
554.203 270.031 546.98 283.851 543.56 302.868 cv
540.139 321.886 542.218 336.074 542.717 336.878 cv
543.216 337.682 566.96 337.591 567.773 336.93 cv
568.587 336.269 569.834 273.437 569.834 273.437 cv
556.162 269.934 li
554.203 270.031 li
cp
.407843 .713726 .847059 rgb
f
545.317 361.677 mo
545.317 361.677 544.905 351.085 545.561 350.845 cv
546.216 350.604 564.305 349.71 564.981 349.885 cv
565.657 350.059 565.784 373.564 565.101 374.015 cv
564.417 374.464 528.698 376.543 527.346 376.194 cv
525.994 375.845 528.566 369.371 531.834 367.961 cv
535.102 366.551 537.532 366.223 537.532 366.223 cv
545.317 361.677 li
cp
.968627 .701961 .411765 rgb
f
568.479 334.488 mo
577.038 351.674 li
589.019 347.791 li
584.146 330.266 li
568.479 334.488 li
cp
.956863 .517647 .384314 rgb
f
560.259 274.147 mo
560.259 274.147 558.898 291.839 561.673 309.703 cv
564.447 327.566 566.291 336.382 567.773 336.93 cv
569.256 337.478 592.607 331.215 593.294 330.767 cv
593.979 330.318 583.606 309.942 583.104 304.955 cv
582.6 299.969 580.294 270.464 580.294 270.464 cv
560.259 274.147 li
cp
.407843 .713726 .847059 rgb
f
576.659 359.658 mo
576.659 359.658 573.485 350.7 574.537 350.14 cv
575.589 349.579 589.479 343.705 590.562 342.98 cv
591.645 342.256 595.577 358.723 595.577 358.723 cv
595.577 358.723 584.957 373.824 584.46 374.283 cv
583.963 374.743 569.703 375.902 568.738 375.791 cv
567.443 375.643 566.18 371.574 568.946 369.379 cv
571.469 367.379 573.461 366.997 573.461 366.997 cv
576.659 359.658 li
cp
.968627 .701961 .411765 rgb
f
585.45 347.943 mo
585.481 353.942 li
599.682 353.869 li
599.65 347.869 li
585.45 347.943 li
cp
.976471 .639216 .560784 rgb
f
554.567 276.319 mo
554.567 276.319 571.024 277.438 571.224 274.99 cv
571.678 269.399 574.394 240.02 574.394 240.02 cv
571.724 236.228 li
563.853 237.551 li
563.853 237.551 560.079 238.145 556.869 248.5 cv
553.66 258.855 554.567 276.319 554.567 276.319 cv
cp
.639216 .482353 .564706 rgb
f
572.322 232.575 mo
572.461 238.272 li
572.461 238.272 571.474 239.936 568.146 240.288 cv
565.669 240.55 564.852 239.294 564.852 239.294 cv
565.331 234.294 li
571.317 232.823 li
572.322 232.575 li
cp
.956863 .517647 .384314 rgb
f
563.888 290.919 mo
563.769 290.919 563.663 290.834 563.642 290.713 cv
563.609 290.533 560.407 272.816 554.604 272.418 cv
554.533 272.413 554.463 272.411 554.394 272.411 cv
548.768 272.411 546.171 287.997 546.146 288.156 cv
546.123 288.293 546.004 288.386 545.858 288.363 cv
545.722 288.341 545.63 288.213 545.651 288.076 cv
545.762 287.399 548.395 271.475 554.639 271.92 cv
560.828 272.344 564.002 289.879 564.134 290.625 cv
564.158 290.762 564.067 290.891 563.932 290.915 cv
563.917 290.918 563.902 290.919 563.888 290.919 cv
cp
.360784 .411765 .647059 rgb
f
571.317 232.823 mo
571.307 232.979 571.253 233.164 571.165 233.377 cv
569.96 236.254 566.489 236.952 565.059 237.116 cv
565.331 234.294 li
571.317 232.823 li
cp
0 0 0 rgb
f
563.745 221.338 mo
563.745 221.338 560.929 228.554 562.204 232.494 cv
563.479 236.435 567.085 235.663 569.227 234.806 cv
571.368 233.949 572.323 232.576 572.323 232.576 cv
572.323 232.576 574.379 233.184 575.661 231.243 cv
576.943 229.302 576.021 227.168 574.843 226.718 cv
573.665 226.268 572.32 227.159 572.32 227.159 cv
573.317 225.055 li
573.317 225.055 568.357 214.761 563.745 221.338 cv
cp
.956863 .517647 .384314 rgb
f
572.32 227.159 mo
572.32 227.159 569.302 227.925 567.017 224.637 cv
564.73 221.35 564.856 219.946 564.856 219.946 cv
562.919 223.553 li
562.919 223.553 562.327 221.147 563.222 219.552 cv
564.116 217.956 565.141 218.227 565.141 218.227 cv
571.946 219.573 li
573.982 224.874 li
572.32 227.159 li
cp
0 0 0 rgb
f
565.738 232.272 mo
565.59 232.272 565.498 232.255 565.484 232.252 cv
565.35 232.225 565.262 232.093 565.289 231.957 cv
565.316 231.823 565.448 231.736 565.582 231.762 cv
565.624 231.771 566.506 231.918 567.299 230.891 cv
567.384 230.779 567.542 230.761 567.649 230.845 cv
567.759 230.93 567.779 231.087 567.695 231.195 cv
566.967 232.139 566.145 232.272 565.738 232.272 cv
cp
f
564.421 230.361 mo
564.318 230.361 564.223 230.298 564.186 230.196 cv
563.642 228.69 564.645 227.089 564.688 227.021 cv
564.763 226.906 564.919 226.872 565.032 226.945 cv
565.148 227.02 565.184 227.174 565.109 227.29 cv
565.101 227.305 564.196 228.754 564.656 230.026 cv
564.703 230.156 564.636 230.3 564.506 230.347 cv
564.478 230.356 564.449 230.361 564.421 230.361 cv
cp
f
567.773 227.054 mo
567.686 227.054 567.601 227.007 567.555 226.925 cv
567.438 226.713 567.293 226.59 567.112 226.551 cv
566.72 226.459 566.274 226.784 566.27 226.788 cv
566.155 226.871 566.001 226.846 565.92 226.734 cv
565.838 226.624 565.861 226.468 565.973 226.386 cv
565.997 226.368 566.6 225.927 567.217 226.062 cv
567.542 226.132 567.803 226.341 567.992 226.683 cv
568.059 226.804 568.016 226.956 567.895 227.022 cv
567.856 227.044 567.814 227.054 567.773 227.054 cv
cp
f
563.779 226.919 mo
563.694 226.919 563.61 226.875 563.563 226.796 cv
563.496 226.681 563.248 226.349 563.014 226.336 cv
562.918 226.33 562.783 226.407 562.66 226.569 cv
562.577 226.681 562.419 226.701 562.311 226.618 cv
562.2 226.535 562.178 226.379 562.262 226.269 cv
562.546 225.891 562.843 225.82 563.043 225.837 cv
563.585 225.868 563.955 226.474 563.995 226.543 cv
564.064 226.661 564.024 226.814 563.906 226.884 cv
563.866 226.907 563.822 226.919 563.779 226.919 cv
cp
f
567.52 224.986 mo
567.46 224.986 567.399 224.965 567.352 224.922 cv
566.49 224.141 566.035 224.522 566.016 224.538 cv
565.911 224.629 565.755 224.619 565.665 224.52 cv
565.573 224.419 565.577 224.266 565.676 224.172 cv
565.707 224.142 566.466 223.444 567.688 224.551 cv
567.79 224.644 567.798 224.802 567.705 224.904 cv
567.655 224.959 567.588 224.986 567.52 224.986 cv
cp
f
562.894 224.944 mo
562.836 224.944 562.778 224.925 562.731 224.884 cv
562.626 224.794 562.614 224.637 562.703 224.532 cv
562.808 224.41 563.354 223.797 563.862 223.893 cv
564.019 223.921 564.23 224.025 564.353 224.364 cv
564.399 224.494 564.332 224.638 564.202 224.685 cv
564.071 224.73 563.929 224.664 563.882 224.534 cv
563.863 224.482 563.824 224.394 563.772 224.384 cv
563.637 224.366 563.294 224.612 563.083 224.857 cv
563.034 224.915 562.964 224.944 562.894 224.944 cv
cp
f
572.766 230.495 mo
572.708 230.495 572.649 230.476 572.603 230.435 cv
572.498 230.345 572.486 230.187 572.576 230.082 cv
574.407 227.951 li
574.496 227.847 574.655 227.834 574.76 227.925 cv
574.864 228.015 574.876 228.173 574.786 228.277 cv
572.955 230.408 li
572.906 230.466 572.836 230.495 572.766 230.495 cv
cp
f
574.779 229.853 mo
574.754 229.852 573.411 229.712 573.411 229.712 cv
573.274 229.697 573.175 229.574 573.188 229.438 cv
573.203 229.3 573.326 229.197 573.463 229.214 cv
574.806 229.354 li
574.942 229.368 575.042 229.491 575.028 229.629 cv
575.015 229.757 574.906 229.853 574.779 229.853 cv
cp
f
565.969 276.598 mo
565.969 276.598 572.379 236.865 572.372 236.508 cv
572.365 236.149 572.365 236.149 572.365 236.149 cv
572.365 236.149 579.811 238.134 582.519 241.34 cv
584.486 243.671 583.097 275.274 582.248 275.938 cv
581.4 276.602 565.969 276.598 565.969 276.598 cv
cp
.639216 .482353 .564706 rgb
f
591.306 293.457 mo
573.188 297.316 li
572.036 297.562 570.902 296.826 570.657 295.674 cv
567.617 281.402 li
567.372 280.25 568.107 279.116 569.26 278.871 cv
587.377 275.013 li
588.529 274.767 589.663 275.502 589.908 276.654 cv
592.948 290.926 li
593.193 292.078 592.458 293.212 591.306 293.457 cv
cp
.25098 .313726 .498039 rgb
f
604.01 238.159 mo
598.38 269.709 li
598.38 269.709 594.79 273.31 590.149 275.289 cv
588.47 276.01 586.66 276.51 584.83 276.56 cv
579.49 276.689 575.09 274.22 573.38 273.1 cv
572.88 272.77 572.609 272.56 572.609 272.56 cv
585.39 257.14 li
585.39 257.14 586.42 253.619 591.5 246.52 cv
596.58 239.43 604.01 238.159 604.01 238.159 cv
cp
.407843 .713726 .847059 rgb
f
592.393 276.563 mo
592.393 276.563 584.832 292.562 583.382 317.14 cv
581.932 341.718 582.301 350.874 582.301 350.874 cv
606.412 349.682 li
606.412 349.682 605.723 324.992 606.347 322.522 cv
607.338 318.604 600.85 278.853 600.85 278.853 cv
592.393 276.563 li
cp
.639216 .482353 .564706 rgb
f
590.317 271.477 mo
589.978 279.097 li
589.978 279.097 595.689 281.137 605.088 280.672 cv
614.485 280.207 620.255 278.142 620.255 278.142 cv
620.827 239.892 li
620.827 239.892 615.463 237.102 608.633 237.537 cv
602.945 237.899 601.339 238.887 601.339 238.887 cv
590.317 271.477 li
cp
.407843 .713726 .847059 rgb
f
556.489 279.219 mo
556.489 279.219 558.012 270.083 560.608 256.414 cv
562.751 245.134 565.059 237.116 565.059 237.116 cv
565.059 237.116 558.917 238.56 557.361 239.285 cv
555.807 240.011 550.983 254.37 550.45 263.727 cv
549.917 273.083 550.937 278.667 551.432 279.055 cv
551.927 279.441 556.489 279.219 556.489 279.219 cv
cp
.639216 .482353 .564706 rgb
f
600.868 306.819 mo
600.762 306.819 600.663 306.751 600.63 306.645 cv
599.496 303.046 598.945 292.668 598.866 291.064 cv
593.213 289.879 li
593.078 289.851 592.991 289.718 593.02 289.582 cv
593.049 289.448 593.176 289.367 593.316 289.389 cv
599.158 290.614 li
599.27 290.638 599.351 290.734 599.356 290.848 cv
599.361 290.966 599.922 302.735 601.106 306.494 cv
601.148 306.626 601.075 306.767 600.943 306.808 cv
600.918 306.815 600.893 306.819 600.868 306.819 cv
cp
.968627 .701961 .411765 rgb
f
558.813 238.744 mo
558.813 238.744 558.424 252.377 564.587 267.821 cv
570.76 283.291 581.648 288.669 581.648 288.669 cv
581.648 283.479 li
581.648 283.479 572.766 274.622 568.354 263.032 cv
564.86 253.852 563.505 237.419 563.505 237.419 cv
563.505 237.419 561.872 237.116 558.813 238.744 cv
cp
.25098 .313726 .498039 rgb
f
591.04 264.379 mo
590.149 275.289 li
588.47 276.01 586.66 276.51 584.83 276.56 cv
579.49 276.689 575.09 274.22 573.38 273.1 cv
591.04 264.379 li
cp
.976471 .639216 .560784 rgb
f
561.971 264.377 mo
561.971 264.377 552.058 268.549 550.571 270.907 cv
549.085 273.266 549.758 279.587 550.598 279.541 cv
551.438 279.495 551.438 279.495 551.438 279.495 cv
551.438 279.495 552.258 281.486 553.193 280.932 cv
554.128 280.378 554.666 279.082 554.666 279.082 cv
554.666 279.082 554.776 280.793 555.842 280.707 cv
556.907 280.621 559.451 274.787 559.451 274.787 cv
559.451 274.787 563.749 274.262 565.808 270.253 cv
567.866 266.243 561.971 264.377 561.971 264.377 cv
cp
.956863 .517647 .384314 rgb
f
579.816 239.355 mo
579.816 239.355 591.742 246.244 592.216 261.074 cv
592.688 275.905 565.135 276.366 564.102 276.156 cv
563.068 275.947 563.068 275.947 563.068 275.947 cv
563.068 275.947 559.783 262.919 560.391 262.397 cv
560.998 261.875 575.667 258.959 575.667 258.959 cv
579.816 239.355 li
cp
.639216 .482353 .564706 rgb
f
601.118 369.297 mo
601.05 371.573 600.902 373.232 600.686 373.523 cv
599.889 374.604 566.551 377.104 564.893 376.976 cv
563.244 376.847 563.789 377.131 563.244 376.847 cv
562.823 376.628 562.913 374.2 562.976 373.025 cv
563.007 372.644 563.024 372.393 563.024 372.393 cv
563.024 372.393 562.819 368.258 565.687 366.094 cv
568.554 363.939 573.595 362.839 573.595 362.839 cv
573.595 362.839 582.035 356.364 582.739 356.009 cv
583.442 355.653 584.024 352.44 584.338 352.315 cv
584.653 352.199 599.416 351.89 600.347 352.484 cv
601.019 352.922 601.31 363.26 601.118 369.297 cv
cp
.360784 .411765 .647059 rgb
f
655.367 349.934 mo
655.501 351.208 633.661 374.636 632.418 375.618 cv
631.166 376.611 631.739 376.463 631.166 376.611 cv
630.593 376.76 628.114 373.618 628.114 373.618 cv
628.114 373.618 628.093 373.59 628.04 373.542 cv
627.617 373.093 625.338 370.532 625.897 367.461 cv
626.511 364.076 629.344 360.021 629.344 360.021 cv
629.344 360.021 631.08 349.974 631.345 349.27 cv
631.61 348.565 629.929 345.925 630.074 345.628 cv
630.21 345.341 640.407 335.524 641.439 335.344 cv
642.214 335.205 649.533 342.713 653.232 347.045 cv
654.486 348.515 655.332 349.614 655.367 349.934 cv
cp
f
611.9 233.113 mo
612.056 238.811 li
612.056 238.811 611.072 240.477 607.747 240.838 cv
605.27 241.107 604.382 240.57 604.382 240.57 cv
604.65 237.675 li
604.915 234.853 li
610.896 233.364 li
611.9 233.113 li
cp
.976471 .639216 .560784 rgb
f
610.896 233.364 mo
610.887 233.521 610.832 233.706 610.746 233.919 cv
609.549 236.799 606.08 237.508 604.65 237.675 cv
604.915 234.853 li
610.896 233.364 li
cp
0 0 0 rgb
f
603.291 221.9 mo
603.291 221.9 600.495 229.125 601.782 233.062 cv
603.068 236.998 606.672 236.216 608.811 235.354 cv
610.95 234.49 611.901 233.115 611.901 233.115 cv
611.901 233.115 613.959 233.716 615.235 231.771 cv
616.512 229.827 615.584 227.696 614.404 227.249 cv
613.225 226.802 611.883 227.697 611.883 227.697 cv
612.874 225.59 li
612.874 225.59 607.884 215.311 603.291 221.9 cv
cp
.976471 .639216 .560784 rgb
f
603.992 230.922 mo
603.891 230.922 603.794 230.859 603.758 230.758 cv
603.209 229.254 604.207 227.649 604.25 227.582 cv
604.323 227.465 604.477 227.432 604.595 227.505 cv
604.711 227.578 604.746 227.732 604.672 227.85 cv
604.663 227.864 603.764 229.316 604.227 230.586 cv
604.274 230.716 604.208 230.859 604.078 230.906 cv
604.05 230.917 604.021 230.922 603.992 230.922 cv
cp
0 0 0 rgb
f
612.337 231.032 mo
612.279 231.032 612.222 231.013 612.175 230.973 cv
612.069 230.883 612.058 230.725 612.146 230.62 cv
613.972 228.483 li
614.063 228.378 614.221 228.366 614.324 228.455 cv
614.43 228.545 614.441 228.703 614.353 228.808 cv
612.527 230.944 li
612.478 231.003 612.407 231.032 612.337 231.032 cv
cp
f
614.349 230.384 mo
614.323 230.383 612.981 230.247 612.981 230.247 cv
612.845 230.232 612.744 230.11 612.758 229.973 cv
612.772 229.836 612.883 229.729 613.032 229.749 cv
614.374 229.885 li
614.511 229.899 614.611 230.021 614.598 230.159 cv
614.584 230.288 614.476 230.384 614.349 230.384 cv
cp
f
605.664 232.312 mo
605.941 232.461 606.338 232.588 606.698 232.384 cv
607.043 232.189 607.27 231.891 607.411 231.634 cv
605.664 232.312 li
cp
606.285 232.993 mo
605.582 232.993 604.997 232.462 604.966 232.433 cv
604.902 232.374 604.874 232.287 604.891 232.202 cv
604.906 232.117 604.965 232.047 605.045 232.016 cv
607.771 230.957 li
607.856 230.925 607.956 230.941 608.025 231.002 cv
608.096 231.063 608.126 231.158 608.104 231.249 cv
608.094 231.292 607.84 232.314 606.944 232.819 cv
606.722 232.944 606.498 232.993 606.285 232.993 cv
cp
f
607.073 228.119 mo
606.916 228.107 606.813 227.987 606.824 227.85 cv
606.928 226.52 li
606.938 226.383 607.033 226.27 607.196 226.29 cv
607.334 226.301 607.437 226.421 607.426 226.559 cv
607.322 227.889 li
607.313 228.02 607.203 228.119 607.073 228.119 cv
cp
f
603.137 227.998 mo
602.976 227.983 602.875 227.861 602.888 227.724 cv
603.016 226.396 li
603.028 226.26 603.128 226.151 603.289 226.172 cv
603.426 226.186 603.526 226.308 603.514 226.445 cv
603.386 227.772 li
603.373 227.901 603.265 227.998 603.137 227.998 cv
cp
f
608.179 225.525 mo
608.093 225.525 608.009 225.48 607.962 225.4 cv
607.621 224.809 606.785 225.019 606.75 225.027 cv
606.611 225.066 606.479 224.982 606.444 224.85 cv
606.409 224.717 606.487 224.58 606.621 224.545 cv
606.67 224.53 607.858 224.223 608.396 225.15 cv
608.464 225.27 608.424 225.423 608.304 225.492 cv
608.265 225.515 608.222 225.525 608.179 225.525 cv
cp
f
602.678 224.979 mo
602.612 224.979 602.548 224.954 602.499 224.904 cv
602.402 224.806 602.404 224.647 602.503 224.551 cv
602.526 224.527 603.089 223.99 603.714 224.035 cv
604.025 224.059 604.293 224.214 604.509 224.497 cv
604.592 224.607 604.57 224.764 604.461 224.848 cv
604.352 224.931 604.194 224.909 604.11 224.8 cv
603.983 224.633 603.842 224.546 603.678 224.534 cv
603.278 224.505 602.856 224.904 602.853 224.908 cv
602.804 224.956 602.741 224.979 602.678 224.979 cv
cp
f
539.68 252.659 mo
539.588 253.92 539.587 255.959 540.238 256.557 cv
540.393 256.698 540.569 256.741 540.805 256.693 cv
541.089 256.633 541.173 256.487 541.212 256.384 cv
541.481 255.666 540.528 253.904 539.68 252.659 cv
cp
540.635 257.212 mo
540.357 257.212 540.106 257.115 539.9 256.925 cv
538.785 255.9 539.196 252.342 539.247 251.939 cv
539.26 251.839 539.333 251.755 539.431 251.729 cv
539.53 251.702 539.634 251.739 539.695 251.82 cv
539.952 252.163 542.189 255.204 541.681 256.559 cv
541.595 256.787 541.392 257.079 540.908 257.182 cv
540.814 257.202 540.724 257.212 540.635 257.212 cv
cp
1 1 1 rgb
f
550.345 267.161 mo
550.18 267.145 550.081 267.021 550.097 266.884 cv
550.15 266.403 551.42 255.1 552.051 252.687 cv
552.086 252.554 552.217 252.476 552.356 252.508 cv
552.49 252.543 552.569 252.68 552.535 252.813 cv
551.913 255.191 550.606 266.821 550.593 266.938 cv
550.579 267.066 550.471 267.161 550.345 267.161 cv
cp
f
567.96 240.482 mo
565.909 240.482 564.748 239.533 564.691 239.485 cv
564.585 239.397 564.571 239.24 564.66 239.134 cv
564.748 239.029 564.907 239.017 565.012 239.102 cv
565.026 239.114 566.549 240.34 569.136 239.875 cv
571.689 239.416 572.224 238.191 572.229 238.179 cv
572.281 238.053 572.427 237.989 572.554 238.042 cv
572.681 238.093 572.744 238.235 572.693 238.363 cv
572.67 238.424 572.081 239.854 569.224 240.367 cv
568.771 240.448 568.35 240.482 567.96 240.482 cv
cp
f
566.987 276.372 mo
566.863 276.372 566.756 276.28 566.739 276.155 cv
566.722 276.019 566.817 275.893 566.954 275.874 cv
567.032 275.864 574.772 274.833 576.87 274.378 cv
577.004 274.351 577.138 274.435 577.167 274.569 cv
577.196 274.704 577.11 274.837 576.976 274.866 cv
574.858 275.326 567.339 276.327 567.021 276.37 cv
567.009 276.371 566.998 276.372 566.987 276.372 cv
cp
f
576.578 256.285 mo
576.578 256.285 584.684 257.493 582.936 259.343 cv
581.188 261.191 576.545 260.271 576.545 260.271 cv
576.578 256.285 li
cp
.976471 .639216 .560784 rgb
f
572.647 256.434 mo
572.647 256.434 573.053 251.74 575.245 253.118 cv
577.438 254.497 578.705 262.932 576.204 263.905 cv
573.703 264.879 572.647 256.434 572.647 256.434 cv
cp
f
568.799 257.049 mo
568.799 257.049 569.204 252.355 571.396 253.733 cv
573.589 255.112 574.856 263.547 572.355 264.521 cv
569.854 265.494 568.799 257.049 568.799 257.049 cv
cp
f
565.652 259.872 mo
565.286 258.868 565.144 257.786 565.343 256.735 cv
565.52 255.806 565.961 254.985 567.021 255.421 cv
569.141 256.292 571.517 263.456 569.482 264.683 cv
567.973 265.592 566.376 261.858 565.652 259.872 cv
cp
f
570.063 262.651 mo
569.949 262.651 569.847 262.574 569.819 262.459 cv
568.556 257.106 li
568.523 256.972 568.607 256.837 568.741 256.806 cv
568.882 256.771 569.011 256.857 569.042 256.991 cv
570.306 262.344 li
570.338 262.479 570.254 262.613 570.12 262.645 cv
570.101 262.649 570.081 262.651 570.063 262.651 cv
cp
0 0 0 rgb
f
573.74 260.991 mo
573.619 260.991 573.513 260.903 573.493 260.779 cv
572.708 255.701 li
572.687 255.564 572.78 255.438 572.917 255.416 cv
573.051 255.397 573.181 255.488 573.202 255.625 cv
573.987 260.703 li
574.009 260.84 573.915 260.967 573.778 260.988 cv
573.766 260.99 573.753 260.991 573.74 260.991 cv
cp
f
606.728 241.205 mo
604.99 241.205 603.591 240.6 603.516 240.565 cv
603.389 240.51 603.332 240.362 603.388 240.236 cv
603.443 240.108 603.595 240.052 603.717 240.108 cv
603.74 240.119 606.022 241.107 608.271 240.515 cv
611.41 239.694 612.81 237.943 612.823 237.926 cv
612.908 237.816 613.066 237.798 613.174 237.882 cv
613.283 237.967 613.303 238.124 613.218 238.232 cv
613.158 238.31 611.712 240.132 608.398 240.999 cv
607.828 241.147 607.262 241.205 606.728 241.205 cv
cp
.407843 .462745 .666667 rgb
f
630.31 337.18 mo
630.242 337.18 630.175 337.152 630.125 337.099 cv
630.032 336.997 630.039 336.839 630.141 336.745 cv
640.563 327.195 li
640.664 327.104 640.822 327.109 640.916 327.211 cv
641.009 327.313 641.002 327.471 640.9 327.564 cv
630.479 337.114 li
630.431 337.158 630.37 337.18 630.31 337.18 cv
cp
.968627 .701961 .411765 rgb
f
592.341 346.622 mo
592.208 346.622 592.098 346.519 592.091 346.385 cv
592.084 346.246 592.19 346.129 592.328 346.122 cv
606.201 345.437 li
606.358 345.442 606.457 345.536 606.464 345.674 cv
606.471 345.813 606.364 345.93 606.227 345.937 cv
592.354 346.622 li
592.349 346.622 592.345 346.622 592.341 346.622 cv
cp
f
585.212 358.153 mo
585.178 358.153 585.143 358.146 585.109 358.131 cv
581.944 356.701 li
581.818 356.645 581.762 356.496 581.819 356.371 cv
581.875 356.244 582.022 356.186 582.149 356.246 cv
585.314 357.676 li
585.44 357.732 585.497 357.881 585.439 358.006 cv
585.398 358.099 585.307 358.153 585.212 358.153 cv
cp
.407843 .713726 .847059 rgb
f
582.812 361.444 mo
582.788 361.444 582.764 361.441 582.739 361.434 cv
577.682 359.909 li
577.55 359.869 577.475 359.729 577.515 359.598 cv
577.554 359.466 577.69 359.387 577.826 359.431 cv
582.884 360.955 li
583.016 360.995 583.091 361.135 583.051 361.267 cv
583.019 361.375 582.919 361.444 582.812 361.444 cv
cp
f
630.998 351.096 mo
630.895 351.096 630.797 351.03 630.762 350.927 cv
630.717 350.797 630.786 350.654 630.917 350.609 cv
633.815 349.612 li
633.94 349.565 634.089 349.637 634.133 349.768 cv
634.178 349.897 634.108 350.04 633.978 350.085 cv
631.079 351.082 li
631.053 351.092 631.025 351.096 630.998 351.096 cv
cp
f
630.106 355.933 mo
630.011 355.933 629.919 355.877 629.878 355.783 cv
629.822 355.657 629.879 355.51 630.006 355.454 cv
635.141 353.191 li
635.263 353.136 635.414 353.192 635.47 353.319 cv
635.525 353.445 635.469 353.593 635.342 353.648 cv
630.207 355.911 li
630.175 355.926 630.141 355.933 630.106 355.933 cv
cp
f
548.832 364.037 mo
548.802 364.037 548.771 364.031 548.741 364.021 cv
545.264 362.669 li
545.135 362.618 545.071 362.474 545.121 362.345 cv
545.172 362.216 545.315 362.155 545.445 362.202 cv
548.923 363.554 li
549.052 363.604 549.115 363.749 549.065 363.878 cv
549.026 363.977 548.932 364.037 548.832 364.037 cv
cp
1 1 1 rgb
f
551.432 279.304 mo
551.313 279.304 551.207 279.219 551.186 279.098 cv
550.193 273.526 li
550.169 273.391 550.26 273.261 550.396 273.236 cv
550.525 273.209 550.661 273.303 550.686 273.438 cv
551.678 279.01 li
551.702 279.146 551.611 279.275 551.476 279.3 cv
551.461 279.303 551.446 279.304 551.432 279.304 cv
cp
0 0 0 rgb
f
554.666 279.332 mo
554.556 279.332 554.454 279.258 554.425 279.146 cv
553.109 274.195 li
553.073 274.062 553.153 273.925 553.286 273.89 cv
553.417 273.855 553.557 273.934 553.592 274.066 cv
554.907 279.018 li
554.943 279.151 554.863 279.288 554.73 279.323 cv
554.709 279.329 554.688 279.332 554.666 279.332 cv
cp
f
611.883 227.697 mo
611.883 227.697 611.162 227.74 610.896 226.539 cv
610.632 225.338 611.883 223.868 611.883 223.868 cv
611.883 223.868 609.909 221.616 606.686 220.727 cv
604.937 220.245 603.291 221.9 603.291 221.9 cv
603.291 221.9 599.922 217.722 601.443 216.863 cv
602.965 216.005 604.31 216.863 604.31 216.863 cv
604.31 216.863 608.635 215.747 611.883 218.209 cv
615.132 220.671 615.148 222.723 615.148 222.723 cv
615.148 222.723 616.965 223.55 616.965 224.694 cv
616.965 225.838 615.461 228.251 615.461 228.251 cv
615.461 228.251 614.162 226.306 611.883 227.697 cv
cp
f
617.18 238.597 mo
617.18 238.597 624.213 240.121 629.331 246.274 cv
634.063 251.963 635.206 258.912 635.206 258.912 cv
635.206 258.912 629.93 257.094 626.945 257.125 cv
623.961 257.156 620.017 258.499 620.017 258.499 cv
617.18 238.597 li
cp
.407843 .713726 .847059 rgb
f
619.246 239.24 mo
619.246 239.24 618.274 246.274 619.129 251.282 cv
620.042 256.631 623.038 263.813 623.038 263.813 cv
621.358 266.414 li
621.358 266.414 619.273 265.396 618.066 263.693 cv
616.576 261.59 613.639 255.143 613.639 247.17 cv
613.639 239.198 614.196 237.483 614.196 237.483 cv
614.196 237.483 618.19 238.222 619.246 239.24 cv
cp
.25098 .313726 .498039 rgb
f
634.582 258.707 mo
634.582 258.707 639.569 272.681 631.262 274.359 cv
622.954 276.037 618.087 257.995 618.087 257.995 cv
623.877 255.143 li
626.945 257.125 li
626.945 257.125 632.437 257.492 634.582 258.707 cv
cp
.976471 .639216 .560784 rgb
f
623.877 255.143 mo
623.877 255.143 623.541 251.813 623.205 250.289 cv
622.87 248.765 621.359 247.59 621.359 247.59 cv
621.359 247.59 619.655 245.774 618.926 245.751 cv
618.196 245.728 617.583 246.918 617.583 246.918 cv
617.583 246.918 614.646 248.396 613.639 249.293 cv
612.632 250.191 611.965 252.457 612.383 253.464 cv
612.8 254.471 613.891 256.279 614.563 255.837 cv
615.233 255.394 615.129 253.855 615.129 253.855 cv
615.129 253.855 617.08 258.992 620.521 259.459 cv
623.961 259.926 623.877 255.143 623.877 255.143 cv
cp
f
622.227 250.055 mo
622.127 250.055 622.032 249.994 621.994 249.896 cv
621.127 247.681 li
621.076 247.553 621.14 247.407 621.269 247.357 cv
621.394 247.308 621.542 247.37 621.592 247.499 cv
622.459 249.714 li
622.51 249.842 622.446 249.987 622.317 250.037 cv
622.288 250.049 622.257 250.055 622.227 250.055 cv
cp
0 0 0 rgb
f
615.128 254.105 mo
615.056 254.105 614.985 254.074 614.937 254.017 cv
613.897 252.782 li
613.809 252.677 613.822 252.519 613.928 252.43 cv
614.033 252.341 614.19 252.354 614.28 252.46 cv
614.878 253.17 li
614.878 252.621 li
614.878 252.483 614.99 252.371 615.128 252.371 cv
615.266 252.371 615.378 252.483 615.378 252.621 cv
615.378 253.855 li
615.378 253.961 615.313 254.055 615.214 254.09 cv
615.186 254.101 615.156 254.105 615.128 254.105 cv
cp
f
628.763 283.724 mo
627.635 283.724 626.367 283.547 624.951 283.12 cv
624.819 283.08 624.744 282.94 624.784 282.809 cv
624.824 282.677 624.961 282.6 625.096 282.642 cv
632.746 284.948 635.725 279.794 635.848 279.573 cv
635.915 279.453 636.068 279.412 636.188 279.477 cv
636.309 279.544 636.352 279.696 636.285 279.816 cv
636.259 279.864 634.042 283.724 628.763 283.724 cv
cp
.572549 .705882 .917647 rgb
f
544.994 288.247 mo
544.994 288.247 540.069 322.425 540.462 322.604 cv
540.854 322.783 573.703 322.214 574.275 322.001 cv
574.847 321.789 569.92 287.371 569.92 287.371 cv
544.994 288.247 li
cp
.937255 .643137 .34902 rgb
f
542.176 288.247 mo
542.176 288.247 537.252 322.425 537.644 322.604 cv
538.036 322.783 570.886 322.214 571.457 322.001 cv
572.029 321.789 567.102 287.371 567.102 287.371 cv
542.176 288.247 li
cp
.968627 .701961 .411765 rgb
f
576.922 222.298 mo
576.922 222.298 583.265 214.462 585.932 219.142 cv
588.599 223.821 578.376 226.545 578.376 226.545 cv
576.922 222.298 li
cp
0 0 0 rgb
f
617.302 286.528 mo
616.405 286.528 615.604 286.303 614.905 285.853 cv
613.052 284.655 612.623 282.319 612.605 282.22 cv
612.581 282.084 612.672 281.955 612.808 281.931 cv
612.947 281.9 613.073 281.997 613.098 282.133 cv
613.102 282.155 613.511 284.358 615.18 285.435 cv
616.149 286.06 617.362 286.19 618.786 285.828 cv
618.916 285.796 619.057 285.875 619.09 286.009 cv
619.124 286.143 619.043 286.278 618.909 286.313 cv
618.345 286.457 617.808 286.528 617.302 286.528 cv
cp
.968627 .701961 .411765 rgb
f
570.257 285.876 mo
570.141 285.876 570.037 285.795 570.012 285.677 cv
569.984 285.542 570.07 285.409 570.206 285.381 cv
590.403 281.17 li
590.535 281.148 590.67 281.229 590.699 281.364 cv
590.727 281.499 590.641 281.632 590.505 281.66 cv
570.308 285.871 li
570.291 285.874 570.273 285.876 570.257 285.876 cv
cp
.572549 .705882 .917647 rgb
f
582.293 285.577 mo
581.955 285.577 581.645 285.482 581.366 285.295 cv
580.549 284.742 580.319 283.574 580.31 283.525 cv
580.284 283.39 580.373 283.259 580.509 283.233 cv
580.642 283.21 580.775 283.296 580.801 283.432 cv
580.803 283.441 581.003 284.447 581.647 284.881 cv
581.919 285.064 582.228 285.118 582.588 285.047 cv
582.937 284.978 583.155 284.834 583.257 284.607 cv
583.477 284.121 583.122 283.323 582.967 283.057 cv
582.897 282.938 582.938 282.784 583.057 282.715 cv
583.176 282.644 583.327 282.684 583.398 282.805 cv
583.427 282.853 584.083 283.989 583.713 284.812 cv
583.543 285.191 583.197 285.436 582.686 285.537 cv
582.551 285.563 582.42 285.577 582.293 285.577 cv
cp
f
150.933 65.6802 mo
150.933 65.6802 152.857 62.3442 155.155 62.5396 cv
157.454 62.7344 159.718 66.0195 159.718 66.0195 cv
161.419 71.1328 li
161.419 71.1328 157.155 75.0884 153.489 74.3872 cv
149.822 73.686 148.739 70.9321 149.044 69.6284 cv
149.35 68.3252 150.933 65.6802 150.933 65.6802 cv
cp
.956863 .517647 .384314 rgb
f
162.245 73.3525 mo
163.1 73.3525 li
165.988 73.3525 168.33 71.0112 168.33 68.1226 cv
168.33 60.7085 li
157.015 60.7085 li
157.015 68.1226 li
157.015 71.0112 159.356 73.3525 162.245 73.3525 cv
cp
.968627 .701961 .411765 rgb
f
157.015 60.7085 mo
157.015 61.0679 159.548 61.3589 162.672 61.3589 cv
165.797 61.3589 168.33 61.0679 168.33 60.7085 cv
168.33 60.3496 165.797 60.0586 162.672 60.0586 cv
159.548 60.0586 157.015 60.3496 157.015 60.7085 cv
cp
1 1 1 rgb
f
154.426 66.5288 mo
154.426 68.2378 155.784 69.6284 157.454 69.6284 cv
159.123 69.6284 160.481 68.2378 160.481 66.5288 cv
160.481 64.8198 159.123 63.4292 157.454 63.4292 cv
155.784 63.4292 154.426 64.8198 154.426 66.5288 cv
cp
153.489 66.5288 mo
153.489 64.4365 155.267 62.7344 157.454 62.7344 cv
159.64 62.7344 161.419 64.4365 161.419 66.5288 cv
161.419 68.6211 159.64 70.3232 157.454 70.3232 cv
155.267 70.3232 153.489 68.6211 153.489 66.5288 cv
cp
.968627 .701961 .411765 rgb
f
151.396 65.353 mo
151.396 65.353 152.836 63.5068 154.291 64.1011 cv
155.746 64.6953 158.639 66.8496 157.438 67.752 cv
156.237 68.6543 154.291 67.752 154.291 67.752 cv
154.291 67.752 154.133 71.5283 152.701 72.0317 cv
151.27 72.5352 149.317 72.5566 149.255 69.8267 cv
149.217 68.1362 151.396 65.353 151.396 65.353 cv
cp
.956863 .517647 .384314 rgb
f
150.912 72.5093 mo
150.779 72.5093 150.668 72.4048 150.662 72.271 cv
150.655 72.1333 150.762 72.0161 150.9 72.0098 cv
152.079 71.9536 152.948 71.5728 153.484 70.8765 cv
154.428 69.6504 154.05 67.8228 154.046 67.8047 cv
154.026 67.7095 154.063 67.6113 154.14 67.5527 cv
154.216 67.4941 154.32 67.4858 154.408 67.5308 cv
154.822 67.7505 156.054 68.269 156.767 68.0332 cv
156.975 67.9644 157.12 67.8374 157.212 67.6445 cv
157.432 67.1821 156.458 65.9272 155.696 65.1831 cv
155.597 65.0869 155.595 64.9287 155.692 64.8296 cv
155.789 64.7319 155.947 64.7295 156.045 64.8252 cv
156.395 65.166 158.114 66.9131 157.663 67.8594 cv
157.512 68.1777 157.263 68.396 156.923 68.5078 cv
156.188 68.7549 155.171 68.4131 154.603 68.1729 cv
154.667 68.8628 154.659 70.1675 153.882 71.1787 cv
153.252 71.9985 152.257 72.4458 150.923 72.5088 cv
150.919 72.5093 150.916 72.5093 150.912 72.5093 cv
cp
0 0 0 rgb
f
113.285 40.7139 mo
113.285 40.7139 109.887 40.5322 109.22 45.9951 cv
108.554 51.4585 110.613 57.1577 110.613 57.1577 cv
130.012 54.9814 li
130.012 54.9814 129.651 41.6665 124.936 39.8335 cv
120.22 38 113.285 40.7139 113.285 40.7139 cv
cp
f
218.918 137.307 mo
218.918 137.307 212.415 139.5 203.411 133.254 cv
194.408 127.009 204.325 118.407 207.445 116.718 cv
210.565 115.03 213.226 114.867 213.226 114.867 cv
213.226 114.867 209.896 116.458 212.359 118.219 cv
214.822 119.98 218.257 118.164 217.462 116.852 cv
216.668 115.54 216.668 115.54 216.668 115.54 cv
216.668 115.54 221.149 116.502 224.906 118.009 cv
228.663 119.515 228.663 119.515 228.663 119.515 cv
228.663 119.515 223.421 119.173 224.306 120.292 cv
225.19 121.412 231.454 121.076 231.454 121.076 cv
231.454 121.076 235.428 123.121 236.646 124.531 cv
237.865 125.94 237.865 125.94 237.865 125.94 cv
237.865 125.94 235.568 128.347 233.624 128.982 cv
231.68 129.619 231.68 129.619 231.68 129.619 cv
231.68 129.619 230.103 127.471 227.569 128.867 cv
225.036 130.264 228.605 132.171 228.605 132.171 cv
224.551 134.307 li
224.551 134.307 221.347 131.12 219.211 133.172 cv
217.075 135.225 218.918 137.307 218.918 137.307 cv
cp
.513726 .647059 .478431 rgb
f
193.34 140.142 mo
193.176 140.126 193.076 140.003 193.091 139.866 cv
193.101 139.771 194.208 130.33 204.151 126.044 cv
214.3 121.669 229.521 124.866 229.673 124.897 cv
229.808 124.927 229.894 125.06 229.865 125.195 cv
229.836 125.33 229.708 125.415 229.568 125.387 cv
229.417 125.354 214.35 122.193 204.349 126.503 cv
194.682 130.67 193.598 139.827 193.588 139.918 cv
193.574 140.047 193.466 140.142 193.34 140.142 cv
cp
.313726 .470588 .286275 rgb
f
163.306 120.693 mo
163.306 120.693 168.264 125.438 179.067 123.602 cv
189.87 121.766 184.538 109.769 182.429 106.916 cv
180.32 104.063 177.98 102.787 177.98 102.787 cv
177.98 102.787 180.32 105.64 177.342 106.19 cv
174.365 106.74 172.025 103.638 173.301 102.787 cv
174.578 101.937 174.578 101.937 174.578 101.937 cv
174.578 101.937 170.111 100.907 166.07 100.677 cv
162.029 100.448 162.029 100.448 162.029 100.448 cv
162.029 100.448 166.921 102.362 165.645 103 cv
164.369 103.638 158.839 100.677 158.839 100.677 cv
158.839 100.677 154.373 100.843 152.671 101.603 cv
150.97 102.362 150.97 102.362 150.97 102.362 cv
150.97 102.362 152.03 105.515 153.521 106.916 cv
155.011 108.317 155.011 108.317 155.011 108.317 cv
155.011 108.317 157.351 107.041 159.052 109.38 cv
160.753 111.72 156.712 111.933 156.712 111.933 cv
159.477 115.586 li
159.477 115.586 163.731 114.059 164.794 116.824 cv
165.858 119.589 163.306 120.693 163.306 120.693 cv
cp
.513726 .647059 .478431 rgb
f
209.971 115.062 mo
209.971 115.062 209.507 123.84 200.295 123.519 cv
190.663 123.183 190.043 112.543 190.889 109.682 cv
191.734 106.819 193.215 105.137 193.215 105.137 cv
193.215 105.137 191.557 108.946 194.068 108.522 cv
196.58 108.1 198.167 104.094 196.913 103.789 cv
195.66 103.484 195.66 103.484 195.66 103.484 cv
195.66 103.484 198.893 101.384 202.021 100.039 cv
205.148 98.6934 205.148 98.6934 205.148 98.6934 cv
205.148 98.6934 201.833 101.615 203.026 101.752 cv
204.218 101.889 207.736 97.9556 207.736 97.9556 cv
207.736 97.9556 211.313 96.8003 212.877 96.9102 cv
214.44 97.0205 214.44 97.0205 214.44 97.0205 cv
214.44 97.0205 214.511 99.8179 213.736 101.354 cv
212.962 102.891 212.962 102.891 212.962 102.891 cv
212.962 102.891 210.745 102.557 210.075 104.896 cv
209.404 107.234 212.659 106.239 212.659 106.239 cv
211.526 109.922 li
211.526 109.922 207.724 109.941 207.68 112.433 cv
207.636 114.924 209.971 115.062 209.971 115.062 cv
cp
f
193.34 144.635 mo
193.169 144.615 193.073 144.489 193.091 144.352 cv
193.104 144.258 194.293 134.801 189.25 126.328 cv
182.342 114.722 164.886 108.459 164.711 108.397 cv
164.581 108.352 164.512 108.208 164.558 108.079 cv
164.604 107.948 164.746 107.88 164.877 107.926 cv
165.054 107.988 182.678 114.309 189.68 126.072 cv
194.814 134.699 193.6 144.322 193.587 144.418 cv
193.57 144.544 193.463 144.635 193.34 144.635 cv
cp
.313726 .470588 .286275 rgb
f
192.446 133.689 mo
192.315 133.689 192.205 133.587 192.197 133.455 cv
191.194 117.04 204.077 106.106 204.207 105.998 cv
204.312 105.909 204.47 105.924 204.559 106.03 cv
204.647 106.136 204.633 106.293 204.527 106.382 cv
204.398 106.489 191.708 117.267 192.696 133.424 cv
192.704 133.562 192.599 133.681 192.461 133.689 cv
192.457 133.689 192.451 133.689 192.446 133.689 cv
cp
f
203.716 162.911 mo
189.331 162.911 li
188.551 162.911 187.898 162.355 187.821 161.626 cv
185.621 140.669 li
185.533 139.832 186.233 139.106 187.13 139.106 cv
205.917 139.106 li
206.814 139.106 207.515 139.832 207.427 140.669 cv
205.226 161.626 li
205.149 162.355 204.497 162.911 203.716 162.911 cv
cp
.556863 .396078 .490196 rgb
f
200.532 162.911 mo
186.146 162.911 li
185.367 162.911 184.714 162.355 184.637 161.626 cv
182.437 140.669 li
182.349 139.832 183.049 139.106 183.946 139.106 cv
202.733 139.106 li
203.63 139.106 204.331 139.832 204.243 140.669 cv
202.042 161.626 li
201.965 162.355 201.313 162.911 200.532 162.911 cv
cp
.639216 .482353 .564706 rgb
f
136.645 90.3516 mo
165.022 97.3115 li
155.593 108.162 li
136.645 90.3516 li
cp
.407843 .462745 .666667 rgb
f
43.1138 98.4927 mo
44.1313 155.506 li
44.1953 158.739 46.4404 161.321 49.188 161.321 cv
71.5708 161.321 li
71.5708 133.999 li
43.1138 98.4927 li
cp
f
118.591 64.6382 mo
117.903 63.6758 45.0669 56.2563 55.0068 79.5928 cv
65.645 104.568 107.474 130.252 139.854 126.394 cv
167.458 123.104 145.22 83.77 136.412 69.8467 cv
134.495 66.8174 131.198 64.9502 127.614 64.8613 cv
118.591 64.6382 li
cp
f
69.6172 71.8945 mo
68.9292 70.9321 51.0303 62.9609 44.3442 89.2705 cv
37.6582 115.581 58.9375 140.211 90.8804 133.65 cv
106.282 130.486 108.646 119.892 106.758 109.448 cv
104.366 96.21 95.6245 84.9849 83.6084 78.937 cv
69.6172 71.8945 li
cp
f
69.8789 148.607 mo
160.262 148.607 li
160.026 110.683 li
64.4131 110.683 li
69.8789 148.607 li
cp
f
158.868 161.321 mo
67.4985 161.321 li
63.21 161.321 59.7334 157.845 59.7334 153.556 cv
59.7334 152.238 li
59.7334 147.95 63.21 144.473 67.4985 144.473 cv
158.868 144.473 li
163.157 144.473 166.633 147.95 166.633 152.238 cv
166.633 153.556 li
166.633 157.845 163.157 161.321 158.868 161.321 cv
cp
.466667 .537255 .737255 rgb
f
172.358 105.715 mo
172.358 110.463 168.713 114.313 164.216 114.313 cv
159.72 114.313 156.075 110.463 156.075 105.715 cv
156.075 100.965 159.72 97.1157 164.216 97.1157 cv
168.713 97.1157 172.358 100.965 172.358 105.715 cv
cp
f
172.312 105.715 mo
172.527 154.51 li
172.54 157.236 170.333 159.481 167.537 159.587 cv
164.561 159.7 li
156.313 150.803 li
156.313 106.904 li
172.312 105.715 li
cp
f
173.68 167.284 mo
173.128 167.661 139.421 168.54 138.613 167.906 cv
138.324 167.679 138.215 166.083 138.253 163.792 cv
138.32 159.626 140.107 152.379 141.062 147.921 cv
141.062 147.921 152.872 147.795 153.971 148.381 cv
155.08 148.972 167.141 157.642 167.141 157.642 cv
167.141 157.642 171.587 158.948 173.334 161.382 cv
173.845 162.096 174.138 162.876 174.275 163.614 cv
174.611 165.401 174.067 167.028 173.68 167.284 cv
cp
.556863 .396078 .490196 rgb
f
173.68 167.284 mo
173.128 167.661 139.421 168.54 138.613 167.906 cv
138.324 167.679 138.215 166.083 138.253 163.792 cv
174.275 163.614 li
174.611 165.401 174.067 167.028 173.68 167.284 cv
cp
1 1 1 rgb
f
163.774 155.531 mo
163.773 155.531 153.906 155.511 153.906 155.511 cv
153.799 155.511 153.705 155.442 153.67 155.341 cv
153.636 155.24 153.669 155.128 153.754 155.063 cv
158.324 151.541 li
158.433 151.457 158.59 151.477 158.675 151.586 cv
158.759 151.695 158.739 151.853 158.629 151.937 cv
154.639 155.012 li
163.774 155.031 li
163.913 155.032 164.024 155.144 164.024 155.282 cv
164.023 155.419 163.912 155.531 163.774 155.531 cv
cp
f
152.909 170.013 mo
152.315 170.393 116.76 170.29 115.927 169.597 cv
115.629 169.349 115.563 167.663 115.674 165.25 cv
115.872 160.86 117.977 153.277 119.118 148.607 cv
119.118 148.607 131.571 148.834 132.712 149.486 cv
133.862 150.143 146.311 159.649 146.311 159.649 cv
146.311 159.649 150.957 161.162 152.725 163.781 cv
153.241 164.549 153.526 165.38 153.648 166.162 cv
153.947 168.056 153.325 169.755 152.909 170.013 cv
cp
.639216 .482353 .564706 rgb
f
152.909 170.013 mo
152.315 170.393 116.76 170.29 115.927 169.597 cv
115.629 169.349 115.563 167.663 115.674 165.25 cv
153.648 166.162 li
153.947 168.056 153.325 169.755 152.909 170.013 cv
cp
1 1 1 rgb
f
142.833 157.308 mo
142.826 157.308 132.426 156.985 132.426 156.985 cv
132.319 156.982 132.227 156.911 132.195 156.809 cv
132.164 156.707 132.201 156.596 132.287 156.533 cv
137.211 152.96 li
137.323 152.88 137.479 152.903 137.561 153.016 cv
137.642 153.127 137.617 153.284 137.505 153.365 cv
133.173 156.508 li
142.841 156.808 li
142.979 156.813 143.088 156.928 143.083 157.066 cv
143.079 157.201 142.968 157.308 142.833 157.308 cv
cp
f
73.8535 147.299 mo
73.2768 158.219 li
85.8584 161.321 li
86.8589 156.866 li
86.7895 145.731 li
73.8535 147.299 li
cp
.956863 .517647 .384314 rgb
f
105.866 146.244 mo
106.054 157.178 li
118.822 159.393 li
119.509 154.879 li
118.662 143.776 li
105.866 146.244 li
cp
f
105.026 120.478 mo
104.968 120.478 104.911 120.455 104.868 120.409 cv
97.7651 112.867 96.5391 104.194 96.5273 104.107 cv
96.5117 103.988 96.5952 103.878 96.7143 103.862 cv
96.8281 103.847 96.9434 103.93 96.959 104.049 cv
96.9702 104.135 98.1821 112.674 105.185 120.11 cv
105.267 120.198 105.263 120.336 105.176 120.418 cv
105.134 120.458 105.08 120.478 105.026 120.478 cv
cp
.909804 .509804 .109804 rgb
f
130.896 90.1465 mo
130.896 90.1465 154.768 101.535 157.469 106.227 cv
160.17 110.918 157.195 149.151 157.195 149.151 cv
137.687 149.422 li
134.985 128.057 li
120.157 92.0664 li
130.896 90.1465 li
cp
.968627 .701961 .411765 rgb
f
106.032 92.418 mo
106.032 92.418 103.86 102.147 105.46 106.044 cv
106.745 109.172 115.958 117.343 115.958 117.343 cv
116.462 150.184 li
139.018 151.236 li
139.018 151.236 139.509 113.707 139.133 110.172 cv
138.756 106.637 124.007 92.3042 124.007 92.3042 cv
106.032 92.418 li
cp
f
140.311 149.488 mo
140.156 149.479 140.052 149.359 140.061 149.222 cv
140.083 148.87 142.304 113.999 141.481 109.937 cv
140.922 107.176 130.801 97.7388 130.699 97.6436 cv
130.636 97.585 130.607 97.4976 130.624 97.4126 cv
130.64 97.3281 130.699 97.2578 130.78 97.2271 cv
136.862 94.8975 li
136.989 94.8481 137.135 94.9126 137.185 95.0415 cv
137.234 95.1704 137.169 95.3149 137.041 95.3643 cv
131.332 97.5508 li
133.049 99.167 141.43 107.163 141.972 109.837 cv
142.808 113.964 140.652 147.815 140.56 149.254 cv
140.551 149.386 140.441 149.488 140.311 149.488 cv
cp
1 1 1 rgb
f
118.829 114.739 mo
118.547 114.739 118.288 114.819 118.045 114.98 cv
116.968 115.695 116.539 117.768 116.398 118.681 cv
117.96 117.712 120.046 116.123 119.954 115.311 cv
119.931 115.105 119.734 114.943 119.37 114.828 cv
119.18 114.769 119 114.739 118.829 114.739 cv
cp
116.124 119.318 mo
116.083 119.318 116.043 119.307 116.007 119.284 cv
115.938 119.24 115.9 119.162 115.907 119.081 cv
115.92 118.941 116.241 115.656 117.804 114.618 cv
118.306 114.285 118.877 114.216 119.5 114.413 cv
120.044 114.584 120.342 114.87 120.386 115.262 cv
120.55 116.712 116.676 119.029 116.234 119.288 cv
116.2 119.308 116.162 119.318 116.124 119.318 cv
cp
f
89.4072 91.4629 mo
89.4072 91.4629 115.055 100.933 118.7 105.741 cv
121.855 109.903 125.884 150.239 125.129 150.996 cv
124.375 151.753 101.948 152.025 100.973 151.366 cv
99.999 150.708 95.27 121.023 93.897 120.946 cv
92.5239 120.87 66.2295 94.7251 66.2295 94.7251 cv
89.4072 91.4629 li
cp
.25098 .313726 .498039 rgb
f
117.343 52.6958 mo
117.326 58.3472 li
117.326 58.3472 118.341 59.9751 121.646 60.2534 cv
124.108 60.4604 124.976 59.9063 124.976 59.9063 cv
124.641 57.043 li
124.31 54.2505 li
118.344 52.9199 li
117.343 52.6958 li
cp
.956863 .517647 .384314 rgb
f
118.344 52.9199 mo
118.357 53.0742 118.416 53.2568 118.506 53.4658 cv
119.763 56.2925 123.218 56.9116 124.641 57.043 cv
124.31 54.2505 li
118.344 52.9199 li
cp
0 0 0 rgb
f
125.608 41.3721 mo
125.608 41.3721 128.553 48.4668 127.373 52.4004 cv
126.192 56.334 122.601 55.645 120.459 54.8413 cv
118.318 54.0371 117.342 52.6968 117.342 52.6968 cv
117.342 52.6968 115.316 53.3423 114.003 51.4453 cv
112.691 49.5483 113.56 47.4136 114.719 46.9419 cv
115.877 46.4702 117.229 47.3257 117.229 47.3257 cv
116.196 45.2607 li
116.196 45.2607 120.895 34.9492 125.608 41.3721 cv
cp
.956863 .517647 .384314 rgb
f
117.012 50.4014 mo
116.961 50.4014 116.91 50.3857 116.866 50.354 cv
114.325 48.5151 li
114.213 48.4341 114.187 48.2778 114.269 48.166 cv
114.349 48.0537 114.506 48.0293 114.618 48.1099 cv
117.159 49.9487 li
117.271 50.0298 117.296 50.186 117.215 50.2979 cv
117.166 50.3657 117.089 50.4014 117.012 50.4014 cv
cp
0 0 0 rgb
f
128.66 61.1875 mo
128.66 61.1875 133.303 66.918 137.373 68.1382 cv
141.443 69.3589 148.378 66.3906 148.378 66.3906 cv
154.092 75.312 li
154.092 75.312 149.707 88.2256 134.174 85.249 cv
116.917 81.9419 128.66 61.1875 128.66 61.1875 cv
cp
.572549 .705882 .917647 rgb
f
91.5356 59.8892 mo
91.5356 59.8892 94.4526 62.4131 97.9287 63.4385 cv
101.792 64.5781 105.548 63.9619 105.548 63.9619 cv
105.548 63.9619 100.598 73.7671 98.5742 79.4395 cv
96.978 83.9126 95.8935 88.4585 95.8935 88.4585 cv
95.8935 88.4585 89.0591 89.0273 88.4268 84.5542 cv
87.7944 80.0815 91.5356 59.8892 91.5356 59.8892 cv
cp
.639216 .482353 .564706 rgb
f
114.691 50.3628 mo
114.58 50.3628 114.478 50.2876 114.449 50.1743 cv
114.415 50.0405 114.496 49.9043 114.63 49.8706 cv
116.308 49.4438 li
116.443 49.4072 116.578 49.4907 116.612 49.6245 cv
116.646 49.7583 116.565 49.8945 116.431 49.9282 cv
114.753 50.355 li
114.732 50.3604 114.711 50.3628 114.691 50.3628 cv
cp
0 0 0 rgb
f
125.381 49.4883 mo
125.206 49.4639 125.113 49.3364 125.134 49.1997 cv
125.394 47.5308 124.333 46.6299 124.288 46.5928 cv
124.182 46.5049 124.166 46.3472 124.253 46.2407 cv
124.342 46.1343 124.498 46.1187 124.604 46.2056 cv
124.659 46.25 125.934 47.3159 125.628 49.2769 cv
125.609 49.4004 125.502 49.4883 125.381 49.4883 cv
cp
f
126.459 43.8076 mo
126.435 43.8066 125.362 43.7056 125.362 43.7056 cv
125.224 43.6924 125.124 43.5708 125.136 43.4331 cv
125.149 43.2959 125.271 43.2021 125.409 43.2075 cv
126.482 43.3086 li
126.62 43.3218 126.72 43.4434 126.708 43.5811 cv
126.695 43.7104 126.586 43.8076 126.459 43.8076 cv
cp
f
121.629 44.7334 mo
121.533 44.7334 121.441 44.6772 121.4 44.583 cv
121.345 44.4565 121.403 44.3091 121.53 44.2544 cv
122.979 43.624 li
123.104 43.5688 123.252 43.6265 123.307 43.7534 cv
123.362 43.8799 123.305 44.0273 123.178 44.082 cv
121.729 44.7124 li
121.697 44.7266 121.663 44.7334 121.629 44.7334 cv
cp
f
64.9502 94.5107 mo
64.9502 94.5107 63.9214 104.75 64.7114 108.581 cv
65.501 112.411 73.5908 116.378 73.5908 116.378 cv
73.5908 116.378 68.5181 150.255 69.0566 150.495 cv
69.5947 150.734 91.8008 151.532 92.2397 151.292 cv
92.6787 151.053 101.693 111.476 99.7749 105.651 cv
97.8569 99.8262 91.5376 98.9688 91.5376 98.9688 cv
64.9502 94.5107 li
cp
.25098 .313726 .498039 rgb
f
109.708 59.7676 mo
109.708 59.7676 97.5996 62.8398 93.522 80.7197 cv
90.665 93.248 105.244 92.2871 105.244 92.2871 cv
105.244 92.2871 104.383 86.835 108.831 85.4004 cv
113.279 83.9653 115.288 85.687 115.288 85.687 cv
105.531 74.6392 li
109.708 59.7676 li
cp
.572549 .705882 .917647 rgb
f
133.794 79.3765 mo
133.794 79.3765 133.078 82.1011 133.078 82.6758 cv
133.078 83.25 132.53 89.2026 132.098 90.3516 cv
131.672 91.4946 127.967 93.4028 117.326 93.2881 cv
108.842 93.1973 105.101 93.29 103.81 91.8569 cv
102.519 90.4233 104.242 64.3066 106.393 61.7241 cv
108.542 59.1416 114.282 58.9995 114.282 58.9995 cv
114.282 58.9995 113.85 57.5659 114.999 56.9912 cv
116.148 56.4165 120.165 58.2827 122.321 58.4248 cv
124.471 58.5669 125.33 57.8501 126.195 57.9985 cv
127.054 58.1406 127.337 60.0063 127.337 60.0063 cv
127.337 60.0063 130.282 61.8726 132.722 67.8965 cv
135.157 73.9204 133.794 79.3765 133.794 79.3765 cv
cp
f
132.505 78.6909 mo
132.426 78.6909 132.348 78.6528 132.299 78.5825 cv
132.221 78.4688 132.25 78.313 132.364 78.2349 cv
132.376 78.2256 133.84 77.1216 133.744 72.7734 cv
133.646 68.3257 130.251 63.6328 130.217 63.5859 cv
130.135 63.4746 130.16 63.3184 130.271 63.2368 cv
130.381 63.1548 130.538 63.1792 130.62 63.291 cv
130.764 63.4873 134.142 68.1553 134.244 72.7627 cv
134.347 77.4258 132.716 78.5991 132.647 78.647 cv
132.604 78.6768 132.554 78.6909 132.505 78.6909 cv
cp
.988235 .737255 .286275 rgb
f
122.738 46.8892 mo
122.627 46.8892 122.526 46.8159 122.497 46.7041 cv
122.147 45.4067 li
122.13 45.3462 122.138 45.2813 122.167 45.2256 cv
122.517 44.561 li
122.581 44.4385 122.732 44.3926 122.854 44.4561 cv
122.977 44.5205 123.023 44.6714 122.959 44.7935 cv
122.655 45.3716 li
122.979 46.5742 li
123.015 46.7075 122.936 46.8447 122.803 46.8804 cv
122.781 46.8862 122.759 46.8892 122.738 46.8892 cv
cp
0 0 0 rgb
f
126.315 46.6494 mo
126.205 46.6494 126.104 46.5762 126.074 46.4644 cv
125.724 45.167 li
125.709 45.1128 125.713 45.0547 125.735 45.0029 cv
126.093 44.1763 li
126.148 44.0493 126.294 43.9897 126.421 44.0459 cv
126.548 44.1006 126.606 44.248 126.552 44.3745 cv
126.229 45.1211 li
126.556 46.3345 li
126.592 46.4678 126.513 46.605 126.38 46.6406 cv
126.358 46.6465 126.336 46.6494 126.315 46.6494 cv
cp
f
117.229 47.3257 mo
118.77 49.1597 li
118.209 46.7031 li
118.209 46.7031 122.303 45.2021 123.563 42.8286 cv
124.824 40.4551 124.498 40.1533 124.498 40.1533 cv
125.608 41.3721 li
125.608 41.3721 126.814 36.9771 120.052 36.4707 cv
113.29 35.9644 113.141 41.6538 113.141 41.6538 cv
113.141 41.6538 111.056 42.4077 111.354 45.3374 cv
111.652 48.2671 113.358 49.1597 113.358 49.1597 cv
113.358 49.1597 114.139 46.1162 117.229 47.3257 cv
cp
f
118.343 77.7686 mo
118.316 77.7686 118.289 77.7642 118.262 77.7549 cv
118.166 77.7217 108.665 74.5015 101.843 75.9287 cv
101.708 75.959 101.575 75.8706 101.547 75.7354 cv
101.519 75.6001 101.605 75.4678 101.74 75.4395 cv
108.698 73.9844 118.328 77.2485 118.424 77.2822 cv
118.555 77.3271 118.625 77.4692 118.58 77.5996 cv
118.544 77.7036 118.447 77.7686 118.343 77.7686 cv
cp
.988235 .737255 .286275 rgb
f
104.923 72.394 mo
104.732 72.394 104.544 72.4302 104.362 72.5103 cv
104.204 72.5796 104.107 72.6592 104.11 72.7178 cv
104.133 73.2124 106.231 74.2295 108.393 75.0068 cv
107.677 74.0645 106.224 72.394 104.923 72.394 cv
cp
109.052 75.7495 mo
109.026 75.7495 109 75.7456 108.974 75.7368 cv
107.729 75.3237 103.664 73.8877 103.61 72.7412 cv
103.601 72.5415 103.689 72.2598 104.161 72.0522 cv
106.443 71.0527 109.148 75.188 109.262 75.3638 cv
109.32 75.4531 109.315 75.5688 109.25 75.6523 cv
109.202 75.7148 109.128 75.7495 109.052 75.7495 cv
cp
f
118.301 60.1392 mo
116.592 60.1392 114.294 59.2715 114.193 59.2329 cv
114.064 59.1841 114 59.0396 114.049 58.9106 cv
114.098 58.7817 114.243 58.7163 114.371 58.7661 cv
114.396 58.7754 116.877 59.7026 118.496 59.6348 cv
118.631 59.6152 118.751 59.7349 118.757 59.8726 cv
118.764 60.0103 118.658 60.1274 118.52 60.1338 cv
118.448 60.1372 118.375 60.1392 118.301 60.1392 cv
cp
f
74.5205 108.915 mo
74.4663 108.915 74.4209 108.935 74.3716 108.98 cv
73.7021 109.593 73.7432 113.069 73.9585 115.782 cv
74.5752 113.557 75.3647 110.06 74.7974 109.101 cv
74.7158 108.963 74.6299 108.932 74.5723 108.92 cv
74.5542 108.917 74.5371 108.915 74.5205 108.915 cv
cp
73.831 117.351 mo
73.689 117.338 73.5957 117.246 73.5825 117.128 cv
73.4995 116.375 72.8081 109.734 74.0337 108.611 cv
74.2158 108.446 74.4394 108.384 74.6699 108.43 cv
74.9014 108.476 75.0937 108.62 75.228 108.846 cv
76.1582 110.419 74.2861 116.489 74.0693 117.176 cv
74.0366 117.281 73.9394 117.351 73.831 117.351 cv
cp
.572549 .705882 .917647 rgb
f
102.982 168.935 mo
102.982 168.935 103.366 151.653 106.051 152.013 cv
108.736 152.373 111.422 154.893 111.422 154.893 cv
111.422 154.893 117.56 151.653 120.246 153.453 cv
122.931 155.253 124.474 159.213 124.474 159.213 cv
136.912 165.75 li
139.213 166.96 140.75 169.292 140.847 171.891 cv
140.867 172.441 140.834 172.925 140.715 173.255 cv
140.309 174.378 117.566 173.749 107.59 173.417 cv
105.017 173.333 102.982 171.351 102.982 168.935 cv
102.982 168.935 li
cp
.968627 .701961 .411765 rgb
f
87.9639 60.7549 mo
83.3218 57.0518 li
77.4707 56.6084 li
72.0757 58.6123 li
74.8999 93.542 li
74.8999 93.542 83.3994 95.8599 89.0093 92.9014 cv
94.6186 89.9429 87.9639 60.7549 87.9639 60.7549 cv
cp
.407843 .713726 .847059 rgb
f
66.2895 59.9775 mo
68.9258 57.5327 73.2197 56.8589 75.7427 56.6748 cv
75.7427 56.6748 75.1235 73.2144 75.9956 83.3945 cv
76.4883 89.1479 76.7876 93.1519 76.9541 95.5488 cv
70.8965 95.6987 64.125 95.5098 64.125 95.5098 cv
64.125 95.5098 62.3887 63.5928 66.2895 59.9775 cv
cp
.639216 .482353 .564706 rgb
f
93.5127 82.9595 mo
93.4785 89.1016 93.3364 94.084 93.3364 94.084 cv
93.3364 94.084 93.5615 93.7842 89.4072 94.5107 cv
89.3935 89.9829 88.729 82.0273 88.0039 75.312 cv
87.0757 66.7236 83.3218 57.0518 83.3218 57.0518 cv
75.7427 56.6782 li
76.5083 56.6221 77.1182 56.6084 77.4707 56.6084 cv
77.6807 56.6084 77.8027 56.6152 77.8027 56.6152 cv
77.8027 56.6152 86.3559 56.9648 90.4018 59.124 cv
90.4018 59.124 90.5034 59.1797 90.6865 59.2778 cv
91.3779 59.6899 91.9199 60.165 92.2183 60.7031 cv
93.3975 62.8203 93.5737 74.0918 93.5127 82.9595 cv
cp
f
71.0796 57.4722 mo
71.0796 57.4722 61.519 58.9995 55.8559 66.5225 cv
51.0015 72.9722 49.4473 80.3096 49.4473 80.3096 cv
49.4473 80.3096 54.8237 79.4058 58.0796 79.4395 cv
61.3354 79.4736 66.0181 79.8589 66.0181 79.8589 cv
71.0796 57.4722 li
cp
f
86.1318 42.5879 mo
86.1318 42.5879 88.0513 36.3096 85.23 35.0005 cv
82.4082 33.6914 80.584 37.3579 80.584 37.3579 cv
80.584 37.3579 74.2007 37.7778 71.7031 41.1348 cv
69.2056 44.4912 75.0205 50.603 75.0205 50.603 cv
86.1318 42.5879 li
cp
0 0 0 rgb
f
76.1211 51.9233 mo
75.6245 57.7842 li
75.6245 57.7842 76.5386 59.5581 79.9438 60.1274 cv
82.48 60.5518 83.4263 60.0503 83.4263 60.0503 cv
83.3218 57.0518 li
83.2163 54.1274 li
77.1406 52.2412 li
76.1211 51.9233 li
cp
.956863 .517647 .384314 rgb
f
77.1406 52.2412 mo
77.1416 52.4023 77.1865 52.5962 77.2627 52.8208 cv
78.3262 55.8594 81.8579 56.7949 83.3218 57.0518 cv
83.2163 54.1274 li
77.1406 52.2412 li
cp
0 0 0 rgb
f
85.6553 40.8794 mo
85.6553 40.8794 88.1084 48.4883 86.5498 52.4683 cv
84.9912 56.4482 81.3247 55.4292 79.1719 54.4131 cv
77.019 53.3975 76.1201 51.9243 76.1201 51.9243 cv
76.1201 51.9243 73.9639 52.4224 72.7642 50.3433 cv
71.564 48.2642 72.646 46.1235 73.8882 45.7329 cv
75.1299 45.3418 76.4595 46.3438 76.4595 46.3438 cv
75.5625 44.1138 li
75.5625 44.1138 81.312 33.8174 85.6553 40.8794 cv
cp
.956863 .517647 .384314 rgb
f
75.9941 49.5059 mo
75.9365 49.5059 75.8789 49.4863 75.8315 49.4458 cv
73.352 47.3232 li
73.2471 47.2334 73.2349 47.0757 73.3247 46.9707 cv
73.415 46.8667 73.5723 46.854 73.6772 46.9434 cv
76.1567 49.0659 li
76.2617 49.1558 76.2739 49.3135 76.1841 49.4185 cv
76.1348 49.4761 76.0644 49.5059 75.9941 49.5059 cv
cp
0 0 0 rgb
f
73.5898 49.2695 mo
73.4702 49.2695 73.3643 49.1831 73.3437 49.061 cv
73.3208 48.9253 73.4126 48.7959 73.5488 48.7729 cv
75.3257 48.4727 li
75.4604 48.4492 75.5913 48.541 75.6138 48.6777 cv
75.6367 48.8135 75.5449 48.9429 75.4087 48.9658 cv
73.6318 49.2661 li
73.6177 49.2686 73.604 49.2695 73.5898 49.2695 cv
cp
f
84.7519 49.2695 mo
84.7329 49.2695 84.7129 49.2671 84.6934 49.2627 cv
84.5591 49.23 84.4766 49.0952 84.5088 48.9609 cv
84.9224 47.2456 83.894 46.2178 83.8501 46.1748 cv
83.7515 46.0786 83.749 45.9204 83.8447 45.8213 cv
83.9409 45.7231 84.0981 45.7192 84.1973 45.8149 cv
84.25 45.8657 85.4775 47.0757 84.9951 49.0781 cv
84.9673 49.1929 84.8652 49.2695 84.7519 49.2695 cv
cp
f
85.9463 46.5913 mo
85.8281 46.5913 85.7231 46.5068 85.7007 46.3867 cv
85.4477 45.0112 li
85.4228 44.875 85.5127 44.7451 85.6484 44.7197 cv
85.7856 44.6978 85.9145 44.7847 85.9399 44.9204 cv
86.1929 46.2959 li
86.2178 46.4321 86.1279 46.562 85.9922 46.5874 cv
85.9766 46.5898 85.9614 46.5913 85.9463 46.5913 cv
cp
f
82.2309 46.3491 mo
82.1128 46.3491 82.0078 46.2646 81.9853 46.1445 cv
81.7324 44.7695 li
81.7075 44.6338 81.7974 44.5034 81.9331 44.478 cv
82.0703 44.457 82.1992 44.543 82.2246 44.6787 cv
82.4775 46.0537 li
82.5024 46.1895 82.4126 46.3198 82.2768 46.3452 cv
82.2612 46.3477 82.2461 46.3491 82.2309 46.3491 cv
cp
f
86.1318 42.5879 mo
86.1318 42.5879 85.5952 41.3555 84.1338 41.2217 cv
82.6728 41.0879 81.7319 42.0449 81.7319 42.0449 cv
81.7319 42.0449 82.1645 44.561 80.0659 45.7007 cv
77.9668 46.8398 76.4595 46.3438 76.4595 46.3438 cv
75.061 45.7075 li
74.1821 43.5107 li
78.7344 39.3687 li
84.3755 36.9761 li
86.5034 39.2651 li
86.1318 42.5879 li
cp
f
81.4521 60.7407 mo
77.9009 60.7407 75.583 58.2783 75.5561 58.249 cv
75.4624 58.1475 75.4687 57.9897 75.5703 57.896 cv
75.6714 57.8027 75.8301 57.8096 75.9233 57.9102 cv
75.9526 57.9409 78.9131 61.0737 83.2148 60.0254 cv
83.3472 59.9927 83.4844 60.0752 83.5166 60.209 cv
83.5493 60.3428 83.4673 60.478 83.333 60.5107 cv
82.6753 60.6719 82.0464 60.7407 81.4521 60.7407 cv
cp
.360784 .411765 .647059 rgb
f
50.7754 80.1035 mo
50.7754 80.1035 48.02 88.7593 54.8247 92.6055 cv
61.6299 96.4517 78.9248 88.7954 78.9248 88.7954 cv
77.1406 80.6665 li
63.7432 79.4395 li
63.7432 79.4395 52.939 79.4365 50.7754 80.1035 cv
cp
.956863 .517647 .384314 rgb
f
85.23 43.7539 mo
85.0986 43.7539 84.9888 43.6523 84.9805 43.5195 cv
84.9717 43.3818 85.0762 43.2632 85.2143 43.2544 cv
86.3188 43.1846 li
86.4707 43.1777 86.5757 43.2808 86.584 43.4185 cv
86.5928 43.5562 86.4883 43.6748 86.3501 43.6836 cv
85.2456 43.7534 li
85.2402 43.7539 85.2349 43.7539 85.23 43.7539 cv
cp
0 0 0 rgb
f
81.2637 44.019 mo
81.144 44.019 81.0386 43.9331 81.0176 43.811 cv
80.9946 43.6748 81.0859 43.5459 81.2222 43.5225 cv
82.7788 43.2573 li
82.916 43.2363 83.0439 43.3257 83.0674 43.4619 cv
83.0903 43.5981 82.999 43.7271 82.8628 43.7505 cv
81.3061 44.0156 li
81.292 44.0181 81.2778 44.019 81.2637 44.019 cv
cp
f
96.7432 131.572 mo
96.7226 131.572 96.7017 131.569 96.6802 131.564 cv
96.5469 131.529 96.4663 131.393 96.501 131.259 cv
96.5469 131.082 101.071 113.519 99.7998 108.34 cv
98.5395 103.21 88.4111 97.7788 88.3091 97.7246 cv
88.2187 97.6768 88.1665 97.5786 88.1777 97.4766 cv
88.189 97.375 88.2607 97.2905 88.3594 97.2632 cv
92.1182 96.2217 li
92.2529 96.1855 92.3896 96.2632 92.4258 96.3955 cv
92.4629 96.5288 92.3848 96.6665 92.2519 96.7031 cv
89.085 97.5811 li
91.2588 98.8047 99.1304 103.52 100.285 108.221 cv
101.586 113.521 97.1738 130.658 96.9853 131.385 cv
96.956 131.497 96.8545 131.572 96.7432 131.572 cv
cp
.572549 .705882 .917647 rgb
f
121.917 161.571 mo
121.806 161.571 121.704 161.497 121.675 161.384 cv
121.641 161.25 121.721 161.114 121.854 161.079 cv
126.262 159.944 li
126.396 159.908 126.532 159.99 126.567 160.124 cv
126.601 160.257 126.521 160.394 126.387 160.428 cv
121.979 161.563 li
121.958 161.569 121.937 161.571 121.917 161.571 cv
cp
1 1 1 rgb
f
66.103 79.5146 mo
65.9307 79.4927 65.8354 79.3662 65.855 79.2295 cv
66.2612 76.3799 li
66.2808 76.2427 66.4111 76.1509 66.5439 76.1675 cv
66.6807 76.187 66.7759 76.3135 66.7563 76.4502 cv
66.3501 79.2998 li
66.332 79.4248 66.2251 79.5146 66.103 79.5146 cv
cp
.360784 .411765 .647059 rgb
f
51.0156 94.5107 mo
64.1328 98.4927 li
70.3472 116.73 li
48.0518 109.41 li
51.0156 94.5107 li
cp
.407843 .462745 .666667 rgb
f
72.2744 107.092 mo
72.2744 111.841 68.6294 115.691 64.1328 115.691 cv
59.6362 115.691 55.9907 111.841 55.9907 107.092 cv
55.9907 102.343 59.6362 98.4927 64.1328 98.4927 cv
68.6294 98.4927 72.2744 102.343 72.2744 107.092 cv
cp
.466667 .537255 .737255 rgb
f
72.2744 107.335 mo
72.4438 156.131 li
72.4531 158.857 70.7236 161.102 68.5317 161.208 cv
66.1987 161.321 li
59.7334 152.424 li
59.7334 108.525 li
72.2744 107.335 li
cp
f
93.2402 164.27 mo
93.2402 164.27 89.7202 155.004 87.3384 153.36 cv
84.957 151.717 78.7783 156.593 78.7783 156.593 cv
78.7783 156.593 73.8408 151.129 72.5239 153.899 cv
71.2075 156.668 70.354 166.682 71.2441 168.918 cv
72.1338 171.156 78.9976 175.014 88.1352 175.215 cv
92.4414 175.311 98.6831 174.135 98.7241 172.656 cv
98.7876 170.33 94.6699 165.839 93.2402 164.27 cv
cp
.968627 .701961 .411765 rgb
f
90.5884 163.201 mo
84.0239 163.201 li
83.8857 163.201 83.7739 163.089 83.7739 162.951 cv
83.7739 162.813 83.8857 162.701 84.0239 162.701 cv
90.5884 162.701 li
90.7266 162.701 90.8384 162.813 90.8384 162.951 cv
90.8384 163.089 90.7266 163.201 90.5884 163.201 cv
cp
1 1 1 rgb
f
82.7085 51.0723 mo
82.8662 51.2471 83.1025 51.4165 83.4263 51.4165 cv
83.7378 51.4165 83.9282 51.2896 84.042 51.1572 cv
82.7085 51.0723 li
cp
83.4263 51.9165 mo
82.4341 51.9165 82.0176 50.9282 82 50.8862 cv
81.9673 50.8066 81.978 50.7158 82.0283 50.6455 cv
82.0786 50.5757 82.1626 50.5308 82.2476 50.542 cv
84.456 50.6826 li
84.5298 50.6875 84.5976 50.7246 84.6411 50.7837 cv
84.6851 50.8433 84.7002 50.9194 84.6831 50.9912 cv
84.605 51.311 84.2427 51.9165 83.4263 51.9165 cv
cp
0 0 0 rgb
f
124.353 51.7554 mo
123.644 51.7554 123.099 51.2661 122.872 50.9326 cv
122.794 50.8188 122.823 50.6641 122.937 50.5859 cv
123.051 50.5078 123.206 50.5366 123.284 50.6499 cv
123.31 50.687 123.922 51.5513 124.833 51.147 cv
124.959 51.0879 125.107 51.1465 125.164 51.2729 cv
125.22 51.3989 125.164 51.5469 125.038 51.603 cv
124.797 51.7109 124.567 51.7554 124.353 51.7554 cv
cp
f
118.705 80.397 mo
118.705 80.397 127.736 78.4653 130.018 79.3496 cv
132.3 80.2339 130.563 87.752 129.896 89.123 cv
129.229 90.4937 119.871 88.5464 119.871 88.5464 cv
117.122 84.7158 li
118.705 80.397 li
cp
.956863 .517647 .384314 rgb
f
130.018 79.3496 mo
130.018 79.3496 135.553 83.022 135.79 85.3428 cv
136.026 87.6636 129.215 82.8794 129.215 82.8794 cv
130.018 79.3496 li
cp
f
126.534 88.8223 mo
126.534 88.8223 121.899 89.9282 123.391 91.1792 cv
124.883 92.4307 129.466 90.3096 129.896 89.123 cv
130.326 87.9365 126.931 86.4946 126.931 86.4946 cv
126.534 88.8223 li
cp
f
124.635 89.6147 mo
124.544 89.6147 124.461 89.5659 124.416 89.4868 cv
124.372 89.4072 124.375 89.3096 124.423 89.2319 cv
125.136 88.0928 li
125.209 87.9756 125.364 87.9419 125.48 88.0137 cv
125.597 88.0869 125.633 88.2412 125.56 88.3584 cv
125.089 89.1099 li
126.082 89.0991 li
126.198 89.0991 126.333 89.208 126.335 89.3462 cv
126.336 89.4844 126.226 89.5977 126.088 89.5991 cv
124.638 89.6147 li
124.637 89.6147 124.636 89.6147 124.635 89.6147 cv
cp
0 0 0 rgb
f
131.173 84.0366 mo
131.106 84.0366 131.039 84.0093 130.989 83.9556 cv
130.404 83.3188 129.342 82.2627 128.987 82.1411 cv
128.857 82.0967 128.787 81.9546 128.832 81.8237 cv
128.876 81.6938 129.02 81.623 129.149 81.6685 cv
129.728 81.8662 131.09 83.3267 131.357 83.6177 cv
131.451 83.7192 131.444 83.8774 131.342 83.9707 cv
131.294 84.0146 131.234 84.0366 131.173 84.0366 cv
cp
f
130.673 86.7041 mo
130.614 86.7041 130.555 86.6831 130.507 86.6406 cv
127.801 84.2305 li
127.697 84.1387 127.688 83.981 127.78 83.8774 cv
127.871 83.7749 128.03 83.7651 128.133 83.8574 cv
130.84 86.2676 li
130.943 86.3594 130.952 86.5171 130.86 86.6206 cv
130.811 86.6758 130.742 86.7041 130.673 86.7041 cv
cp
f
120.499 78.4443 mo
119.55 90.3516 li
119.55 90.3516 115.857 91.3452 112.337 91.5615 cv
108.817 91.7778 108.817 91.7778 108.817 91.7778 cv
112.337 77.519 li
120.499 78.4443 li
cp
.572549 .705882 .917647 rgb
f
131.604 59.9189 mo
131.604 59.9189 132.636 55.7285 130.328 56.2778 cv
128.02 56.8271 124.435 63.7695 126.317 65.3511 cv
128.199 66.9326 131.604 59.9189 131.604 59.9189 cv
cp
.956863 .517647 .384314 rgb
f
134.761 61.5869 mo
134.761 61.5869 135.793 57.3965 133.485 57.9458 cv
131.177 58.4956 127.591 65.438 129.474 67.0195 cv
131.356 68.6011 134.761 61.5869 134.761 61.5869 cv
cp
f
83.3809 75.4995 mo
83.3809 75.4995 84.5742 75.4585 85.6367 75.8647 cv
86.6992 76.271 87.6787 77.021 87.4805 77.5835 cv
87.2827 78.146 85.6265 78.3853 85.5952 78.3853 cv
85.564 78.3853 82.623 78.4409 82.623 78.4409 cv
82.335 76.7935 li
83.3809 75.4995 li
cp
f
136.657 64.9639 mo
137.271 64.2002 137.714 63.3037 137.851 62.334 cv
137.972 61.4756 137.831 60.6338 136.783 60.6992 cv
134.688 60.8306 130.515 66.3433 131.917 68.0063 cv
132.958 69.2407 135.444 66.4731 136.657 64.9639 cv
cp
f
132.11 66.4355 mo
132.064 66.4355 132.019 66.4233 131.977 66.3975 cv
131.86 66.3242 131.825 66.1699 131.898 66.0527 cv
134.816 61.3916 li
134.891 61.2754 135.045 61.2407 135.161 61.3125 cv
135.278 61.3857 135.313 61.54 135.24 61.6572 cv
132.322 66.3184 li
132.274 66.394 132.193 66.4355 132.11 66.4355 cv
cp
0 0 0 rgb
f
129.162 63.6802 mo
129.123 63.6802 129.083 63.6709 129.046 63.6519 cv
128.923 63.5879 128.876 63.437 128.94 63.3145 cv
131.317 58.7593 li
131.381 58.6372 131.533 58.5918 131.654 58.6533 cv
131.777 58.7173 131.824 58.8682 131.76 58.9907 cv
129.383 63.5459 li
129.339 63.6313 129.251 63.6802 129.162 63.6802 cv
cp
f
92.0303 83.6172 mo
92.8848 83.6172 li
95.7734 83.6172 98.1152 81.2754 98.1152 78.3872 cv
98.1152 70.9731 li
86.8003 70.9731 li
86.8003 78.3872 li
86.8003 81.2754 89.1421 83.6172 92.0303 83.6172 cv
cp
.968627 .701961 .411765 rgb
f
86.8003 70.9731 mo
86.8003 71.332 89.3335 71.6235 92.4575 71.6235 cv
95.582 71.6235 98.1152 71.332 98.1152 70.9731 cv
98.1152 70.6143 95.582 70.3232 92.4575 70.3232 cv
89.3335 70.3232 86.8003 70.6143 86.8003 70.9731 cv
cp
1 1 1 rgb
f
84.2119 76.7935 mo
84.2119 78.5024 85.5698 79.8931 87.2393 79.8931 cv
88.9082 79.8931 90.2671 78.5024 90.2671 76.7935 cv
90.2671 75.0845 88.9082 73.6934 87.2393 73.6934 cv
85.5698 73.6934 84.2119 75.0845 84.2119 76.7935 cv
cp
83.2744 76.7935 mo
83.2744 74.7012 85.0527 72.999 87.2393 72.999 cv
89.4258 72.999 91.2046 74.7012 91.2046 76.7935 cv
91.2046 78.8857 89.4258 80.5874 87.2393 80.5874 cv
85.0527 80.5874 83.2744 78.8857 83.2744 76.7935 cv
cp
.968627 .701961 .411765 rgb
f
83.3809 75.4995 mo
83.3809 77.8076 li
83.3809 77.8076 89.4287 76.9697 90.001 78.0591 cv
90.5752 79.1519 88.1113 80.7266 88.1113 80.7266 cv
88.1113 80.7266 89.8862 80.9131 90.0527 82.1313 cv
90.1582 82.8994 90.0039 86.7085 88.3545 87.9443 cv
86.7056 89.1802 78.0049 88.6494 78.0049 88.6494 cv
75.6699 80.9907 li
75.6699 80.9907 80.8237 75.4995 83.3809 75.4995 cv
cp
.956863 .517647 .384314 rgb
f
83.3813 78.0571 mo
83.353 78.0557 80.7632 77.7671 80.7632 77.7671 cv
80.626 77.752 80.5273 77.6279 80.5425 77.4907 cv
80.5576 77.354 80.6758 77.2539 80.8188 77.27 cv
83.4087 77.5586 li
83.5459 77.5737 83.6445 77.6978 83.6294 77.835 cv
83.6152 77.9624 83.5068 78.0571 83.3813 78.0571 cv
cp
0 0 0 rgb
f
433.948 324.826 mo
270.386 324.826 li
264.297 324.826 259.361 319.891 259.361 313.802 cv
259.361 249.41 li
259.361 243.321 264.297 238.386 270.386 238.386 cv
433.948 238.386 li
440.037 238.386 444.974 243.321 444.974 249.41 cv
444.974 313.802 li
444.974 319.891 440.037 324.826 433.948 324.826 cv
cp
.407843 .462745 .666667 rgb
f
447.456 318.704 mo
447.456 322.781 li
447.456 323.853 447.287 324.895 446.96 325.891 cv
445.304 330.937 439.726 334.651 433.088 334.651 cv
271.252 334.651 li
264.615 334.651 259.025 330.937 257.369 325.891 cv
257.042 324.895 256.873 323.853 256.873 322.781 cv
256.873 318.704 li
256.873 312.149 263.308 306.834 271.252 306.834 cv
433.088 306.834 li
441.021 306.834 447.456 312.149 447.456 318.704 cv
cp
.25098 .313726 .498039 rgb
f
279.409 349.057 mo
278.801 349.057 li
277.307 349.057 276.042 347.951 275.843 346.47 cv
273.72 330.721 li
283.07 330.721 li
282.392 346.202 li
282.322 347.798 281.007 349.057 279.409 349.057 cv
cp
f
424.98 349.057 mo
425.589 349.057 li
427.084 349.057 428.348 347.951 428.547 346.47 cv
430.669 330.721 li
421.319 330.721 li
421.998 346.202 li
422.068 347.798 423.383 349.057 424.98 349.057 cv
cp
f
339.962 242.903 mo
312.278 242.903 li
312.141 242.903 312.028 242.791 312.028 242.653 cv
312.028 242.516 312.141 242.403 312.278 242.403 cv
339.962 242.403 li
340.1 242.403 340.212 242.516 340.212 242.653 cv
340.212 242.791 340.1 242.903 339.962 242.903 cv
cp
.572549 .705882 .917647 rgb
f
446.785 325.892 mo
445.132 330.937 439.564 334.651 432.938 334.651 cv
271.401 334.651 li
264.776 334.651 259.197 330.937 257.543 325.892 cv
446.785 325.892 li
cp
.223529 .278431 .419608 rgb
f
441.667 310.667 mo
441.667 313.29 428.52 315.416 412.301 315.416 cv
396.082 315.416 382.935 313.29 382.935 310.667 cv
382.935 308.044 396.082 305.918 412.301 305.918 cv
428.52 305.918 441.667 308.044 441.667 310.667 cv
cp
.211765 .270588 .407843 rgb
f
321.679 315.068 mo
321.679 317.69 308.532 319.817 292.313 319.817 cv
276.094 319.817 262.947 317.69 262.947 315.068 cv
262.947 312.445 276.094 310.319 292.313 310.319 cv
308.532 310.319 321.679 312.445 321.679 315.068 cv
cp
f
370.861 266.714 mo
370.861 266.714 374.184 266.958 376.458 267.024 cv
378.731 267.091 377.647 277.919 377.647 277.919 cv
377.647 277.919 370.635 276.018 365.22 272.08 cv
359.805 268.143 370.861 266.714 370.861 266.714 cv
cp
.956863 .517647 .384314 rgb
f
369.27 285.292 mo
369.151 285.292 369.087 285.338 369.045 285.379 cv
368.429 285.98 369.029 289.04 369.65 291.238 cv
370.051 289.958 370.771 287.241 370.148 285.94 cv
370 285.631 369.788 285.433 369.499 285.336 cv
369.405 285.305 369.33 285.292 369.27 285.292 cv
cp
369.618 292.735 mo
369.414 292.082 li
369.227 291.477 367.607 286.133 368.72 285.046 cv
368.881 284.889 369.171 284.734 369.647 284.895 cv
370.056 285.031 370.365 285.315 370.568 285.739 cv
371.48 287.643 369.922 291.912 369.855 292.094 cv
369.618 292.735 li
cp
.407843 .462745 .666667 rgb
f
359.248 351.374 mo
359.248 351.374 364.181 357.248 365.331 357.809 cv
366.481 358.369 378.485 362.473 380.781 364.74 cv
383.077 367.009 383.222 371.446 382.561 371.86 cv
381.9 372.273 342.353 371.679 342.353 371.679 cv
342.024 352.606 li
359.248 351.374 li
cp
.968627 .654902 .341176 rgb
f
363.232 355.407 mo
363.232 355.407 357.689 361.704 358.948 362.224 cv
360.207 362.743 370.866 361.16 370.596 360.02 cv
370.326 358.878 364.51 355.319 363.232 355.407 cv
cp
1 1 1 rgb
f
364.277 350.545 mo
364.277 350.545 349.892 310.77 338.636 303.137 cv
329.481 296.93 305.958 296.888 305.958 296.888 cv
324.867 332.081 li
338.636 355.975 li
364.277 350.545 li
cp
.556863 .396078 .490196 rgb
f
368.089 277.919 mo
368.089 277.919 382.512 284.911 392.302 283.489 cv
402.408 282.022 406.697 277.764 406.697 277.764 cv
405.107 256.936 li
405.107 256.936 390.024 263.774 384.374 264.934 cv
378.723 266.093 370.861 264.259 370.861 264.259 cv
368.089 277.919 li
cp
.968627 .701961 .411765 rgb
f
379.253 349.283 mo
376.211 363.874 li
360.804 360.661 li
363.306 346.919 li
379.253 349.283 li
cp
.956863 .517647 .384314 rgb
f
374.518 374.729 mo
375.604 374.741 376.511 373.898 376.576 372.81 cv
376.838 368.506 377.985 358.891 377.149 358.842 cv
376.082 358.778 365.208 360.887 365.208 360.887 cv
365.208 360.887 365.264 354.905 360.78 355.714 cv
357.34 356.334 353.182 359.894 351.433 361.517 cv
350.878 362.031 350.192 362.372 349.447 362.501 cv
346.244 363.055 337.407 364.974 337.018 369.344 cv
336.542 374.688 338.865 374.211 339.932 374.274 cv
340.847 374.328 367.101 374.641 374.518 374.729 cv
cp
.360784 .411765 .647059 rgb
f
355.584 362.85 mo
355.58 362.85 349.443 362.751 349.443 362.751 cv
349.306 362.749 349.195 362.635 349.197 362.497 cv
349.199 362.36 349.311 362.251 349.447 362.251 cv
349.451 362.251 355.588 362.35 355.588 362.35 cv
355.726 362.352 355.836 362.466 355.834 362.604 cv
355.832 362.74 355.721 362.85 355.584 362.85 cv
cp
.572549 .705882 .917647 rgb
f
408.453 330.628 mo
415.655 346.654 li
400.482 353.474 li
393.392 338.613 li
408.453 330.628 li
cp
.956863 .517647 .384314 rgb
f
419.457 356.25 mo
420.389 355.688 420.715 354.495 420.198 353.534 cv
418.154 349.737 414.069 340.959 413.332 341.356 cv
412.392 341.864 404.256 349.382 404.256 349.382 cv
404.256 349.382 401.154 344.267 397.768 347.314 cv
395.169 349.652 393.508 354.868 392.875 357.168 cv
392.675 357.898 392.271 358.549 391.705 359.051 cv
389.273 361.208 382.771 367.491 384.74 371.411 cv
387.148 376.205 388.872 374.577 389.813 374.069 cv
390.619 373.634 413.105 360.079 419.457 356.25 cv
cp
.360784 .411765 .647059 rgb
f
391.705 359.301 mo
391.62 359.301 391.537 359.258 391.49 359.179 cv
391.42 359.061 391.458 358.907 391.577 358.836 cv
396.848 355.689 li
396.965 355.619 397.119 355.655 397.19 355.776 cv
397.261 355.895 397.223 356.048 397.104 356.119 cv
391.833 359.266 li
391.793 359.289 391.749 359.301 391.705 359.301 cv
cp
.572549 .705882 .917647 rgb
f
397.963 305.273 mo
415.126 337.952 li
389.736 350.169 li
379.378 330.399 li
386.578 306.231 li
397.963 305.273 li
cp
f
429.517 292.781 mo
429.517 292.781 429.92 310.634 424.649 312.433 cv
419.174 314.303 394.303 316.029 392.74 317.311 cv
391.179 318.592 380.696 354.212 380.696 354.212 cv
352.184 351.549 li
352.184 351.549 363 306.434 371.066 300.103 cv
378.887 293.966 404.223 292.781 404.223 292.781 cv
429.517 292.781 li
cp
f
386.059 336.73 mo
386.035 336.73 386.012 336.728 385.988 336.721 cv
385.855 336.682 385.78 336.543 385.818 336.41 cv
386.005 335.774 390.399 320.838 391.546 319.471 cv
392.692 318.104 401.366 316.037 402.352 315.807 cv
402.483 315.774 402.621 315.859 402.651 315.993 cv
402.684 316.127 402.6 316.262 402.465 316.293 cv
399.833 316.91 392.809 318.742 391.929 319.791 cv
391.033 320.861 387.561 332.252 386.299 336.551 cv
386.267 336.66 386.167 336.73 386.059 336.73 cv
cp
.968627 .701961 .411765 rgb
f
387.764 313.53 mo
387.648 313.53 387.494 313.578 387.319 313.8 cv
387.11 314.064 387.04 314.365 387.104 314.719 cv
387.383 316.262 390.01 318.187 391.239 319.011 cv
390.355 316.737 388.857 313.704 387.842 313.537 cv
387.818 313.533 387.792 313.53 387.764 313.53 cv
cp
391.737 319.881 mo
391.692 319.881 391.647 319.869 391.607 319.845 cv
391.421 319.731 387.016 317.041 386.611 314.808 cv
386.522 314.312 386.628 313.868 386.927 313.489 cv
387.279 313.043 387.659 313.001 387.924 313.043 cv
389.707 313.337 391.746 318.912 391.973 319.547 cv
392.009 319.646 391.978 319.758 391.896 319.824 cv
391.85 319.862 391.794 319.881 391.737 319.881 cv
cp
f
407.101 244.152 mo
407.101 244.152 405.556 240.745 405.846 239.253 cv
406.136 237.76 408.695 232.843 416.591 235.075 cv
422.478 236.739 423.094 244.739 421.882 247.436 cv
418.762 254.379 412.459 251.076 412.459 251.076 cv
412.459 251.076 402.394 248.014 407.101 244.152 cv
cp
0 0 0 rgb
f
430.051 293.762 mo
430.051 293.762 430.034 263.692 428.258 261.657 cv
422.78 255.382 409.638 253.275 403.237 258.052 cv
399.231 261.041 399.822 270.075 400.009 283.489 cv
400.114 291.038 400.41 293.762 400.41 293.762 cv
430.051 293.762 li
cp
.968627 .701961 .411765 rgb
f
408.063 252.13 mo
408.056 252.28 li
408.03 255.105 li
408.001 257.32 li
408.001 257.32 407.785 257.824 410.366 257.795 cv
413.827 257.744 415.018 256.322 415.018 256.322 cv
415.443 251.149 li
414.388 251.293 li
408.063 252.13 li
cp
.956863 .517647 .384314 rgb
f
408.056 252.28 mo
408.03 255.105 li
409.717 254.992 412.805 254.431 414.179 251.861 cv
414.285 251.652 414.357 251.463 414.387 251.304 cv
408.068 252.237 li
408.056 252.28 li
cp
0 0 0 rgb
f
407.688 238.731 mo
407.688 238.731 404.087 245.897 405.021 250.083 cv
405.955 254.268 409.746 253.82 412.036 253.145 cv
414.326 252.469 415.444 251.146 415.444 251.146 cv
415.444 251.146 417.505 251.971 419.015 250.094 cv
420.523 248.217 419.779 245.929 418.608 245.351 cv
417.438 244.772 415.965 245.562 415.965 245.562 cv
417.197 243.488 li
417.197 243.488 413.079 232.397 407.688 238.731 cv
cp
.956863 .517647 .384314 rgb
f
415.965 245.562 mo
415.965 245.562 412.839 243.769 411.788 241.406 cv
410.738 239.044 410.749 237.885 410.749 237.885 cv
410.749 237.885 410.209 239.376 409.023 239.678 cv
407.839 239.979 407.11 239.984 407.11 239.984 cv
406.264 242.101 li
406.742 238.019 li
406.742 238.019 409.988 236.477 410.411 236.496 cv
410.835 236.517 416.385 236.702 416.679 237.038 cv
416.973 237.375 418.462 241.606 418.462 241.606 cv
418.491 243.487 li
415.965 245.562 li
cp
0 0 0 rgb
f
405.524 286.115 mo
405.524 286.115 404.255 286.115 402.589 285.744 cv
400.923 285.373 394.672 286.417 392.523 286.759 cv
390.374 287.1 385.407 290.414 386.131 291.034 cv
386.854 291.654 391.704 290.101 391.704 290.101 cv
391.704 290.101 388.076 294.148 388.775 294.821 cv
389.475 295.495 390.915 294.502 390.915 294.502 cv
390.915 294.502 389.764 295.713 391.011 296.031 cv
392.258 296.349 396.563 292.649 396.563 292.649 cv
396.563 292.649 394.774 296.304 395.641 296.601 cv
396.508 296.898 399.421 293.478 399.421 293.478 cv
399.421 293.478 403.691 296.088 405.908 293.72 cv
408.125 291.352 408.577 289.584 408.577 289.584 cv
405.524 286.115 li
cp
.956863 .517647 .384314 rgb
f
424.124 258.396 mo
424.124 258.396 438.168 264.934 435.813 284.826 cv
434.183 298.606 403.653 295.814 403.653 295.814 cv
403.237 283.391 li
403.237 283.391 419.178 279.064 420.415 278.39 cv
422.806 277.086 424.124 258.396 424.124 258.396 cv
cp
.968627 .701961 .411765 rgb
f
404.913 283.722 mo
404.825 283.722 404.741 283.672 404.702 283.587 cv
404.647 283.471 404.698 283.332 404.815 283.278 cv
404.903 283.237 413.78 279.144 422.855 277.534 cv
422.98 277.518 423.103 277.597 423.126 277.723 cv
423.148 277.85 423.063 277.971 422.938 277.993 cv
413.923 279.591 405.1 283.659 405.011 283.7 cv
404.979 283.715 404.946 283.722 404.913 283.722 cv
cp
1 1 1 rgb
f
420.623 275.448 mo
419.779 275.448 418.598 277.075 417.799 278.522 cv
419.467 277.354 421 276.022 420.94 275.573 cv
420.938 275.56 420.934 275.518 420.811 275.477 cv
420.75 275.457 420.688 275.448 420.623 275.448 cv
cp
417.173 279.46 mo
417.118 279.46 417.063 279.44 417.02 279.402 cv
416.941 279.334 416.918 279.222 416.963 279.127 cv
417.191 278.649 419.251 274.462 420.955 275.035 cv
421.304 275.149 421.385 275.383 421.402 275.513 cv
421.54 276.558 418.298 278.77 417.301 279.422 cv
417.262 279.447 417.217 279.46 417.173 279.46 cv
cp
f
410.093 258.024 mo
408.529 258.024 407.474 257.631 407.39 257.599 cv
407.271 257.553 407.21 257.418 407.257 257.299 cv
407.303 257.178 407.438 257.119 407.557 257.165 cv
407.595 257.178 411.389 258.581 415.312 255.896 cv
415.419 255.824 415.562 255.85 415.636 255.956 cv
415.708 256.063 415.681 256.207 415.575 256.28 cv
413.554 257.664 411.591 258.024 410.093 258.024 cv
cp
f
400.009 284.869 mo
399.88 284.869 399.776 284.766 399.776 284.637 cv
399.776 277.823 li
399.59 277.471 398.654 275.547 398.656 272.457 cv
398.658 269.102 400.832 264.997 400.925 264.824 cv
400.985 264.709 401.128 264.668 401.239 264.729 cv
401.353 264.789 401.396 264.93 401.335 265.043 cv
401.313 265.085 399.123 269.219 399.121 272.457 cv
399.119 275.684 400.2 277.63 400.211 277.648 cv
400.231 277.684 400.241 277.724 400.241 277.764 cv
400.241 284.637 li
400.241 284.766 400.138 284.869 400.009 284.869 cv
cp
f
408.916 249.866 mo
409.042 250.07 409.273 250.314 409.646 250.285 cv
410.016 250.247 410.405 249.878 410.684 249.54 cv
408.916 249.866 li
cp
409.57 250.755 mo
408.863 250.755 408.469 250.118 408.355 249.763 cv
408.335 249.699 408.343 249.63 408.378 249.573 cv
408.412 249.516 408.469 249.476 408.535 249.464 cv
411.166 248.978 li
411.254 248.959 411.348 248.998 411.399 249.073 cv
411.451 249.148 411.455 249.247 411.408 249.325 cv
411.326 249.462 410.588 250.657 409.693 250.748 cv
409.651 250.752 409.61 250.755 409.57 250.755 cv
cp
0 0 0 rgb
f
415.854 249.119 mo
415.792 249.119 415.731 249.096 415.686 249.048 cv
415.597 248.955 415.6 248.808 415.692 248.719 cv
418.01 246.503 li
418.104 246.414 418.251 246.417 418.339 246.51 cv
418.428 246.603 418.425 246.75 418.332 246.839 cv
416.015 249.055 li
415.97 249.098 415.911 249.119 415.854 249.119 cv
cp
f
418.319 248.594 mo
418.295 248.593 416.566 248.413 416.566 248.413 cv
416.438 248.399 416.346 248.285 416.359 248.157 cv
416.372 248.03 416.472 247.931 416.615 247.95 cv
418.344 248.13 li
418.472 248.144 418.564 248.258 418.551 248.386 cv
418.538 248.505 418.438 248.594 418.319 248.594 cv
cp
f
412.06 242.163 mo
412.04 242.163 412.021 242.161 412 242.156 cv
410.182 241.679 li
410.058 241.646 409.983 241.519 410.016 241.394 cv
410.049 241.27 410.171 241.195 410.301 241.228 cv
412.119 241.705 li
412.243 241.738 412.317 241.865 412.285 241.99 cv
412.257 242.095 412.163 242.163 412.06 242.163 cv
cp
f
407.886 241.686 mo
406.523 241.686 li
406.395 241.686 406.291 241.582 406.291 241.453 cv
406.291 241.324 406.395 241.221 406.523 241.221 cv
407.886 241.221 li
408.015 241.221 408.118 241.324 408.118 241.453 cv
408.118 241.582 408.015 241.686 407.886 241.686 cv
cp
f
407.204 247.577 mo
407.109 247.577 407.021 247.52 406.985 247.425 cv
406.332 245.639 408.35 244.066 408.436 244 cv
408.535 243.923 408.683 243.94 408.762 244.043 cv
408.84 244.145 408.82 244.291 408.719 244.369 cv
408.7 244.383 406.887 245.801 407.423 247.265 cv
407.467 247.386 407.405 247.52 407.284 247.563 cv
407.258 247.573 407.23 247.577 407.204 247.577 cv
cp
f
410.963 245.36 mo
410.796 245.335 410.712 245.215 410.733 245.088 cv
410.957 243.813 li
410.365 243.265 li
410.271 243.177 410.266 243.029 410.353 242.936 cv
410.439 242.84 410.587 242.836 410.682 242.923 cv
411.366 243.559 li
411.424 243.612 411.451 243.692 411.438 243.77 cv
411.192 245.168 li
411.172 245.281 411.074 245.36 410.963 245.36 cv
cp
f
406.62 244.873 mo
406.453 244.848 406.368 244.727 406.391 244.601 cv
406.615 243.327 li
406.022 242.777 li
405.928 242.689 405.923 242.542 406.01 242.448 cv
406.097 242.353 406.243 242.349 406.339 242.436 cv
407.024 243.071 li
407.082 243.125 407.109 243.205 407.096 243.282 cv
406.85 244.681 li
406.829 244.794 406.731 244.873 406.62 244.873 cv
cp
f
386.184 265.671 mo
386.042 266.805 385.948 268.533 386.438 269.049 cv
386.535 269.151 386.646 269.191 386.802 269.172 cv
386.944 269.153 387.033 269.096 387.089 268.985 cv
387.371 268.426 386.771 266.853 386.184 265.671 cv
cp
386.73 269.642 mo
386.487 269.642 386.271 269.549 386.101 269.37 cv
385.22 268.443 385.765 265.253 385.829 264.893 cv
385.847 264.796 385.923 264.721 386.021 264.704 cv
386.117 264.69 386.214 264.733 386.262 264.82 cv
386.447 265.151 388.061 268.092 387.505 269.194 cv
387.379 269.443 387.156 269.596 386.86 269.633 cv
386.816 269.639 386.773 269.642 386.73 269.642 cv
cp
1 1 1 rgb
f
456.063 300.581 mo
456.063 308.582 449.576 315.068 441.575 315.068 cv
433.573 315.068 427.087 308.582 427.087 300.581 cv
427.087 292.58 433.573 286.094 441.575 286.094 cv
449.576 286.094 456.063 292.58 456.063 300.581 cv
cp
.407843 .462745 .666667 rgb
f
448.007 300.581 mo
448.007 304.133 445.127 307.013 441.575 307.013 cv
438.022 307.013 435.144 304.133 435.144 300.581 cv
435.144 297.028 438.022 294.149 441.575 294.149 cv
445.127 294.149 448.007 297.028 448.007 300.581 cv
cp
.25098 .313726 .498039 rgb
f
302.437 261.156 mo
297.473 257.196 li
291.216 256.722 li
285.448 258.865 li
288.467 296.214 li
288.467 296.214 297.556 298.692 303.554 295.529 cv
309.552 292.365 302.437 261.156 302.437 261.156 cv
cp
.968627 .701961 .411765 rgb
f
279.261 260.324 mo
282.08 257.711 286.671 256.99 289.369 256.793 cv
289.369 256.793 288.707 274.479 289.639 285.363 cv
290.166 291.516 290.486 295.797 290.664 298.359 cv
284.187 298.52 276.946 298.318 276.946 298.318 cv
276.946 298.318 275.09 264.19 279.261 260.324 cv
cp
.407843 .713726 .847059 rgb
f
308.37 284.898 mo
308.333 291.466 308.181 296.794 308.181 296.794 cv
308.181 296.794 306.963 297.645 302.521 298.422 cv
302.296 295.6 301.055 285.984 300.28 278.804 cv
299.287 269.621 297.473 257.196 297.473 257.196 cv
289.369 256.797 li
290.188 256.737 290.84 256.722 291.216 256.722 cv
291.441 256.722 291.572 256.729 291.572 256.729 cv
291.572 256.729 300.717 257.104 305.043 259.412 cv
305.043 259.412 305.152 259.472 305.348 259.576 cv
306.087 260.018 306.667 260.525 306.985 261.101 cv
308.246 263.364 308.435 275.417 308.37 284.898 cv
cp
f
284.383 257.646 mo
284.383 257.646 274.16 259.278 268.104 267.323 cv
262.914 274.22 261.252 282.065 261.252 282.065 cv
261.252 282.065 267 281.099 270.482 281.135 cv
273.963 281.171 278.971 281.583 278.971 281.583 cv
284.383 257.646 li
cp
f
300.478 241.73 mo
300.478 241.73 302.53 235.018 299.513 233.618 cv
296.496 232.218 294.545 236.139 294.545 236.139 cv
294.545 236.139 287.72 236.587 285.049 240.177 cv
282.378 243.766 288.597 250.301 288.597 250.301 cv
300.478 241.73 li
cp
0 0 0 rgb
f
289.773 251.713 mo
289.242 257.979 li
289.242 257.979 290.22 259.876 293.861 260.485 cv
296.573 260.938 297.584 260.402 297.584 260.402 cv
297.473 257.196 li
297.36 254.069 li
290.863 252.052 li
289.773 251.713 li
cp
.956863 .517647 .384314 rgb
f
290.863 252.052 mo
290.865 252.225 290.913 252.433 290.994 252.672 cv
292.131 255.922 295.907 256.922 297.473 257.196 cv
297.36 254.069 li
290.863 252.052 li
cp
0 0 0 rgb
f
299.968 239.903 mo
299.968 239.903 302.591 248.04 300.924 252.295 cv
299.258 256.551 295.337 255.461 293.036 254.375 cv
290.733 253.289 289.772 251.714 289.772 251.714 cv
289.772 251.714 287.467 252.246 286.184 250.022 cv
284.9 247.8 286.058 245.511 287.386 245.093 cv
288.713 244.676 290.135 245.746 290.135 245.746 cv
289.176 243.362 li
289.176 243.362 295.324 232.353 299.968 239.903 cv
cp
.956863 .517647 .384314 rgb
f
289.638 249.11 mo
289.58 249.11 289.522 249.091 289.475 249.05 cv
286.824 246.78 li
286.719 246.691 286.707 246.533 286.796 246.429 cv
286.886 246.322 287.044 246.311 287.149 246.401 cv
289.8 248.671 li
289.905 248.76 289.917 248.918 289.828 249.022 cv
289.778 249.081 289.708 249.11 289.638 249.11 cv
cp
0 0 0 rgb
f
287.067 248.857 mo
286.947 248.857 286.841 248.771 286.821 248.649 cv
286.798 248.513 286.89 248.384 287.026 248.361 cv
288.926 248.04 li
289.062 248.012 289.191 248.108 289.214 248.244 cv
289.237 248.381 289.145 248.51 289.009 248.532 cv
287.109 248.854 li
287.095 248.856 287.081 248.857 287.067 248.857 cv
cp
f
299.002 248.857 mo
298.983 248.857 298.963 248.855 298.943 248.851 cv
298.809 248.818 298.727 248.683 298.759 248.549 cv
299.203 246.704 298.097 245.6 298.049 245.554 cv
297.951 245.457 297.948 245.3 298.044 245.2 cv
298.139 245.102 298.297 245.098 298.396 245.194 cv
298.452 245.248 299.758 246.534 299.245 248.666 cv
299.217 248.78 299.115 248.857 299.002 248.857 cv
cp
f
300.279 245.994 mo
300.161 245.994 300.056 245.91 300.033 245.789 cv
299.763 244.318 li
299.738 244.183 299.828 244.053 299.963 244.027 cv
300.099 244 300.229 244.092 300.255 244.229 cv
300.525 245.699 li
300.55 245.835 300.46 245.965 300.325 245.99 cv
300.309 245.993 300.294 245.994 300.279 245.994 cv
cp
f
296.307 245.735 mo
296.188 245.735 296.083 245.651 296.061 245.53 cv
295.791 244.06 li
295.766 243.924 295.855 243.794 295.991 243.769 cv
296.13 243.742 296.258 243.833 296.283 243.97 cv
296.553 245.44 li
296.578 245.576 296.488 245.706 296.353 245.731 cv
296.337 245.734 296.322 245.735 296.307 245.735 cv
cp
f
300.478 241.73 mo
300.478 241.73 299.904 240.413 298.341 240.27 cv
296.779 240.126 295.773 241.15 295.773 241.15 cv
295.773 241.15 296.235 243.841 293.991 245.059 cv
291.747 246.277 290.135 245.746 290.135 245.746 cv
288.64 245.066 li
287.7 242.718 li
292.568 238.288 li
298.599 235.73 li
300.875 238.178 li
300.478 241.73 li
cp
f
295.516 260.903 mo
291.761 260.903 289.221 258.504 289.192 258.475 cv
289.092 258.379 289.089 258.221 289.185 258.122 cv
289.282 258.021 289.44 258.021 289.539 258.115 cv
289.572 258.146 292.906 261.289 297.525 260.159 cv
297.66 260.127 297.794 260.209 297.827 260.343 cv
297.86 260.478 297.778 260.612 297.644 260.646 cv
296.901 260.827 296.189 260.903 295.516 260.903 cv
cp
.639216 .482353 .564706 rgb
f
294.545 236.139 mo
294.545 236.139 294.636 232.653 290.863 233.879 cv
287.091 235.104 286.987 239.86 286.987 239.86 cv
294.545 236.139 li
cp
0 0 0 rgb
f
300.695 242.886 mo
300.65 242.882 299.469 242.672 299.469 242.672 cv
299.333 242.647 299.242 242.518 299.267 242.382 cv
299.291 242.246 299.418 242.154 299.557 242.18 cv
300.738 242.39 li
300.874 242.414 300.965 242.544 300.94 242.68 cv
300.919 242.801 300.813 242.886 300.695 242.886 cv
cp
f
295.273 243.243 mo
295.169 243.243 295.072 243.178 295.036 243.074 cv
294.992 242.943 295.062 242.801 295.192 242.757 cv
296.857 242.189 li
296.988 242.142 297.129 242.215 297.174 242.345 cv
297.219 242.476 297.149 242.618 297.018 242.662 cv
295.354 243.229 li
295.327 243.239 295.3 243.243 295.273 243.243 cv
cp
f
316.296 270.357 mo
316.296 270.357 321.675 271.556 326.226 269.409 cv
330.778 267.263 338.927 261.368 338.927 261.368 cv
344.678 268.957 li
344.678 268.957 332.96 290.076 313.664 287.048 cv
294.367 284.02 316.296 270.357 316.296 270.357 cv
cp
.956863 .517647 .384314 rgb
f
279.062 281.197 mo
278.889 281.175 278.794 281.049 278.813 280.912 cv
279.248 277.866 li
279.267 277.729 279.398 277.632 279.53 277.654 cv
279.667 277.674 279.762 277.8 279.743 277.937 cv
279.309 280.982 li
279.291 281.107 279.184 281.197 279.062 281.197 cv
cp
.639216 .482353 .564706 rgb
f
296.505 250.677 mo
296.771 251.134 297.122 251.533 297.352 251.473 cv
297.651 251.386 297.964 251.24 298.217 251.107 cv
296.505 250.677 li
cp
297.294 251.981 mo
296.52 251.981 295.925 250.679 295.807 250.398 cv
295.77 250.311 295.785 250.21 295.847 250.138 cv
295.908 250.066 296.006 250.036 296.098 250.059 cv
298.936 250.773 li
299.032 250.798 299.104 250.876 299.121 250.974 cv
299.138 251.072 299.095 251.17 299.012 251.225 cv
298.98 251.245 298.22 251.742 297.492 251.953 cv
297.425 251.973 297.359 251.981 297.294 251.981 cv
cp
0 0 0 rgb
f
325.455 354.942 mo
325.455 354.942 327.438 362.791 329.061 363.624 cv
330.684 364.456 337.662 368.879 341.446 372.883 cv
344.618 376.239 341.422 378.146 341.422 378.146 cv
319.388 378.046 li
300.509 364.046 li
307.341 349.603 li
325.455 354.942 li
cp
.968627 .701961 .411765 rgb
f
327.491 359.697 mo
327.491 359.697 320.401 364.184 321.464 365.035 cv
322.526 365.888 333.2 367.363 333.262 366.192 cv
333.323 365.021 328.741 359.973 327.491 359.697 cv
cp
1 1 1 rgb
f
332.011 357.478 mo
332.011 357.478 335.026 314.248 329.262 304 cv
325.252 296.872 314.677 296.346 307.506 295.777 cv
304.732 295.558 301.945 295.58 299.172 295.803 cv
277.226 297.561 li
277.226 297.561 272.422 313.066 280.958 317.561 cv
287.784 321.155 304.398 324.335 304.398 324.335 cv
303.662 354.53 li
332.011 357.478 li
cp
.639216 .482353 .564706 rgb
f
305.348 259.576 mo
322.363 270.286 li
322.034 288.343 li
322.034 288.343 308.38 290.583 306.195 285.846 cv
302.726 278.326 305.348 259.576 305.348 259.576 cv
cp
.407843 .713726 .847059 rgb
f
262.672 281.845 mo
262.672 281.845 259.726 291.1 267.002 295.213 cv
274.278 299.325 295.754 288.053 295.754 288.053 cv
292.582 279.504 li
276.538 281.135 li
276.538 281.135 264.986 281.132 262.672 281.845 cv
cp
.956863 .517647 .384314 rgb
f
308.67 319.914 mo
307.706 319.914 305.916 322.086 304.802 323.744 cv
305.903 323.57 308.391 323.054 309.165 321.841 cv
309.418 321.444 309.458 321.014 309.288 320.524 cv
309.092 319.959 308.826 319.928 308.738 319.918 cv
308.716 319.915 308.693 319.914 308.67 319.914 cv
cp
304.293 324.315 mo
304.207 324.315 304.126 324.271 304.08 324.196 cv
304.03 324.115 304.031 324.013 304.082 323.932 cv
304.387 323.449 307.114 319.251 308.796 319.421 cv
309.237 319.473 309.563 319.788 309.761 320.36 cv
309.981 320.995 309.923 321.584 309.587 322.11 cv
308.455 323.881 304.486 324.297 304.317 324.314 cv
304.31 324.315 304.301 324.315 304.293 324.315 cv
cp
.25098 .313726 .498039 rgb
f
281.469 305.118 mo
281.365 305.118 281.268 305.053 281.232 304.949 cv
281.188 304.818 281.257 304.677 281.388 304.632 cv
281.431 304.617 285.678 303.119 285.177 299.97 cv
285.155 299.834 285.248 299.705 285.385 299.684 cv
285.515 299.661 285.649 299.755 285.671 299.892 cv
286.238 303.456 281.597 305.089 281.55 305.104 cv
281.523 305.114 281.496 305.118 281.469 305.118 cv
cp
f
277.711 301.535 mo
277.711 309.537 271.225 316.022 263.224 316.022 cv
255.223 316.022 248.737 309.537 248.737 301.535 cv
248.737 293.534 255.223 287.048 263.224 287.048 cv
271.225 287.048 277.711 293.534 277.711 301.535 cv
cp
.407843 .462745 .666667 rgb
f
269.656 301.535 mo
269.656 305.088 266.776 307.967 263.224 307.967 cv
259.672 307.967 256.792 305.088 256.792 301.535 cv
256.792 297.983 259.672 295.104 263.224 295.104 cv
266.776 295.104 269.656 297.983 269.656 301.535 cv
cp
.25098 .313726 .498039 rgb
f
290.503 279.189 mo
290.503 279.189 292.063 272.225 293.978 272.083 cv
295.893 271.941 294.391 277.688 294.391 277.688 cv
299.577 275.705 li
299.577 275.705 305.478 274.06 306.651 274.573 cv
307.825 275.087 305.893 277 305.893 277 cv
305.893 277 310.095 275.739 309.505 277.788 cv
308.916 279.836 306.041 281.015 306.041 281.015 cv
306.041 281.015 310.148 279.559 309.221 281.959 cv
308.719 283.257 299.687 288.726 293.6 288.53 cv
287.514 288.336 289.943 283.642 289.943 283.642 cv
290.503 279.189 li
cp
.956863 .517647 .384314 rgb
f
299.513 279.098 mo
299.404 279.098 299.304 279.026 299.272 278.917 cv
299.234 278.784 299.311 278.646 299.443 278.607 cv
305.823 276.76 li
305.959 276.718 306.094 276.798 306.133 276.931 cv
306.171 277.063 306.095 277.202 305.962 277.24 cv
299.582 279.088 li
299.559 279.095 299.536 279.098 299.513 279.098 cv
cp
0 0 0 rgb
f
301.504 282.615 mo
301.4 282.615 301.302 282.549 301.267 282.444 cv
301.224 282.313 301.294 282.172 301.425 282.128 cv
306.888 280.305 li
307.021 280.263 307.16 280.332 307.204 280.463 cv
307.248 280.594 307.177 280.735 307.046 280.779 cv
301.583 282.603 li
301.557 282.611 301.531 282.615 301.504 282.615 cv
cp
f
357.649 267.921 mo
357.649 267.921 366.54 274.773 368.494 272.245 cv
370.188 270.056 370.725 264.934 370.725 264.934 cv
370.725 264.934 369.492 256.822 365.791 258.154 cv
361.271 259.782 357.649 267.921 357.649 267.921 cv
cp
.956863 .517647 .384314 rgb
f
365.878 266.558 mo
364.895 266.868 li
361.825 257.144 li
362.808 256.833 li
365.878 266.558 li
cp
.733333 .843137 1 rgb
f
362.764 258.405 mo
360.371 259.161 357.82 257.834 357.064 255.441 cv
353.608 244.49 li
362.271 241.755 li
365.729 252.707 li
366.483 255.099 365.156 257.65 362.764 258.405 cv
cp
f
362.217 256.671 mo
360.367 257.255 358.395 256.229 357.811 254.38 cv
356.754 251.031 li
363.451 248.917 li
364.508 252.266 li
365.092 254.115 364.065 256.088 362.217 256.671 cv
cp
.976471 .682353 .392157 rgb
f
362.271 241.755 mo
362.367 242.059 360.506 242.916 358.113 243.672 cv
355.721 244.427 353.704 244.793 353.608 244.49 cv
353.513 244.187 355.374 243.328 357.767 242.573 cv
360.159 241.818 362.176 241.452 362.271 241.755 cv
cp
1 1 1 rgb
f
363.451 248.917 mo
363.547 249.221 362.125 249.939 360.275 250.523 cv
358.427 251.106 356.85 251.334 356.754 251.031 cv
356.658 250.728 358.08 250.009 359.93 249.425 cv
361.778 248.842 363.355 248.614 363.451 248.917 cv
cp
1 .811765 .623529 rgb
f
367.728 258.443 mo
368.514 259.312 368.171 260.836 367.018 261.578 cv
364.825 262.99 361.795 264.649 361.944 262.922 cv
362.082 261.336 363.681 259.64 364.971 258.514 cv
365.851 257.745 367.063 257.709 367.728 258.443 cv
367.728 258.443 li
cp
.956863 .517647 .384314 rgb
f
357.649 267.921 mo
357.649 267.921 352.166 264.648 352.164 263.699 cv
352.162 262.512 356.573 264.003 356.573 264.003 cv
356.573 264.003 355.907 261.851 356.446 261.507 cv
357.178 261.041 358.66 261.238 358.66 261.238 cv
358.66 261.238 357.939 259.576 358.749 258.852 cv
359.543 258.141 363.824 260.053 363.824 260.053 cv
360.623 266.009 li
357.649 267.921 li
cp
f
345.463 268.883 mo
345.463 268.883 335.804 270.249 334.856 267.255 cv
334.797 267.067 334.746 266.882 334.701 266.699 cv
334.13 264.348 334.753 261.865 336.208 259.931 cv
337.777 257.844 339.963 254.352 341.803 256.198 cv
345.137 259.542 345.463 268.883 345.463 268.883 cv
cp
f
342.972 266.434 mo
343.953 266.688 li
346.463 256.983 li
345.482 256.729 li
342.972 266.434 li
cp
.733333 .843137 1 rgb
f
345.606 258.271 mo
347.994 258.889 350.43 257.454 351.047 255.067 cv
353.873 244.14 li
345.229 241.903 li
342.402 252.831 li
341.785 255.218 343.22 257.653 345.606 258.271 cv
cp
f
346.055 256.541 mo
347.899 257.018 349.782 255.909 350.26 254.063 cv
351.124 250.723 li
344.441 248.994 li
343.577 252.335 li
343.1 254.181 344.209 256.063 346.055 256.541 cv
cp
.976471 .682353 .392157 rgb
f
345.229 241.903 mo
345.15 242.206 347.022 242.952 349.409 243.569 cv
351.797 244.187 353.795 244.442 353.873 244.14 cv
353.951 243.837 352.08 243.091 349.693 242.474 cv
347.306 241.856 345.308 241.602 345.229 241.903 cv
cp
1 1 1 rgb
f
344.441 248.994 mo
344.363 249.297 345.796 249.929 347.641 250.406 cv
349.486 250.883 351.046 251.025 351.124 250.723 cv
351.202 250.42 349.77 249.788 347.925 249.311 cv
346.079 248.833 344.52 248.691 344.441 248.994 cv
cp
1 .811765 .623529 rgb
f
338.852 265.367 mo
338.771 265.677 340.771 266.462 343.317 267.121 cv
345.864 267.779 347.993 268.063 348.073 267.753 cv
348.153 267.443 346.154 266.658 343.607 266 cv
341.061 265.341 338.932 265.058 338.852 265.367 cv
cp
.733333 .843137 1 rgb
f
339.864 256.251 mo
338.983 256.995 339.202 258.663 340.319 259.684 cv
342.442 261.624 345.403 264.002 345.399 262.162 cv
345.396 260.473 343.905 258.359 342.681 256.908 cv
341.846 255.918 340.607 255.624 339.864 256.251 cv
339.864 256.251 li
cp
.956863 .517647 .384314 rgb
f
347.953 262.76 mo
347.953 262.76 351.932 261.691 350.409 260.015 cv
348.886 258.339 341.429 258.541 340.974 260.844 cv
340.52 263.146 347.953 262.76 347.953 262.76 cv
cp
f
348.013 266.168 mo
348.013 266.168 351.992 265.1 350.469 263.423 cv
348.946 261.747 341.489 261.949 341.035 264.252 cv
340.58 266.555 348.013 266.168 348.013 266.168 cv
cp
f
347.132 269.474 mo
347.132 269.474 350.763 269.142 349.688 267.45 cv
348.612 265.759 342.079 264.811 341.335 266.75 cv
340.592 268.689 347.132 269.474 347.132 269.474 cv
cp
f
353.896 242.059 mo
353.872 242.059 353.848 242.056 353.824 242.048 cv
353.691 242.009 353.616 241.869 353.656 241.737 cv
354.949 237.401 li
354.988 237.27 355.129 237.191 355.26 237.233 cv
355.393 237.272 355.468 237.412 355.428 237.544 cv
354.135 241.88 li
354.103 241.988 354.003 242.059 353.896 242.059 cv
cp
1 1 1 rgb
f
355.964 241.343 mo
355.901 241.343 355.839 241.319 355.791 241.273 cv
355.691 241.178 355.688 241.02 355.783 240.92 cv
357.176 239.468 li
357.273 239.366 357.432 239.366 357.529 239.46 cv
357.629 239.556 357.633 239.714 357.537 239.813 cv
356.145 241.266 li
356.095 241.317 356.029 241.343 355.964 241.343 cv
cp
f
357.099 252.302 mo
356.992 252.302 356.895 252.233 356.86 252.127 cv
355.157 246.754 li
355.115 246.623 355.188 246.482 355.32 246.44 cv
355.448 246.401 355.592 246.472 355.634 246.604 cv
357.337 251.977 li
357.379 252.107 357.306 252.248 357.174 252.29 cv
357.149 252.298 357.124 252.302 357.099 252.302 cv
cp
f
350.756 251.98 mo
350.735 251.98 350.714 251.978 350.693 251.973 cv
350.56 251.938 350.479 251.802 350.514 251.668 cv
351.922 246.244 li
351.957 246.109 352.097 246.034 352.227 246.064 cv
352.36 246.1 352.44 246.235 352.406 246.369 cv
350.998 251.793 li
350.969 251.906 350.867 251.98 350.756 251.98 cv
cp
f
337.553 266.477 mo
337.452 266.477 337.357 266.415 337.319 266.315 cv
337.27 266.187 337.335 266.042 337.464 265.993 cv
339.981 265.033 340.403 260.679 340.407 260.635 cv
340.415 260.549 340.467 260.473 340.544 260.434 cv
340.623 260.395 340.714 260.399 340.787 260.444 cv
342.491 261.495 li
342.609 261.567 342.646 261.722 342.573 261.839 cv
342.501 261.957 342.346 261.993 342.229 261.921 cv
340.856 261.074 li
340.687 262.233 340.001 265.562 337.642 266.46 cv
337.612 266.472 337.582 266.477 337.553 266.477 cv
cp
0 0 0 rgb
f
343.294 266.014 mo
343.216 266.011 341.59 265.942 341.041 265.053 cv
340.796 264.656 340.799 264.179 341.049 263.633 cv
341.979 261.603 347.933 262.229 348.605 262.309 cv
348.743 262.324 348.842 262.448 348.825 262.585 cv
348.81 262.723 348.684 262.817 348.549 262.805 cv
346.811 262.605 342.163 262.398 341.504 263.841 cv
341.325 264.23 341.313 264.541 341.466 264.789 cv
341.805 265.34 342.907 265.499 343.303 265.514 cv
343.441 265.519 343.549 265.635 343.544 265.772 cv
343.539 265.907 343.428 266.014 343.294 266.014 cv
cp
f
344.678 269.207 mo
344.548 269.198 341.92 268.993 341.191 267.848 cv
340.966 267.493 340.936 267.094 341.102 266.661 cv
341.887 264.607 347.232 265.791 347.839 265.935 cv
347.974 265.966 348.057 266.101 348.025 266.234 cv
347.995 266.368 347.858 266.457 347.726 266.421 cv
346.194 266.064 342.104 265.441 341.568 266.84 cv
341.461 267.12 341.476 267.362 341.613 267.579 cv
342.107 268.356 344.006 268.657 344.696 268.708 cv
344.834 268.718 344.938 268.838 344.927 268.976 cv
344.917 269.106 344.808 269.207 344.678 269.207 cv
cp
f
367.498 269.706 mo
367.439 269.706 367.38 269.684 367.335 269.64 cv
364.968 267.304 365.702 263.832 366.146 262.405 cv
365.17 263.021 li
365.063 263.088 364.919 263.058 364.849 262.948 cv
364.78 262.84 364.813 262.696 364.922 262.627 cv
366.464 261.653 li
366.549 261.6 366.661 261.606 366.739 261.674 cv
366.816 261.74 366.842 261.85 366.802 261.942 cv
366.782 261.988 364.863 266.546 367.661 269.308 cv
367.753 269.398 367.754 269.546 367.664 269.637 cv
367.618 269.684 367.558 269.706 367.498 269.706 cv
cp
f
370.007 265.255 mo
370.105 265.564 368.115 266.47 365.563 267.274 cv
363.011 268.08 360.862 268.482 360.765 268.172 cv
360.667 267.861 362.656 266.957 365.209 266.151 cv
367.761 265.346 369.909 264.944 370.007 265.255 cv
cp
.733333 .843137 1 rgb
f
363.561 263.432 mo
363.135 263.432 362.57 263.365 361.874 263.144 cv
360.233 262.622 358.595 261.477 358.526 261.428 cv
358.421 261.354 358.396 261.208 358.47 261.104 cv
358.545 260.998 358.688 260.975 358.794 261.047 cv
358.811 261.059 360.444 262.201 362.015 262.7 cv
363.521 263.181 364.323 262.863 364.331 262.859 cv
364.449 262.813 364.585 262.866 364.635 262.984 cv
364.685 263.103 364.63 263.238 364.513 263.288 cv
364.49 263.298 364.166 263.432 363.561 263.432 cv
cp
0 0 0 rgb
f
362.129 266.462 mo
362.064 266.462 361.999 266.461 361.932 266.459 cv
360.108 266.405 356.601 264.292 356.452 264.202 cv
356.343 264.136 356.308 263.992 356.374 263.882 cv
356.441 263.773 356.584 263.739 356.694 263.804 cv
356.729 263.825 360.244 265.943 361.945 265.994 cv
362.878 266.018 363.451 265.844 363.684 265.469 cv
363.946 265.044 363.803 264.317 363.259 263.308 cv
363.198 263.194 363.24 263.054 363.354 262.992 cv
363.467 262.932 363.608 262.974 363.669 263.087 cv
364.307 264.27 364.44 265.129 364.08 265.713 cv
363.769 266.217 363.13 266.462 362.129 266.462 cv
cp
f
390.854 294.333 mo
390.8 294.333 390.747 294.315 390.703 294.278 cv
390.604 294.194 390.593 294.048 390.676 293.95 cv
394.056 289.973 li
394.141 289.873 394.286 289.862 394.384 289.945 cv
394.482 290.029 394.494 290.176 394.411 290.273 cv
391.031 294.251 li
390.984 294.306 390.919 294.333 390.854 294.333 cv
cp
f
391.704 290.333 mo
391.645 290.333 391.584 290.311 391.539 290.265 cv
391.448 290.173 391.449 290.025 391.54 289.936 cv
392.78 288.707 li
392.872 288.617 393.02 288.616 393.109 288.708 cv
393.2 288.8 393.199 288.947 393.108 289.037 cv
391.868 290.266 li
391.822 290.311 391.764 290.333 391.704 290.333 cv
cp
f
465.923 301.422 mo
462.176 308.964 455.994 313.516 452.114 311.589 cv
448.235 309.662 448.128 301.985 451.874 294.443 cv
455.62 286.901 461.803 282.35 465.682 284.276 cv
469.562 286.203 469.669 293.88 465.923 301.422 cv
cp
.513726 .647059 .478431 rgb
f
425.899 300.88 mo
433.238 305.011 437.465 311.42 435.34 315.194 cv
433.215 318.969 425.543 318.68 418.205 314.549 cv
410.866 310.418 406.64 304.009 408.765 300.234 cv
410.89 296.459 418.562 296.748 425.899 300.88 cv
cp
f
424.364 331.364 mo
418.19 330.433 413.574 327.104 414.053 323.928 cv
414.532 320.752 419.926 318.933 426.099 319.864 cv
432.272 320.796 436.889 324.125 436.41 327.301 cv
435.931 330.477 430.538 332.296 424.364 331.364 cv
cp
f
459.996 309.616 mo
466.722 304.547 474.287 303.242 476.894 306.701 cv
479.501 310.16 476.163 317.074 469.438 322.143 cv
462.713 327.212 455.147 328.517 452.54 325.058 cv
449.933 321.599 453.271 314.685 459.996 309.616 cv
cp
f
443.406 337.066 mo
443.3 337.066 443.2 336.998 443.167 336.891 cv
438.732 322.54 423.428 324.698 423.274 324.725 cv
423.139 324.744 423.01 324.651 422.989 324.516 cv
422.969 324.379 423.063 324.251 423.198 324.23 cv
423.356 324.206 439.084 321.985 443.646 336.742 cv
443.686 336.874 443.612 337.015 443.48 337.056 cv
443.455 337.063 443.431 337.066 443.406 337.066 cv
cp
.313726 .470588 .286275 rgb
f
444.683 335.988 mo
444.568 335.988 444.466 335.91 444.439 335.795 cv
440.35 318.256 425.051 308.301 424.896 308.202 cv
424.78 308.128 424.746 307.973 424.82 307.856 cv
424.896 307.741 425.05 307.708 425.166 307.78 cv
425.321 307.88 440.79 317.939 444.926 335.682 cv
444.957 335.816 444.874 335.95 444.739 335.981 cv
444.721 335.986 444.701 335.988 444.683 335.988 cv
cp
f
443.647 343.055 mo
443.523 343.055 443.416 342.963 443.399 342.836 cv
441.205 325.643 459.156 294.739 459.338 294.43 cv
459.407 294.309 459.563 294.269 459.68 294.34 cv
459.799 294.41 459.839 294.563 459.77 294.682 cv
459.589 294.99 441.723 325.747 443.896 342.773 cv
443.913 342.91 443.816 343.035 443.679 343.053 cv
443.668 343.054 443.657 343.055 443.647 343.055 cv
cp
f
445.451 334.725 mo
445.281 334.704 445.186 334.578 445.203 334.441 cv
445.221 334.313 447.147 321.541 467.786 312.067 cv
467.911 312.009 468.061 312.063 468.118 312.19 cv
468.176 312.316 468.12 312.465 467.995 312.522 cv
447.629 321.87 445.716 334.383 445.699 334.508 cv
445.682 334.634 445.574 334.725 445.451 334.725 cv
cp
f
455.418 361.361 mo
438.057 361.361 li
437.115 361.361 436.327 360.691 436.235 359.812 cv
433.579 334.52 li
433.473 333.509 434.318 332.633 435.4 332.633 cv
458.074 332.633 li
459.156 332.633 460.002 333.509 459.896 334.52 cv
457.24 359.812 li
457.147 360.691 456.359 361.361 455.418 361.361 cv
cp
.666667 .533333 .533333 rgb
f
451.575 361.361 mo
434.214 361.361 li
433.272 361.361 432.484 360.691 432.393 359.812 cv
429.736 334.52 li
429.63 333.509 430.477 332.633 431.558 332.633 cv
454.231 332.633 li
455.313 332.633 456.159 333.509 456.053 334.52 cv
453.397 359.812 li
453.305 360.691 452.517 361.361 451.575 361.361 cv
cp
.717647 .603922 .603922 rgb
f
418.171 237.831 mo
418.171 237.831 421.003 228.897 425.994 232.149 cv
432.262 236.231 424.9 244.164 420.443 241.453 cv
415.986 238.742 418.171 237.831 418.171 237.831 cv
cp
0 0 0 rgb
f
328.057 21.0464 mo
328.057 21.0464 321.04 18.833 320.373 33.1387 cv
319.707 47.4443 320.373 53.001 320.373 53.001 cv
340.95 51.5557 li
337.843 32.6489 li
328.057 21.0464 li
cp
f
343.172 43.8115 mo
343.172 43.8115 349.446 47.8906 357.28 47.8335 cv
365.113 47.7759 373.392 44.4263 373.392 44.4263 cv
365.28 66.437 li
365.28 66.437 344.206 70.7202 342.771 65.2949 cv
340.134 55.3198 343.172 43.8115 343.172 43.8115 cv
cp
.25098 .313726 .498039 rgb
f
338.345 40.2314 mo
336.771 40.2314 335.489 38.9507 335.489 37.376 cv
335.489 36.645 335.765 35.9497 336.266 35.4189 cv
336.359 35.3179 336.518 35.314 336.619 35.4082 cv
336.719 35.5029 336.724 35.6611 336.629 35.7617 cv
336.217 36.1997 335.989 36.7729 335.989 37.376 cv
335.989 38.6748 337.046 39.7314 338.345 39.7314 cv
339.643 39.7314 340.699 38.6748 340.699 37.376 cv
340.699 36.0776 339.643 35.021 338.345 35.021 cv
338.207 35.021 338.095 34.9092 338.095 34.771 cv
338.095 34.6328 338.207 34.521 338.345 34.521 cv
339.919 34.521 341.199 35.8018 341.199 37.376 cv
341.199 38.9507 339.919 40.2314 338.345 40.2314 cv
cp
1 1 1 rgb
f
313.92 155.647 mo
313.92 155.647 341.083 149.275 344.25 128.742 cv
348.145 103.483 341.243 91.1079 341.243 91.1079 cv
323.497 112.287 li
318.171 137.881 li
311.153 142.958 li
307.248 151.234 li
313.92 155.647 li
cp
.929412 .454902 .345098 rgb
f
299.34 140.792 mo
299.403 139.791 300.291 139.016 301.362 139.029 cv
305.594 139.08 315.087 138.675 315.078 139.448 cv
315.065 140.433 312.246 150.288 312.246 150.288 cv
312.246 150.288 318.106 150.642 317.003 154.709 cv
316.157 157.83 312.383 161.412 310.673 162.91 cv
310.13 163.386 309.749 163.993 309.571 164.669 cv
308.806 167.577 306.313 175.571 302.007 175.633 cv
296.743 175.708 297.371 173.605 297.383 172.621 cv
297.394 171.775 298.911 147.617 299.34 140.792 cv
cp
.407843 .462745 .666667 rgb
f
332.62 112.287 mo
332.62 112.287 331.064 161.49 328.979 166.694 cv
326.892 171.898 315.492 166.694 315.492 166.694 cv
312.799 113.379 li
332.62 112.287 li
cp
.956863 .517647 .384314 rgb
f
344.25 80.9375 mo
344.25 80.9375 346.179 91.4072 346.179 99.2134 cv
346.179 107.02 347.131 115.587 346.179 116.349 cv
345.227 117.11 335.777 119.667 324.354 119.096 cv
312.93 118.524 309.503 115.962 309.693 115.054 cv
309.884 114.146 311.217 113.379 311.217 113.379 cv
311.217 113.379 310.455 90.813 313.501 84.7729 cv
316.547 78.7324 329.534 77.4136 329.534 77.4136 cv
343.5 77.4136 li
344.25 80.9375 li
cp
.639216 .482353 .564706 rgb
f
333.947 108.43 mo
333.796 108.421 333.689 108.304 333.697 108.166 cv
334.38 95.9805 li
334.388 95.8423 334.501 95.7231 334.644 95.7451 cv
334.781 95.7529 334.888 95.8706 334.88 96.0088 cv
334.197 108.194 li
334.189 108.327 334.079 108.43 333.947 108.43 cv
cp
1 1 1 rgb
f
324.651 80.0405 mo
324.651 80.0405 335.522 82.4648 340.968 79.8125 cv
346.413 77.1602 343.344 61.9121 343.344 61.9121 cv
343.344 61.9121 340.386 41.0283 336.143 40.583 cv
331.9 40.1377 328.155 40.7002 328.155 40.7002 cv
322.921 58.4473 li
324.651 80.0405 li
cp
.407843 .713726 .847059 rgb
f
334.376 40.0132 mo
334.376 40.0132 335.087 40.2207 336.143 40.583 cv
328.843 41.0391 li
328.843 41.0391 327.861 51.249 327.504 62.959 cv
327.255 71.2563 327.508 78.7417 327.685 82.3955 cv
317.382 82.145 li
317.382 82.145 312.468 48.4995 316.353 44.8921 cv
320.238 41.2847 329.87 40.0762 329.87 40.0762 cv
334.376 40.0132 li
cp
.25098 .313726 .498039 rgb
f
345.57 82.8306 mo
339.782 82.689 li
340.108 78.2402 340.674 67.6416 339.658 57.0708 cv
338.362 43.625 336.283 40.7578 336.155 40.5884 cv
338.938 41.5376 344.102 43.5674 345.053 45.7593 cv
346.363 48.7915 345.57 82.8306 345.57 82.8306 cv
cp
f
316.631 180.526 mo
315.628 180.517 314.807 179.672 314.762 178.602 cv
314.588 174.373 313.679 164.915 314.451 164.883 cv
315.435 164.843 325.426 167.134 325.426 167.134 cv
325.426 167.134 325.467 161.263 329.588 162.148 cv
332.75 162.827 336.527 166.405 338.114 168.033 cv
338.618 168.55 339.245 168.898 339.929 169.04 cv
342.874 169.648 350.989 171.711 351.28 176.008 cv
351.636 181.261 349.503 180.747 348.519 180.787 cv
347.674 180.821 323.469 180.592 316.631 180.526 cv
cp
.407843 .462745 .666667 rgb
f
326.783 77.4482 mo
326.783 77.4482 337.07 79.1494 339.103 81.021 cv
341.136 82.8931 336.205 90.0757 334.938 91.2407 cv
333.671 92.4053 324.642 86.4937 324.642 86.4937 cv
323.336 81.333 li
326.783 77.4482 li
cp
.956863 .517647 .384314 rgb
f
339.103 81.021 mo
339.103 81.021 343.402 87.1665 342.692 89.7031 cv
341.981 92.2393 336.802 84.3989 336.802 84.3989 cv
339.103 81.021 li
cp
f
331.529 89.5356 mo
331.529 89.5356 326.202 88.7832 327.253 90.7144 cv
328.304 92.6455 333.996 92.3096 334.938 91.2407 cv
335.88 90.1714 332.908 87.2539 332.908 87.2539 cv
331.529 89.5356 li
cp
f
330.84 90.1538 mo
330.811 90.1538 330.78 90.1484 330.751 90.1377 cv
329.221 89.5552 li
329.135 89.5225 329.074 89.4458 329.062 89.3555 cv
329.05 89.2646 329.087 89.1748 329.161 89.1201 cv
330.381 88.2173 li
330.49 88.1362 330.648 88.1587 330.73 88.2695 cv
330.813 88.3809 330.789 88.5371 330.678 88.6196 cv
329.826 89.2505 li
330.929 89.6699 li
331.058 89.7192 331.123 89.8638 331.073 89.9927 cv
331.035 90.0923 330.94 90.1538 330.84 90.1538 cv
cp
0 0 0 rgb
f
338.484 86.4111 mo
338.384 86.4111 338.289 86.3506 338.251 86.2515 cv
337.897 85.3369 337.215 83.7827 336.888 83.5044 cv
336.782 83.415 336.77 83.2573 336.859 83.1519 cv
336.95 83.0464 337.108 83.0352 337.212 83.1235 cv
337.743 83.5747 338.619 85.8169 338.718 86.0708 cv
338.768 86.1997 338.703 86.3447 338.574 86.3945 cv
338.545 86.4058 338.515 86.4111 338.484 86.4111 cv
cp
f
336.857 89.0073 mo
336.767 89.0073 336.679 88.957 336.635 88.8701 cv
334.786 85.2197 li
334.724 85.0967 334.772 84.9463 334.896 84.8838 cv
335.019 84.8232 335.169 84.8716 335.231 84.9941 cv
337.08 88.6445 li
337.143 88.7676 337.094 88.918 336.971 88.9805 cv
336.935 88.9985 336.896 89.0073 336.857 89.0073 cv
cp
f
328.644 35.9355 mo
328.866 41.6016 li
328.866 41.6016 329.951 43.1904 333.276 43.3301 cv
335.753 43.4346 336.486 42.1357 336.486 42.1357 cv
335.694 37.2007 li
329.657 36.1182 li
328.644 35.9355 li
cp
.956863 .517647 .384314 rgb
f
328.639 35.5894 mo
328.66 35.7437 328.726 35.9238 328.825 36.1299 cv
330.204 38.9106 334.711 39.9141 336.143 39.9863 cv
335.694 37.2007 li
328.639 35.5894 li
cp
0 0 0 rgb
f
336.453 24.2363 mo
336.453 24.2363 339.704 31.2241 338.686 35.2173 cv
337.668 39.21 334.039 38.6709 331.859 37.9551 cv
329.678 37.2393 328.644 35.9365 328.644 35.9365 cv
328.644 35.9365 326.64 36.6689 325.245 34.8228 cv
323.849 32.9761 324.63 30.7998 325.772 30.2783 cv
326.914 29.7568 328.305 30.5571 328.305 30.5571 cv
327.182 28.5303 li
327.182 28.5303 331.458 17.9961 336.453 24.2363 cv
cp
.956863 .517647 .384314 rgb
f
336.485 32.8989 mo
336.422 32.8989 336.358 32.875 336.31 32.8267 cv
336.212 32.73 336.211 32.5713 336.308 32.4731 cv
336.987 31.7847 336.325 30.2007 336.013 29.6479 cv
335.945 29.5278 335.987 29.3755 336.107 29.3076 cv
336.227 29.2378 336.38 29.2808 336.448 29.4014 cv
336.502 29.4961 337.747 31.7266 336.663 32.8247 cv
336.614 32.874 336.55 32.8989 336.485 32.8989 cv
cp
0 0 0 rgb
f
328.057 33.8989 mo
327.991 33.8989 327.927 33.8735 327.878 33.8237 cv
325.925 31.8237 li
325.828 31.7246 325.83 31.5664 325.929 31.4702 cv
326.028 31.373 326.186 31.376 326.282 31.4741 cv
328.235 33.4741 li
328.332 33.5732 328.33 33.7314 328.231 33.8276 cv
328.183 33.8755 328.12 33.8989 328.057 33.8989 cv
cp
f
326.017 33.3887 mo
325.896 33.3887 325.791 33.3022 325.771 33.1802 cv
325.747 33.0439 325.839 32.915 325.975 32.8921 cv
327.298 32.6689 li
327.44 32.6455 327.563 32.7378 327.586 32.874 cv
327.609 33.0103 327.518 33.1392 327.382 33.1621 cv
326.059 33.3853 li
326.044 33.3877 326.03 33.3887 326.017 33.3887 cv
cp
f
337.613 27.438 mo
337.574 27.4351 336.679 27.292 336.679 27.292 cv
336.542 27.27 336.449 27.1416 336.471 27.0054 cv
336.492 26.8696 336.625 26.7769 336.757 26.7979 cv
337.652 26.9409 li
337.789 26.9629 337.882 27.0913 337.86 27.2275 cv
337.841 27.3506 337.734 27.438 337.613 27.438 cv
cp
f
332.676 27.9624 mo
332.56 27.9624 332.456 27.8813 332.431 27.7637 cv
332.402 27.6284 332.489 27.4961 332.625 27.4678 cv
334.403 27.0962 li
334.535 27.0664 334.67 27.1553 334.699 27.2896 cv
334.728 27.4248 334.641 27.5571 334.505 27.5854 cv
332.727 27.957 li
332.71 27.9609 332.692 27.9624 332.676 27.9624 cv
cp
f
337.653 30.3364 mo
337.548 30.3364 337.449 30.269 337.415 30.1631 cv
337.006 28.894 li
336.98 28.8145 336.996 28.7275 337.049 28.6621 cv
337.434 28.1777 li
337.52 28.0688 337.677 28.0522 337.784 28.1372 cv
337.893 28.2231 337.91 28.3804 337.824 28.4883 cv
337.523 28.8682 li
337.892 30.0098 li
337.934 30.1411 337.861 30.2822 337.73 30.3242 cv
337.704 30.3325 337.679 30.3364 337.653 30.3364 cv
cp
f
334.091 30.729 mo
333.985 30.729 333.887 30.6616 333.853 30.5557 cv
333.443 29.2866 li
333.417 29.2051 333.435 29.1157 333.489 29.0498 cv
334.021 28.4106 li
334.111 28.3047 334.269 28.291 334.374 28.3789 cv
334.479 28.4668 334.494 28.6245 334.406 28.731 cv
333.962 29.2642 li
334.329 30.4023 li
334.371 30.5337 334.299 30.6748 334.168 30.7168 cv
334.142 30.7251 334.116 30.729 334.091 30.729 cv
cp
f
335.338 35.1157 mo
334.45 35.1157 333.474 34.1724 333.345 34.0444 cv
333.247 33.9468 333.247 33.7886 333.345 33.6909 cv
333.442 33.5928 333.6 33.5928 333.698 33.6899 cv
334.021 34.0112 335.068 34.8604 335.616 34.5469 cv
335.735 34.4795 335.889 34.5205 335.957 34.6416 cv
336.024 34.7617 335.982 34.9141 335.862 34.9824 cv
335.696 35.0762 335.519 35.1157 335.338 35.1157 cv
cp
f
318.222 43.5513 mo
318.222 43.5513 301.724 54.0283 301.854 70.189 cv
301.985 86.3496 323.854 91.1851 323.854 91.1851 cv
330.581 74.5381 li
319.343 68.1128 li
318.222 43.5513 li
cp
.25098 .313726 .498039 rgb
f
311.217 113.63 mo
311.104 113.63 311.001 113.553 310.974 113.438 cv
310.941 113.304 311.024 113.169 311.158 113.137 cv
312.943 112.709 li
313.078 112.677 313.214 112.76 313.245 112.895 cv
313.277 113.029 313.194 113.164 313.061 113.196 cv
311.275 113.623 li
311.256 113.628 311.236 113.63 311.217 113.63 cv
cp
1 1 1 rgb
f
330.214 168.894 mo
330.189 168.894 330.164 168.89 330.139 168.882 cv
325.351 167.372 li
325.219 167.331 325.146 167.19 325.188 167.059 cv
325.229 166.928 325.364 166.854 325.501 166.896 cv
330.289 168.406 li
330.421 168.447 330.494 168.587 330.452 168.719 cv
330.419 168.826 330.32 168.894 330.214 168.894 cv
cp
.968627 .701961 .411765 rgb
f
309.686 154.857 mo
309.642 154.857 309.598 154.846 309.558 154.822 cv
309.439 154.751 309.4 154.598 309.471 154.479 cv
312.031 150.16 li
312.102 150.041 312.256 150.002 312.374 150.073 cv
312.492 150.143 312.531 150.296 312.461 150.415 cv
309.9 154.734 li
309.854 154.813 309.771 154.857 309.686 154.857 cv
cp
f
327.444 72.9951 mo
327.392 72.9951 327.338 72.9785 327.293 72.9438 cv
327.223 72.8906 320.271 67.6099 317.623 66.6729 cv
317.492 66.6265 317.424 66.4839 317.471 66.3535 cv
317.517 66.2236 317.657 66.1533 317.789 66.2012 cv
320.511 67.1641 327.308 72.3271 327.596 72.5464 cv
327.706 72.6299 327.727 72.7866 327.644 72.8965 cv
327.594 72.9609 327.52 72.9951 327.444 72.9951 cv
cp
.407843 .462745 .666667 rgb
f
318.092 63.0376 mo
317.999 63.0376 317.908 63.0601 317.814 63.105 cv
317.603 63.2061 317.562 63.3354 317.549 63.4375 cv
317.446 64.2896 319.241 66.1895 320.714 67.4932 cv
320.26 65.978 319.359 63.5674 318.385 63.1089 cv
318.284 63.061 318.188 63.0376 318.092 63.0376 cv
cp
321.173 68.4639 mo
321.116 68.4639 321.06 68.4448 321.014 68.4072 cv
320.589 68.0571 316.862 64.9458 317.053 63.377 cv
317.092 63.0562 317.28 62.8062 317.598 62.6538 cv
317.926 62.4976 318.262 62.498 318.598 62.6563 cv
320.221 63.4204 321.367 67.9604 321.415 68.1533 cv
321.441 68.2583 321.397 68.3677 321.307 68.4253 cv
321.266 68.4512 321.219 68.4639 321.173 68.4639 cv
cp
f
333.778 43.604 mo
333.611 43.604 333.437 43.5962 333.253 43.5791 cv
331.027 43.374 328.816 41.8716 328.724 41.8076 cv
328.61 41.7295 328.581 41.5737 328.659 41.46 cv
328.739 41.3467 328.896 41.3174 329.007 41.3955 cv
329.028 41.4102 331.205 42.8887 333.299 43.0811 cv
335.503 43.2842 336.239 42.062 336.27 42.0103 cv
336.338 41.8911 336.492 41.8516 336.61 41.9204 cv
336.729 41.9893 336.771 42.1406 336.702 42.2603 cv
336.669 42.3188 335.905 43.604 333.778 43.604 cv
cp
f
327.444 40.5771 mo
325.87 40.5771 324.589 39.2964 324.589 37.7222 cv
324.589 36.9917 324.865 36.2964 325.366 35.7646 cv
325.46 35.6641 325.618 35.6592 325.72 35.7539 cv
325.819 35.8486 325.824 36.0068 325.729 36.1074 cv
325.316 36.5459 325.089 37.1196 325.089 37.7222 cv
325.089 39.0205 326.146 40.0771 327.444 40.0771 cv
328.743 40.0771 329.8 39.0205 329.8 37.7222 cv
329.8 36.4233 328.743 35.3667 327.444 35.3667 cv
327.307 35.3667 327.194 35.2549 327.194 35.1167 cv
327.194 34.9785 327.307 34.8667 327.444 34.8667 cv
329.019 34.8667 330.3 36.1475 330.3 37.7222 cv
330.3 39.2964 329.019 40.5771 327.444 40.5771 cv
cp
1 1 1 rgb
f
328.305 30.5571 mo
328.305 30.5571 329.461 30.3091 330.581 28.8828 cv
331.7 27.4561 331.462 25.0444 331.462 25.0444 cv
331.462 25.0444 332.729 25.5522 334.214 25.5522 cv
335.699 25.5522 336.676 24.7432 336.676 24.7432 cv
336.676 24.7432 338.079 23.7119 337.809 21.998 cv
337.539 20.2847 335.674 20.6655 335.674 20.6655 cv
335.674 20.6655 334.08 19.4595 331.462 19.5229 cv
328.844 19.5864 328.057 21.0464 328.057 21.0464 cv
328.057 21.0464 325.721 21.126 324.839 22.2603 cv
323.958 23.3945 323.958 25.0391 323.958 25.0391 cv
323.958 25.0391 322.907 25.3574 322.576 27.5493 cv
322.244 29.7407 324.667 31.6489 324.667 31.6489 cv
324.667 31.6489 325.861 29.7231 328.305 30.5571 cv
cp
0 0 0 rgb
f
370.889 158.631 mo
370.889 166.335 li
356.888 165.792 li
356.888 158.631 li
370.889 158.631 li
cp
.956863 .517647 .384314 rgb
f
403.215 157.763 mo
403.215 165.467 li
390.255 164.924 li
390.255 157.763 li
403.215 157.763 li
cp
f
372.307 74.7012 mo
372.307 74.7012 364.964 89.4165 358.976 115.953 cv
353.515 140.157 352.338 160.176 352.338 160.176 cv
375.96 160.176 li
375.96 160.176 378.589 140.441 379.288 132.632 cv
379.988 124.824 382.317 114.372 382.317 114.372 cv
382.317 114.372 385.56 159.413 386.332 160.176 cv
387.105 160.938 409.719 160.344 409.477 159.31 cv
409.234 158.275 402.33 83.5762 401.718 78.6514 cv
399.835 63.5122 372.307 74.7012 372.307 74.7012 cv
cp
.968627 .701961 .411765 rgb
f
387.038 178.202 mo
387.038 179.561 387.479 181.117 388.382 181.508 cv
389.285 181.9 396.594 182.715 402.988 182.139 cv
409.109 181.584 410.38 181.117 410.832 180.54 cv
411.052 180.247 410.622 178.887 410.128 177.571 cv
410.097 177.506 410.076 177.43 410.044 177.364 cv
409.792 176.701 409.529 176.059 409.341 175.603 cv
409.151 175.167 408.921 174.754 408.647 174.352 cv
407.986 173.405 406.674 171.447 406.338 170.436 cv
405.896 169.087 405.225 166.172 404.773 164.802 cv
404.321 163.454 403.219 163.17 403.219 163.17 cv
403.219 163.17 390.63 162.279 389.727 163.062 cv
388.834 163.834 388.382 170.251 388.382 171.219 cv
388.382 172.187 li
388.382 173.09 387.784 174.874 387.396 176.353 cv
387.29 176.723 387.206 177.071 387.144 177.386 cv
387.08 177.701 387.038 177.973 387.038 178.202 cv
cp
.639216 .482353 .564706 rgb
f
334.359 180.975 mo
335.199 181.334 370.931 182.346 371.761 180.975 cv
372.013 180.562 372.191 179.159 372.307 177.397 cv
372.601 173.242 372.601 167.064 372.601 167.064 cv
372.601 167.064 372.863 164.954 372.811 163.976 cv
372.769 163.007 355.58 163.377 355.58 163.377 cv
344.407 172.502 li
344.407 172.502 341.341 171.937 337.992 172.502 cv
336.217 172.796 335.073 175.047 334.506 177.168 cv
334.001 179.05 333.959 180.801 334.359 180.975 cv
cp
f
334.359 180.975 mo
335.199 181.334 370.931 182.346 371.761 180.975 cv
372.013 180.562 372.191 179.159 372.307 177.397 cv
365.513 177.897 348.797 178.843 334.506 177.168 cv
334.001 179.05 333.959 180.801 334.359 180.975 cv
cp
.968627 .701961 .411765 rgb
f
387.038 178.202 mo
387.038 179.561 387.479 181.117 388.382 181.508 cv
389.285 181.9 396.594 182.715 402.988 182.139 cv
409.109 181.584 410.38 181.117 410.832 180.54 cv
411.052 180.247 410.622 178.887 410.128 177.571 cv
404.447 178.017 394.188 178.419 387.396 176.353 cv
387.29 176.723 387.206 177.071 387.144 177.386 cv
387.08 177.701 387.038 177.973 387.038 178.202 cv
cp
f
382.317 114.622 mo
382.188 114.622 382.078 114.522 382.068 114.391 cv
382.061 114.293 381.323 104.589 381.109 100.285 cv
380.929 96.6514 380.895 94.6133 380.888 94.0527 cv
373.379 90.5903 li
373.253 90.5327 373.198 90.3838 373.257 90.2588 cv
373.314 90.1328 373.462 90.0781 373.588 90.1362 cv
381.241 93.665 li
381.33 93.7056 381.387 93.7939 381.387 93.8916 cv
381.387 93.9116 381.396 95.9678 381.609 100.261 cv
381.822 104.558 382.56 114.255 382.566 114.353 cv
382.577 114.49 382.474 114.61 382.336 114.621 cv
382.33 114.622 382.323 114.622 382.317 114.622 cv
cp
.407843 .462745 .666667 rgb
f
402.895 169.885 mo
402.872 169.885 402.85 169.882 402.827 169.876 cv
402.778 169.862 397.868 168.509 395.403 168.949 cv
392.854 169.402 li
392.744 169.421 392.634 169.366 392.584 169.265 cv
392.536 169.164 392.561 169.043 392.645 168.969 cv
392.831 168.804 397.267 164.93 399.931 166.106 cv
400.057 166.162 400.113 166.31 400.058 166.436 cv
400.002 166.563 399.854 166.62 399.728 166.563 cv
397.958 165.778 395.072 167.705 393.721 168.74 cv
395.315 168.457 li
397.891 168 402.755 169.337 402.962 169.395 cv
403.095 169.431 403.172 169.569 403.136 169.702 cv
403.104 169.813 403.004 169.885 402.895 169.885 cv
cp
1 1 1 rgb
f
347.086 170.564 mo
346.959 170.564 346.851 170.469 346.837 170.341 cv
346.822 170.204 346.922 170.081 347.06 170.066 cv
352.966 169.436 li
351.039 167.086 li
350.951 166.979 350.967 166.822 351.074 166.734 cv
351.18 166.646 351.338 166.663 351.426 166.769 cv
353.646 169.477 li
353.705 169.548 353.72 169.645 353.685 169.73 cv
353.649 169.815 353.571 169.874 353.479 169.884 cv
347.112 170.563 li
347.104 170.564 347.095 170.564 347.086 170.564 cv
cp
f
401.384 89.5908 mo
401.333 89.5908 401.281 89.5757 401.237 89.5435 cv
397.146 86.5879 396.11 82.4063 396.068 82.23 cv
396.036 82.0957 396.119 81.9609 396.254 81.9287 cv
396.396 81.8975 396.523 81.9805 396.555 82.1138 cv
396.564 82.1553 397.595 86.2954 401.53 89.1382 cv
401.643 89.2192 401.667 89.3755 401.587 89.4873 cv
401.537 89.5547 401.461 89.5908 401.384 89.5908 cv
cp
.407843 .462745 .666667 rgb
f
435.518 100.967 mo
304.84 100.967 li
303.6 100.967 302.595 99.9619 302.595 98.7222 cv
302.595 97.4829 303.6 96.478 304.84 96.478 cv
435.518 96.478 li
436.757 96.478 437.762 97.4829 437.762 98.7222 cv
437.762 99.9619 436.757 100.967 435.518 100.967 cv
cp
.25098 .313726 .498039 rgb
f
361.603 96.4326 mo
371.442 96.4326 li
371.442 83.5679 li
361.603 83.5679 li
361.603 96.4326 li
cp
.407843 .713726 .847059 rgb
f
361.603 83.5679 mo
361.603 83.8804 363.806 84.1333 366.522 84.1333 cv
369.239 84.1333 371.442 83.8804 371.442 83.5679 cv
371.442 83.2559 369.239 83.0024 366.522 83.0024 cv
363.806 83.0024 361.603 83.2559 361.603 83.5679 cv
cp
1 1 1 rgb
f
358.795 90.6841 mo
358.795 92.8237 360.055 94.5649 361.603 94.5649 cv
363.15 94.5649 364.411 92.8237 364.411 90.6841 cv
364.411 88.5439 363.15 86.8027 361.603 86.8027 cv
360.055 86.8027 358.795 88.5439 358.795 90.6841 cv
cp
357.926 90.6841 mo
357.926 88.064 359.574 85.9331 361.603 85.9331 cv
363.631 85.9331 365.28 88.064 365.28 90.6841 cv
365.28 93.3037 363.631 95.4346 361.603 95.4346 cv
359.574 95.4346 357.926 93.3037 357.926 90.6841 cv
cp
.407843 .713726 .847059 rgb
f
329.444 96.4326 mo
319.605 96.4326 li
319.605 83.5679 li
329.444 83.5679 li
329.444 96.4326 li
cp
.968627 .701961 .411765 rgb
f
329.444 83.5679 mo
329.444 83.8804 327.241 84.1333 324.524 84.1333 cv
321.807 84.1333 319.605 83.8804 319.605 83.5679 cv
319.605 83.2559 321.807 83.0024 324.524 83.0024 cv
327.241 83.0024 329.444 83.2559 329.444 83.5679 cv
cp
1 1 1 rgb
f
329.444 86.8027 mo
327.896 86.8027 326.636 88.5439 326.636 90.6841 cv
326.636 92.8237 327.896 94.5649 329.444 94.5649 cv
330.992 94.5649 332.251 92.8237 332.251 90.6841 cv
332.251 88.5439 330.992 86.8027 329.444 86.8027 cv
cp
329.444 95.4346 mo
327.416 95.4346 325.766 93.3037 325.766 90.6841 cv
325.766 88.064 327.416 85.9331 329.444 85.9331 cv
331.472 85.9331 333.121 88.064 333.121 90.6841 cv
333.121 93.3037 331.472 95.4346 329.444 95.4346 cv
cp
.968627 .701961 .411765 rgb
f
380.542 39.3892 mo
380.542 39.3892 379.663 39.5913 379.449 39.9146 cv
379.234 40.2378 379.268 41.5361 379.268 41.5361 cv
379.268 41.5361 369.856 41.6216 361.115 52.2681 cv
352.375 62.9146 350.56 68.5376 353.446 73.1211 cv
356.333 77.7051 370.554 76.4341 370.554 76.4341 cv
370.554 76.4341 374.701 80.8892 385.564 81.4009 cv
396.428 81.9126 402.195 76.9224 402.195 76.9224 cv
402.195 76.9224 420.32 72.7676 419.119 60.3345 cv
417.918 47.9019 399.858 42.0078 395.86 41.0996 cv
391.862 40.1914 388.881 40.3203 388.881 40.3203 cv
388.881 40.3203 388.721 39.6841 388.535 39.5718 cv
387.54 38.9697 380.542 39.3892 380.542 39.3892 cv
cp
.407843 .462745 .666667 rgb
f
380.617 28.6968 mo
380.617 28.6968 376.625 26.9058 376.255 30.0161 cv
375.826 33.6191 380.14 33.7305 380.14 33.7305 cv
380.617 28.6968 li
cp
.956863 .517647 .384314 rgb
f
378.559 31.9229 mo
378.472 31.9229 378.387 31.877 378.341 31.7949 cv
377.039 29.4688 li
376.972 29.3481 377.015 29.1958 377.135 29.1284 cv
377.253 29.0625 377.406 29.1021 377.475 29.2246 cv
378.776 31.5508 li
378.844 31.6714 378.801 31.8237 378.681 31.8911 cv
378.642 31.9126 378.601 31.9229 378.559 31.9229 cv
cp
0 0 0 rgb
f
378.157 31.2056 mo
377.009 31.2041 li
376.87 31.2041 376.759 31.0918 376.759 30.9536 cv
376.759 30.8159 376.871 30.7041 377.009 30.7041 cv
378.157 30.7056 li
378.296 30.7056 378.407 30.8179 378.407 30.9561 cv
378.407 31.0938 378.295 31.2056 378.157 31.2056 cv
cp
f
387.715 37.4111 mo
387.672 41.6367 li
387.672 41.6367 386.024 42.4858 383.985 42.4834 cv
381.231 42.48 380.333 40.8301 380.333 40.8301 cv
380.443 35.877 li
387.715 37.4111 li
cp
.956863 .517647 .384314 rgb
f
387.715 37.4048 mo
387.715 37.4048 386.334 40.8013 383.218 40.2773 cv
380.705 39.855 380.05 36.27 380.05 36.27 cv
387.715 37.4048 li
cp
0 0 0 rgb
f
379.401 25.2173 mo
379.401 25.2173 377.495 32.9185 379.647 36.3833 cv
381.956 40.0991 385.802 39.0728 387.254 37.9976 cv
389.212 36.5479 389.645 34.4951 389.645 34.4951 cv
389.645 34.4951 392.29 35.0723 393.215 32.9233 cv
394.186 30.6665 392.565 28.8013 391.24 28.6685 cv
389.914 28.5361 389.755 28.7754 389.755 28.7754 cv
390.188 26.354 li
390.188 26.354 382.28 17.2349 379.401 25.2173 cv
cp
.956863 .517647 .384314 rgb
f
390.131 32.2988 mo
390.059 32.2988 389.987 32.2681 389.938 32.208 cv
389.851 32.1016 389.865 31.9443 389.972 31.856 cv
392.052 30.1362 li
392.158 30.0479 392.316 30.0625 392.403 30.1699 cv
392.491 30.2764 392.477 30.4336 392.37 30.522 cv
390.29 32.2417 li
390.243 32.2803 390.188 32.2988 390.131 32.2988 cv
cp
0 0 0 rgb
f
392.018 32.6567 mo
391.964 32.6567 391.909 32.6396 391.864 32.604 cv
390.671 31.6729 li
390.562 31.5879 390.542 31.4307 390.627 31.3218 cv
390.713 31.2129 390.869 31.1924 390.978 31.2783 cv
392.171 32.2095 li
392.28 32.2944 392.3 32.4517 392.215 32.5605 cv
392.165 32.6235 392.092 32.6567 392.018 32.6567 cv
cp
f
386.176 30.0903 mo
386.019 30.0791 385.916 29.959 385.927 29.8213 cv
386.026 28.5215 li
386.037 28.3838 386.136 28.2778 386.295 28.291 cv
386.433 28.3018 386.535 28.4219 386.524 28.5596 cv
386.425 29.8594 li
386.415 29.9907 386.306 30.0903 386.176 30.0903 cv
cp
f
381.201 29.7266 mo
381.044 29.7153 380.941 29.5952 380.952 29.4575 cv
381.052 28.1577 li
381.062 28.0205 381.158 27.916 381.32 27.9272 cv
381.458 27.938 381.561 28.0581 381.55 28.1958 cv
381.45 29.4956 li
381.44 29.627 381.331 29.7266 381.201 29.7266 cv
cp
f
383.437 33.2197 mo
383.317 33.2197 383.212 33.1348 383.19 33.0137 cv
382.822 30.9502 383.508 29.2939 383.537 29.2246 cv
383.59 29.0977 383.737 29.0386 383.864 29.0913 cv
383.992 29.145 384.052 29.2915 383.998 29.4189 cv
383.991 29.4346 383.342 31.0142 383.683 32.9258 cv
383.707 33.0615 383.616 33.1914 383.48 33.2158 cv
383.466 33.2183 383.451 33.2197 383.437 33.2197 cv
cp
f
380.615 26.9858 mo
380.544 26.9858 380.474 26.9556 380.424 26.8965 cv
380.335 26.7905 380.349 26.6333 380.454 26.5444 cv
381.027 26.0645 381.962 26.0879 382.008 26.0898 cv
382.146 26.0947 382.253 26.21 382.249 26.3477 cv
382.244 26.4829 382.133 26.5898 381.999 26.5898 cv
381.994 26.5894 382.012 26.5894 381.966 26.5894 cv
381.826 26.5894 381.158 26.6069 380.776 26.9272 cv
380.729 26.9668 380.672 26.9858 380.615 26.9858 cv
cp
f
386.992 27.5908 mo
386.94 27.5908 386.888 27.5747 386.843 27.5415 cv
386.397 27.209 385.616 27.2749 385.61 27.2754 cv
385.477 27.2822 385.352 27.186 385.339 27.0488 cv
385.327 26.9116 385.428 26.79 385.565 26.7773 cv
385.604 26.7744 386.541 26.6943 387.142 27.1401 cv
387.252 27.2227 387.275 27.3789 387.193 27.4897 cv
387.144 27.5562 387.068 27.5908 386.992 27.5908 cv
cp
f
390.367 28.7993 mo
390.367 28.7993 389.489 31.1685 389.183 31.0659 cv
388.875 30.9629 389.464 27.2114 390.365 27.0762 cv
391.266 26.9409 390.367 28.7993 390.367 28.7993 cv
cp
f
376.535 70.4736 mo
376.535 70.4736 379.341 74.6626 375.611 76.1953 cv
371.881 77.7275 369.297 72.5854 369.297 72.5854 cv
376.535 70.4736 li
cp
.956863 .517647 .384314 rgb
f
389.4 58.4839 mo
389.4 58.4839 394.153 48.8359 394.825 49.5029 cv
395.498 50.1694 385.915 69.3892 385.915 69.3892 cv
384.271 68.1235 li
389.4 58.4839 li
cp
.968627 .701961 .411765 rgb
f
385.011 73.9585 mo
377.785 73.9585 li
374.245 73.9585 371.375 71.0884 371.375 67.5483 cv
371.375 62.5791 li
391.421 62.5791 li
391.421 67.5483 li
391.421 71.0884 388.551 73.9585 385.011 73.9585 cv
cp
.639216 .482353 .564706 rgb
f
390.054 62.5791 mo
390.054 62.9482 385.872 63.2476 380.715 63.2476 cv
375.557 63.2476 371.375 62.9482 371.375 62.5791 cv
371.375 62.2095 375.557 61.9102 380.715 61.9102 cv
385.872 61.9102 390.054 62.2095 390.054 62.5791 cv
cp
1 1 1 rgb
f
383.672 35.4741 mo
383.604 35.4741 383.562 35.4712 383.552 35.4707 cv
383.414 35.4604 383.312 35.3408 383.321 35.2036 cv
383.331 35.0659 383.454 34.9634 383.588 34.9717 cv
383.643 34.9731 384.895 35.0483 385.498 34.0366 cv
385.569 33.9175 385.723 33.8794 385.841 33.9497 cv
385.96 34.0205 385.998 34.1743 385.928 34.2925 cv
385.276 35.3828 384.06 35.4741 383.672 35.4741 cv
cp
0 0 0 rgb
f
389.995 28.4395 mo
389.995 28.4395 387.34 28.0347 385.644 26.5293 cv
384.211 25.2578 383.739 23.5483 383.739 23.5483 cv
383.739 23.5483 382.602 23.3237 380.896 24.2202 cv
379.191 25.1162 378.853 28.2168 378.853 28.2168 cv
378.853 28.2168 376.186 22.7437 377.751 20.9766 cv
379.317 19.2095 381.57 20.9175 381.57 20.9175 cv
381.57 20.9175 381.386 17.4448 386.064 19.1001 cv
390.742 20.7549 391.554 24.9453 391.554 24.9453 cv
391.554 24.9453 393.191 24.9126 393.291 26.4341 cv
393.391 27.9556 392.673 29.4468 392.673 29.4468 cv
392.673 29.4468 392.01 28.7266 390.895 29.0566 cv
389.778 29.3862 389.778 29.3862 389.778 29.3862 cv
389.995 28.4395 li
cp
f
380.542 39.3892 mo
380.542 39.3892 381.367 40.3677 383.498 40.6597 cv
385.628 40.9517 387.694 39.4346 387.694 39.4346 cv
388.789 42.1138 li
385.153 43.8115 li
379.503 42.6948 li
379.788 40.1377 li
380.542 39.3892 li
cp
.407843 .462745 .666667 rgb
f
370.02 63.8789 mo
369.977 63.8789 369.934 63.8682 369.895 63.8452 cv
369.841 63.8145 364.573 60.7876 359.964 60.999 cv
359.82 61.0166 359.709 60.8989 359.702 60.7612 cv
359.696 60.623 359.803 60.5063 359.94 60.5 cv
364.693 60.2852 369.925 63.2847 370.145 63.4126 cv
370.265 63.4819 370.305 63.6348 370.235 63.7544 cv
370.189 63.8345 370.105 63.8789 370.02 63.8789 cv
cp
1 1 1 rgb
f
395.892 66.4253 mo
395.892 66.4253 392.95 59.8208 392.47 59.3452 cv
391.988 58.8691 385.179 56.3774 384.679 56.9058 cv
384.145 57.4702 385.785 58.834 386.387 59.333 cv
386.988 59.8315 387.936 60.1655 387.936 60.1655 cv
387.936 60.1655 386.086 60.5361 385.676 61.25 cv
385.266 61.9639 386.595 62.4497 386.595 62.4497 cv
386.595 62.4497 384.898 62.9258 385.429 63.9165 cv
385.959 64.9077 387.678 65.4604 387.678 65.4604 cv
387.678 65.4604 388.401 69.6401 391.204 70.6787 cv
394.006 71.7168 395.329 71.4619 395.329 71.4619 cv
395.892 66.4253 li
cp
.956863 .517647 .384314 rgb
f
393.532 62.936 mo
393.532 62.936 394.935 58.0869 395.651 59.6396 cv
396.368 61.1924 395.892 66.4253 395.892 66.4253 cv
393.813 65.7075 li
393.532 62.936 li
cp
f
369.566 70.6294 mo
369.566 70.6294 366.283 71.9961 366.44 70.0469 cv
366.599 68.0981 371.804 64.3071 373.327 65.6421 cv
374.852 66.9766 369.566 70.6294 369.566 70.6294 cv
cp
f
371.321 72.9917 mo
371.321 72.9917 368.038 74.3579 368.195 72.4092 cv
368.354 70.4604 373.558 66.6694 375.082 68.0039 cv
376.606 69.3389 371.321 72.9917 371.321 72.9917 cv
cp
f
374.311 73.8823 mo
373.656 74.3418 372.9 74.6523 372.103 74.7134 cv
371.391 74.7681 370.706 74.6079 370.814 73.75 cv
371.032 72.0332 375.785 68.8901 377.079 70.1309 cv
378.044 71.0562 375.611 72.9688 374.311 73.8823 cv
cp
f
368.511 70.7173 mo
368.43 70.7173 368.351 70.6777 368.302 70.605 cv
368.226 70.4897 368.258 70.3345 368.373 70.2588 cv
372.47 67.5566 li
372.583 67.481 372.739 67.5122 372.816 67.6274 cv
372.893 67.7427 372.86 67.8979 372.745 67.9736 cv
368.648 70.6758 li
368.606 70.7041 368.559 70.7173 368.511 70.7173 cv
cp
0 0 0 rgb
f
370.682 72.9844 mo
370.601 72.9844 370.521 72.9448 370.473 72.8721 cv
370.396 72.7568 370.429 72.6016 370.544 72.5259 cv
374.64 69.8232 li
374.752 69.7471 374.908 69.7783 374.986 69.894 cv
375.063 70.0093 375.03 70.1646 374.915 70.2402 cv
370.819 72.9429 li
370.777 72.9712 370.729 72.9844 370.682 72.9844 cv
cp
f
374.245 41.1606 mo
374.245 41.1606 374.322 37.605 376.041 38.5371 cv
377.76 39.4688 379.124 45.7617 377.287 46.6167 cv
375.45 47.4717 374.245 41.1606 374.245 41.1606 cv
cp
.956863 .517647 .384314 rgb
f
371.375 41.8115 mo
371.375 41.8115 371.452 38.2559 373.171 39.1875 cv
374.89 40.1196 376.255 46.4121 374.418 47.2671 cv
372.581 48.1221 371.375 41.8115 371.375 41.8115 cv
cp
f
369.353 44.1855 mo
369.196 43.4014 369.218 42.5845 369.484 41.8306 cv
369.723 41.1572 370.146 40.5952 370.887 41.0415 cv
372.368 41.9341 373.323 47.5518 371.665 48.2339 cv
370.43 48.7427 369.663 45.7446 369.353 44.1855 cv
cp
f
375.636 45.3501 mo
375.516 45.3501 375.41 45.2637 375.39 45.1416 cv
374.573 40.3022 li
374.55 40.166 374.642 40.0371 374.777 40.0142 cv
374.922 39.9897 375.043 40.0835 375.065 40.2192 cv
375.882 45.0586 li
375.905 45.1948 375.813 45.3237 375.678 45.3467 cv
375.663 45.3491 375.649 45.3501 375.636 45.3501 cv
cp
0 0 0 rgb
f
372.686 46.4194 mo
372.565 46.4194 372.46 46.333 372.439 46.2109 cv
371.623 41.3716 li
371.6 41.2354 371.691 41.1064 371.827 41.0835 cv
371.969 41.0601 372.092 41.1523 372.115 41.2886 cv
372.932 46.1279 li
372.955 46.2642 372.863 46.3931 372.728 46.416 cv
372.713 46.4185 372.699 46.4194 372.686 46.4194 cv
cp
f
391.193 60.7793 mo
391.166 60.7778 387.908 60.4141 387.908 60.4141 cv
387.771 60.3984 387.672 60.2749 387.688 60.1377 cv
387.702 60.0005 387.828 59.8975 387.963 59.917 cv
391.221 60.2808 li
391.358 60.2964 391.457 60.4199 391.441 60.5571 cv
391.428 60.6851 391.319 60.7793 391.193 60.7793 cv
cp
f
389.765 62.9585 mo
389.744 62.9575 386.574 62.6987 386.574 62.6987 cv
386.437 62.6875 386.334 62.5669 386.346 62.4292 cv
386.357 62.292 386.484 62.1953 386.615 62.2007 cv
389.785 62.4595 li
389.923 62.4707 390.025 62.5913 390.014 62.729 cv
390.003 62.8594 389.894 62.9585 389.765 62.9585 cv
cp
f
395.02 65.5449 mo
394.916 65.5449 394.82 65.481 394.784 65.3779 cv
393.608 62.0464 li
393.563 61.9165 393.63 61.7734 393.761 61.7275 cv
393.891 61.6816 394.033 61.75 394.079 61.8804 cv
395.255 65.2119 li
395.301 65.3418 395.233 65.4849 395.103 65.5308 cv
395.075 65.5405 395.047 65.5449 395.02 65.5449 cv
cp
f
396.812 63.2632 mo
396.748 63.2632 396.684 63.2388 396.635 63.1899 cv
396.537 63.0923 396.537 62.9341 396.635 62.8364 cv
396.686 62.7852 401.857 57.6626 409.103 55.4141 cv
409.235 55.373 409.374 55.4473 409.415 55.5786 cv
409.456 55.7104 409.383 55.8506 409.251 55.8916 cv
402.128 58.1025 397.039 63.1392 396.988 63.1899 cv
396.939 63.2388 396.876 63.2632 396.812 63.2632 cv
cp
1 1 1 rgb
f
404.875 54.3071 mo
403.811 54.3071 402.903 56.4888 402.436 58.001 cv
403.926 56.4556 405.243 54.7842 405.084 54.3628 cv
405.071 54.3286 404.988 54.312 404.915 54.3081 cv
404.901 54.3076 404.888 54.3071 404.875 54.3071 cv
cp
401.94 59.1035 mo
401.898 59.1035 401.855 59.0928 401.817 59.0713 cv
401.721 59.0161 401.672 58.9043 401.697 58.7959 cv
401.82 58.2744 402.975 53.6934 404.94 53.8091 cv
405.336 53.8296 405.491 54.0254 405.552 54.1865 cv
405.934 55.1973 403.018 58.1514 402.115 59.0322 cv
402.067 59.0791 402.004 59.1035 401.94 59.1035 cv
cp
f
362.31 58.4307 mo
362.133 58.4307 361.971 58.5083 361.808 58.6699 cv
361.57 58.9033 361.58 59.0708 361.607 59.1763 cv
361.774 59.812 363.312 60.5005 364.52 60.8911 cv
364.059 59.9824 363.205 58.5923 362.436 58.4434 cv
362.393 58.4351 362.351 58.4307 362.31 58.4307 cv
cp
364.985 61.5415 mo
364.964 61.5415 364.941 61.5386 364.92 61.5327 cv
364.565 61.4365 361.452 60.5557 361.124 59.3032 cv
361.062 59.063 361.067 58.6968 361.456 58.3135 cv
361.772 58.0029 362.143 57.876 362.531 57.9526 cv
363.89 58.2163 365.083 60.8882 365.215 61.1919 cv
365.253 61.2803 365.237 61.3823 365.174 61.4551 cv
365.126 61.5107 365.057 61.5415 364.985 61.5415 cv
cp
f
401.637 77.0986 mo
397.674 76.6328 396.268 75.5503 396.21 75.5044 cv
396.103 75.4189 396.084 75.2627 396.169 75.1548 cv
396.252 75.0454 396.41 75.0259 396.52 75.1118 cv
396.533 75.1221 397.898 76.1563 401.666 76.6006 cv
401.803 76.6167 401.901 76.7407 401.885 76.8779 cv
401.87 77.0049 401.762 77.0986 401.637 77.0986 cv
cp
f
382.984 43.7954 mo
380.301 43.7954 379.063 41.6836 379.051 41.6597 cv
378.982 41.54 379.023 41.3877 379.144 41.3193 cv
379.263 41.2515 379.416 41.292 379.484 41.4121 cv
379.541 41.5093 380.878 43.7773 383.92 43.2061 cv
384.059 43.1777 384.187 43.2705 384.212 43.4058 cv
384.237 43.5415 384.147 43.6719 384.012 43.6973 cv
383.648 43.7651 383.306 43.7954 382.984 43.7954 cv
cp
f
314.145 182.714 mo
312.489 182.714 311.146 181.372 311.146 179.716 cv
311.146 99.0928 li
317.143 99.0928 li
317.143 179.716 li
317.143 181.372 315.8 182.714 314.145 182.714 cv
cp
.25098 .313726 .498039 rgb
f
426.555 182.714 mo
424.898 182.714 423.557 181.372 423.557 179.716 cv
423.557 99.0928 li
429.553 99.0928 li
429.553 179.716 li
429.553 181.372 428.21 182.714 426.555 182.714 cv
cp
f
354.686 48.6123 mo
354.321 49.9136 353.91 51.8862 354.365 52.5557 cv
354.45 52.6807 354.562 52.7427 354.716 52.7505 cv
354.813 52.7495 354.887 52.7256 354.947 52.6484 cv
355.362 52.125 355.06 50.1528 354.686 48.6123 cv
cp
354.736 53.251 mo
354.38 53.2344 354.125 53.0913 353.951 52.8364 cv
353.139 51.6406 354.328 48.0298 354.467 47.6221 cv
354.501 47.5176 354.604 47.4443 354.709 47.4521 cv
354.818 47.4546 354.913 47.5278 354.943 47.6323 cv
355.069 48.0688 356.156 51.9272 355.34 52.9585 cv
355.188 53.1504 354.98 53.251 354.736 53.251 cv
cp
.407843 .462745 .666667 rgb
f
407.102 83.6133 mo
407.102 85.7637 405.358 87.5073 403.208 87.5073 cv
401.058 87.5073 399.314 85.7637 399.314 83.6133 cv
399.314 81.4629 401.058 79.7197 403.208 79.7197 cv
405.358 79.7197 407.102 81.4629 407.102 83.6133 cv
cp
.639216 .482353 .564706 rgb
f
413.186 81.4829 mo
413.186 83.6333 411.442 85.377 409.291 85.377 cv
407.141 85.377 405.397 83.6333 405.397 81.4829 cv
405.397 79.3325 407.141 77.5894 409.291 77.5894 cv
411.442 77.5894 413.186 79.3325 413.186 81.4829 cv
cp
.698039 .545098 .631373 rgb
f
419.643 84.1787 mo
419.643 86.3291 417.899 88.0723 415.749 88.0723 cv
413.599 88.0723 411.855 86.3291 411.855 84.1787 cv
411.855 82.0283 413.599 80.2847 415.749 80.2847 cv
417.899 80.2847 419.643 82.0283 419.643 84.1787 cv
cp
.639216 .482353 .564706 rgb
f
412.646 96.4326 mo
406.312 96.4326 li
401.546 96.4326 397.684 92.5693 397.684 87.8042 cv
397.684 85.0308 li
397.684 84.5352 398.085 84.1333 398.581 84.1333 cv
420.376 84.1333 li
420.872 84.1333 421.273 84.5352 421.273 85.0308 cv
421.273 87.8042 li
421.273 92.5693 417.411 96.4326 412.646 96.4326 cv
cp
.572549 .705882 .917647 rgb
f
560.561 31.6118 mo
560.561 31.6118 564.465 26.7822 562.826 24.8657 cv
561.188 22.9497 558.654 24.8657 558.654 24.8657 cv
558.654 24.8657 558.515 22.5981 555.988 22.8325 cv
553.462 23.0664 551.939 25.7588 551.939 25.7588 cv
551.939 25.7588 549.717 23.5347 548.194 25.7588 cv
546.673 27.9829 547.727 31.6118 547.727 31.6118 cv
547.727 31.6118 545.971 31.3516 546.438 33.4131 cv
546.907 35.4746 549.669 37.5991 549.669 37.5991 cv
560.561 31.6118 li
cp
0 0 0 rgb
f
588.15 31.8638 mo
588.15 31.8638 593.02 29.1499 597.808 33.9639 cv
602.595 38.7778 604.529 76.8604 599.396 77.4858 cv
594.262 78.1113 586.095 73.4443 586.095 73.4443 cv
588.15 31.8638 li
cp
f
566.146 45.8765 mo
566.146 45.8765 571.818 49.9912 574.887 51.0483 cv
579.506 52.6392 565.429 55.0903 565.429 55.0903 cv
566.146 45.8765 li
cp
.407843 .713726 .847059 rgb
f
578.069 48.9902 mo
578.069 48.9902 568.635 52.9443 563.54 52.3335 cv
556.631 51.5044 566.873 70.6113 566.873 70.6113 cv
574.633 70.1113 li
578.069 48.9902 li
cp
.25098 .313726 .498039 rgb
f
556.813 154.607 mo
556.813 154.607 563.278 159.769 563.156 160.566 cv
563.035 161.362 566.146 171.663 566.146 171.663 cv
550.65 167.465 li
550.65 154.607 li
556.813 154.607 li
cp
.360784 .411765 .647059 rgb
f
540.507 157.05 mo
540.507 164.564 li
555.257 163.756 li
555.257 156.576 li
540.507 157.05 li
cp
1 1 1 rgb
f
566.625 77.1631 mo
566.625 77.1631 581.105 102.963 581.225 113.135 cv
581.345 123.307 561.439 158.548 561.439 158.548 cv
561.439 158.548 554.658 159.388 546.281 159.119 cv
537.904 158.849 536.588 157.892 536.588 157.892 cv
536.588 157.892 538.024 85.5151 541.375 78.7417 cv
544.726 71.9688 566.625 77.1631 566.625 77.1631 cv
cp
.639216 .482353 .564706 rgb
f
567.511 151.799 mo
569.667 164.412 li
577.082 169.049 li
583.929 166.452 li
582.833 151.799 li
567.511 151.799 li
cp
.94902 .478431 .372549 rgb
f
560.061 131.474 mo
559.923 131.474 559.812 131.362 559.811 131.225 cv
559.676 94.2456 li
559.676 94.1553 559.724 94.0718 559.803 94.0273 cv
565.19 90.9722 li
565.31 90.9028 565.463 90.9453 565.531 91.0659 cv
565.599 91.186 565.557 91.3389 565.437 91.4067 cv
560.177 94.3901 li
560.311 131.223 li
560.312 131.361 560.199 131.473 560.062 131.474 cv
560.061 131.474 li
cp
1 1 1 rgb
f
586.49 167.106 mo
581.997 175.688 li
579.154 181.124 li
579.154 181.124 551.117 182.189 549.696 181.124 cv
548.274 180.06 548.274 177.046 549.696 175.8 cv
551.117 174.56 567.798 165.509 567.798 165.509 cv
567.798 165.509 567.798 163.022 568.836 162.783 cv
569.88 162.543 576.79 165.509 576.79 165.509 cv
584.856 162.772 li
586.49 167.106 li
cp
.207843 .270588 .427451 rgb
f
581.997 175.688 mo
579.154 181.124 li
579.154 181.124 551.117 182.189 549.696 181.124 cv
548.274 180.06 548.274 177.046 549.696 175.8 cv
549.696 175.8 568.938 177.222 579.639 175.8 cv
580.65 175.667 581.422 175.635 581.997 175.688 cv
cp
.937255 .643137 .34902 rgb
f
582.222 153.345 mo
583.929 166.452 li
596.563 166.452 li
597.095 153.345 li
582.222 153.345 li
cp
.956863 .517647 .384314 rgb
f
600.429 177.441 mo
600.429 178.926 599.52 180.98 596.319 181.664 cv
593.124 182.352 576.409 181.664 575.891 181.094 cv
575.613 180.796 575.438 179.583 575.336 178.495 cv
575.223 177.339 575.51 176.172 576.147 175.202 cv
582.989 164.769 li
582.989 164.769 584.874 162.833 588.542 163.171 cv
592.21 163.516 594.049 164.769 594.049 164.769 cv
594.049 164.769 595.749 163.048 596.551 163.624 cv
597.213 164.101 599.442 172.269 600.188 175.89 cv
600.341 176.635 600.429 177.19 600.429 177.441 cv
cp
.25098 .313726 .498039 rgb
f
568.727 81.2324 mo
568.727 81.2324 563.932 98.4277 561.883 112.982 cv
559.834 127.537 558.685 151.153 560.018 152.031 cv
561.35 152.909 576.988 153.988 576.988 153.988 cv
576.988 153.988 582.259 155.986 591.361 155.742 cv
597.967 155.564 603.339 154.017 603.339 154.017 cv
603.339 154.017 600.075 89.5728 595.095 79.5894 cv
591.197 71.7764 568.727 81.2324 568.727 81.2324 cv
cp
.572549 .705882 .917647 rgb
f
568.635 78.272 mo
568.635 81.9985 li
568.635 81.9985 578.078 84.1621 585.828 83.606 cv
593.579 83.0493 596.477 81.689 596.477 81.689 cv
593.095 66.124 li
588.434 48.5508 li
578.373 50.1665 li
573.464 61.1665 li
568.635 78.272 li
cp
.25098 .313726 .498039 rgb
f
576.987 154.238 mo
576.873 154.238 576.77 154.159 576.743 154.043 cv
573.478 139.458 573.88 95.7222 573.912 92.6704 cv
568.851 90.418 li
568.725 90.3618 568.668 90.2139 568.724 90.0879 cv
568.78 89.9614 568.928 89.9058 569.054 89.9609 cv
574.266 92.2803 li
574.357 92.3208 574.415 92.4121 574.414 92.5117 cv
574.408 92.9746 573.876 138.951 577.231 153.934 cv
577.262 154.068 577.177 154.202 577.042 154.232 cv
577.023 154.236 577.005 154.238 576.987 154.238 cv
cp
f
592.534 149.74 mo
585.758 149.74 579.693 148.662 579.602 148.645 cv
579.466 148.62 579.376 148.49 579.4 148.354 cv
579.425 148.219 579.549 148.129 579.691 148.153 cv
579.826 148.177 593.383 150.588 602.53 148.157 cv
602.664 148.123 602.802 148.201 602.836 148.335 cv
602.872 148.468 602.792 148.605 602.659 148.641 cv
599.555 149.465 595.953 149.74 592.534 149.74 cv
cp
f
575.073 149.053 mo
568.871 149.053 562.052 147.811 561.98 147.797 cv
561.845 147.772 561.755 147.642 561.779 147.506 cv
561.805 147.37 561.936 147.281 562.07 147.305 cv
562.147 147.319 569.702 148.7 576.104 148.541 cv
576.255 148.549 576.357 148.647 576.36 148.785 cv
576.363 148.923 576.255 149.038 576.116 149.041 cv
575.771 149.049 575.424 149.053 575.073 149.053 cv
cp
f
600.429 177.441 mo
600.429 178.926 599.52 180.98 596.319 181.664 cv
593.124 182.352 576.409 181.664 575.891 181.094 cv
575.613 180.796 575.438 179.583 575.336 178.495 cv
575.223 177.339 575.51 176.172 576.147 175.202 cv
576.147 175.202 577.216 176.907 587.428 177.262 cv
593.977 177.488 598.086 176.573 600.188 175.89 cv
600.341 176.635 600.429 177.19 600.429 177.441 cv
cp
.968627 .701961 .411765 rgb
f
591.542 171.165 mo
591.519 171.165 591.495 171.162 591.473 171.155 cv
587.814 170.092 583.411 171.147 583.367 171.157 cv
583.229 171.187 583.098 171.107 583.064 170.974 cv
583.032 170.84 583.114 170.705 583.248 170.672 cv
583.434 170.627 587.825 169.575 591.611 170.674 cv
591.744 170.713 591.82 170.852 591.782 170.984 cv
591.75 171.094 591.65 171.165 591.542 171.165 cv
cp
1 1 1 rgb
f
592.177 168.777 mo
592.153 168.777 592.13 168.774 592.107 168.768 cv
588.449 167.704 584.046 168.76 584.002 168.77 cv
583.861 168.801 583.732 168.72 583.699 168.587 cv
583.667 168.453 583.749 168.317 583.883 168.285 cv
584.067 168.239 588.461 167.188 592.246 168.287 cv
592.379 168.326 592.455 168.464 592.417 168.597 cv
592.385 168.707 592.285 168.777 592.177 168.777 cv
cp
f
567.282 169.84 mo
560.505 169.84 li
560.367 169.84 560.255 169.729 560.255 169.59 cv
560.255 169.452 560.367 169.34 560.505 169.34 cv
567.282 169.34 li
567.42 169.34 567.532 169.452 567.532 169.59 cv
567.532 169.729 567.42 169.84 567.282 169.84 cv
cp
f
569.289 167.356 mo
569.264 167.354 565.547 166.971 565.547 166.971 cv
565.409 166.957 565.31 166.834 565.323 166.696 cv
565.338 166.56 565.445 166.458 565.598 166.474 cv
569.314 166.857 li
569.452 166.872 569.552 166.994 569.538 167.132 cv
569.524 167.26 569.416 167.356 569.289 167.356 cv
cp
f
553.462 43.2573 mo
553.462 43.2573 549.518 43.5889 545.688 47.0596 cv
541.859 50.5298 540.896 80.2256 540.896 80.2256 cv
540.896 80.2256 550.487 81.8291 557.684 81.5835 cv
564.672 81.3447 569.607 78.8335 569.607 78.8335 cv
569.607 78.8335 570.623 53.9956 567.344 47.0732 cv
565.692 43.5884 553.462 43.2573 553.462 43.2573 cv
cp
.407843 .713726 .847059 rgb
f
551.944 39.1445 mo
551.474 44.6929 li
551.474 44.6929 552.34 46.373 555.563 46.9121 cv
557.965 47.3135 558.86 46.8389 558.86 46.8389 cv
558.762 44 li
558.661 41.2314 li
552.909 39.4453 li
551.944 39.1445 li
cp
1 .670588 .580392 rgb
f
552.909 39.4453 mo
552.91 39.5977 552.953 39.7817 553.025 39.9941 cv
554.032 42.8711 557.376 43.7568 558.762 44 cv
558.661 41.2314 li
552.909 39.4453 li
cp
0 0 0 rgb
f
560.971 28.6885 mo
560.971 28.6885 563.293 35.8921 561.817 39.6602 cv
560.342 43.4282 556.871 42.4634 554.833 41.502 cv
552.794 40.54 551.943 39.1455 551.943 39.1455 cv
551.943 39.1455 549.902 39.6167 548.766 37.6484 cv
547.63 35.6802 548.654 33.6533 549.83 33.2832 cv
551.006 32.9136 552.265 33.8618 552.265 33.8618 cv
551.415 31.751 li
551.415 31.751 556.858 22.0024 560.971 28.6885 cv
cp
1 .670588 .580392 rgb
f
551.824 36.8691 mo
551.767 36.8691 551.709 36.8496 551.662 36.8091 cv
549.314 34.7998 li
549.209 34.71 549.197 34.5522 549.287 34.4473 cv
549.376 34.3423 549.535 34.3311 549.639 34.4199 cv
551.986 36.4292 li
552.092 36.519 552.104 36.6768 552.014 36.7817 cv
551.965 36.8394 551.895 36.8691 551.824 36.8691 cv
cp
0 0 0 rgb
f
549.549 36.645 mo
549.429 36.645 549.323 36.5586 549.303 36.4365 cv
549.279 36.3008 549.371 36.1714 549.507 36.1484 cv
551.188 35.8643 li
551.332 35.8423 551.454 35.9336 551.477 36.0693 cv
551.5 36.2051 551.408 36.3345 551.272 36.3574 cv
549.591 36.6416 li
549.576 36.644 549.563 36.645 549.549 36.645 cv
cp
f
556.551 31.8418 mo
556.5 31.8418 556.449 31.8267 556.405 31.7949 cv
556.293 31.7144 556.268 31.5586 556.348 31.4463 cv
557.076 30.4282 558.105 30.5723 558.551 30.792 cv
558.674 30.8535 558.725 31.0034 558.663 31.127 cv
558.603 31.252 558.454 31.3008 558.33 31.2407 cv
558.294 31.2231 557.416 30.814 556.754 31.7373 cv
556.705 31.8057 556.629 31.8418 556.551 31.8418 cv
cp
f
561.497 31.4458 mo
561.434 31.4458 561.371 31.4219 561.322 31.3745 cv
560.865 30.9263 560.582 31.1265 560.529 31.1714 cv
560.425 31.2612 560.269 31.251 560.178 31.1523 cv
560.087 31.0513 560.091 30.8979 560.189 30.8047 cv
560.412 30.5933 561.011 30.3677 561.672 31.0171 cv
561.771 31.1138 561.772 31.272 561.676 31.3706 cv
561.627 31.4209 561.562 31.4458 561.497 31.4458 cv
cp
f
560.116 36.645 mo
560.086 36.645 560.055 36.6396 560.025 36.6279 cv
559.896 36.5771 559.833 36.4321 559.884 36.3037 cv
560.608 34.4556 559.365 33.7822 559.312 33.7544 cv
559.189 33.6909 559.142 33.5405 559.204 33.4185 cv
559.267 33.2959 559.413 33.2461 559.539 33.3091 cv
559.556 33.3179 561.244 34.2046 560.349 36.4863 cv
560.311 36.585 560.216 36.645 560.116 36.645 cv
cp
f
561.247 34.1094 mo
561.129 34.1094 561.023 34.0254 561.001 33.9048 cv
560.761 32.603 li
560.736 32.4673 560.825 32.3369 560.962 32.3115 cv
561.094 32.2871 561.228 32.3765 561.253 32.5122 cv
561.493 33.814 li
561.518 33.9497 561.429 34.0801 561.292 34.1055 cv
561.277 34.1079 561.262 34.1094 561.247 34.1094 cv
cp
f
557.849 34.1094 mo
557.73 34.1094 557.625 34.0249 557.603 33.9048 cv
557.363 32.603 li
557.339 32.4668 557.429 32.3369 557.564 32.3115 cv
557.698 32.2871 557.83 32.377 557.855 32.5122 cv
558.095 33.814 li
558.119 33.9502 558.029 34.0801 557.894 34.1055 cv
557.879 34.1079 557.863 34.1094 557.849 34.1094 cv
cp
f
558.551 38.7378 mo
558.436 38.7378 557.067 38.7095 556.579 37.3896 cv
556.531 37.2598 556.598 37.1162 556.727 37.0684 cv
556.853 37.0195 557 37.0859 557.048 37.2158 cv
557.433 38.2549 558.564 38.2393 558.551 38.2378 cv
558.69 38.2378 558.802 38.3481 558.804 38.4849 cv
558.806 38.623 558.694 38.7363 558.557 38.7378 cv
558.555 38.7378 558.553 38.7378 558.551 38.7378 cv
cp
f
557.074 47.3071 mo
553.591 47.3071 551.316 44.8916 551.29 44.8628 cv
551.196 44.7612 551.203 44.6035 551.304 44.5098 cv
551.407 44.4165 551.564 44.4233 551.657 44.5239 cv
551.686 44.5547 554.58 47.626 558.801 46.5962 cv
558.938 46.5625 559.07 46.6455 559.104 46.7798 cv
559.136 46.9136 559.054 47.0488 558.92 47.0815 cv
558.274 47.2393 557.657 47.3071 557.074 47.3071 cv
cp
.407843 .462745 .666667 rgb
f
542.104 88.9658 mo
541.982 88.9658 541.876 88.8774 541.857 88.7539 cv
541.837 88.6172 541.93 88.4897 542.066 88.4688 cv
547.521 87.6309 547.599 83.3809 547.6 83.2002 cv
547.6 83.0625 547.712 82.9507 547.85 82.9507 cv
547.988 82.9512 548.1 83.063 548.1 83.2007 cv
548.1 83.249 548.031 88.0586 542.143 88.9629 cv
542.13 88.9648 542.117 88.9658 542.104 88.9658 cv
cp
1 1 1 rgb
f
539.196 161.257 mo
539.196 161.257 556.292 160.521 556.415 161.001 cv
556.539 161.482 556.909 164.758 556.909 164.758 cv
573.47 173.608 li
573.47 173.608 579.154 175.231 579.278 177.99 cv
579.401 180.749 574.829 181.111 573.346 181.528 cv
571.863 181.946 542.874 181.572 539.938 181.098 cv
537.714 180.739 539.196 161.257 539.196 161.257 cv
cp
.407843 .462745 .666667 rgb
f
560.034 171.913 mo
559.928 171.913 559.833 171.846 559.798 171.745 cv
559.762 171.64 559.799 171.523 559.89 171.459 cv
562.271 169.769 li
555.184 170.337 li
555.092 170.346 554.975 170.284 554.933 170.183 cv
554.892 170.082 554.92 169.966 555.003 169.896 cv
558.745 166.753 li
558.85 166.664 559.008 166.678 559.098 166.784 cv
559.187 166.89 559.173 167.047 559.067 167.136 cv
555.924 169.776 li
563.137 169.198 li
563.235 169.192 563.353 169.256 563.392 169.362 cv
563.43 169.468 563.393 169.586 563.301 169.651 cv
560.876 171.373 li
568.127 171.024 li
568.248 171.007 568.382 171.124 568.389 171.262 cv
568.395 171.4 568.289 171.517 568.15 171.523 cv
560.046 171.913 li
560.042 171.913 560.038 171.913 560.034 171.913 cv
cp
.25098 .313726 .498039 rgb
f
561.367 29.7031 mo
561.367 29.7031 560.791 28.6001 559.432 28.5728 cv
558.073 28.5449 557.268 29.4912 557.268 29.4912 cv
557.268 29.4912 557.245 30.9307 556.146 32.2085 cv
554.703 33.8848 552.909 34.3579 552.909 34.3579 cv
551.347 33.313 li
550.39 31.3418 li
554.322 27.2163 li
559.376 24.6353 li
561.901 26.9912 li
561.367 29.7031 li
cp
0 0 0 rgb
f
580.643 48.5166 mo
580.643 48.5166 575.207 48.3335 572.8 54.3335 cv
570.393 60.3335 568.635 81.9985 568.635 81.9985 cv
578.595 79.1665 li
579.227 60.7505 li
580.643 48.5166 li
cp
.25098 .313726 .498039 rgb
f
582.918 76.4648 mo
582.918 76.4648 586.095 74.5698 586.86 74.5659 cv
588.434 74.5576 592.26 74.3237 592.886 75.6245 cv
593.512 76.9248 589.79 76.957 589.79 76.957 cv
589.79 76.957 596.377 78.0688 597.295 79.0996 cv
598.212 80.1304 592.861 80.5425 592.861 80.5425 cv
592.861 80.5425 599.208 80.7998 598.685 81.939 cv
598.161 83.0781 594.675 84.3057 594.675 84.3057 cv
594.675 84.3057 598.277 83.5747 596.67 85.1353 cv
595.063 86.6958 586.741 87.5635 580.365 83.1592 cv
573.988 78.7554 582.918 76.4648 582.918 76.4648 cv
cp
1 .670588 .580392 rgb
f
552.909 70.7866 mo
552.909 73.6665 558.081 77.0981 566.196 80.5981 cv
574.312 84.0981 584.268 82.5742 584.268 82.5742 cv
586.095 75.0654 li
586.095 75.0654 574.429 71.5 566.095 64.3335 cv
557.762 57.1665 552.909 70.7866 552.909 70.7866 cv
cp
f
549.477 44.501 mo
549.477 44.501 539.861 46.3242 540.012 55.0903 cv
540.18 64.8506 545.688 70.7866 550.65 75.0654 cv
553.664 77.6636 558.554 78.8335 558.554 78.8335 cv
566.146 61.9277 li
549.477 44.501 li
cp
.407843 .713726 .847059 rgb
f
599.162 78.9858 mo
599.162 78.9858 602.719 79.021 601.807 80.751 cv
600.895 82.4805 594.619 83.9189 593.742 82.0923 cv
592.866 80.2656 599.162 78.9858 599.162 78.9858 cv
cp
1 .670588 .580392 rgb
f
598.478 76.124 mo
598.478 76.124 602.034 76.1592 601.122 77.8892 cv
600.211 79.6187 593.935 81.0571 593.058 79.2305 cv
592.182 77.4038 598.478 76.124 598.478 76.124 cv
cp
f
596.08 74.1294 mo
596.862 73.9644 597.68 73.9761 598.437 74.2339 cv
599.112 74.4634 599.68 74.8799 599.242 75.6265 cv
598.366 77.1191 592.761 78.1392 592.059 76.4893 cv
591.536 75.2593 594.524 74.458 596.08 74.1294 cv
cp
f
595.239 80.6733 mo
595.12 80.6733 595.015 80.5889 594.993 80.4678 cv
594.969 80.332 595.059 80.2021 595.194 80.1772 cv
600.023 79.3037 li
600.166 79.2813 600.29 79.3691 600.314 79.5054 cv
600.339 79.6411 600.249 79.771 600.113 79.7959 cv
595.284 80.6694 li
595.269 80.6719 595.254 80.6733 595.239 80.6733 cv
cp
0 0 0 rgb
f
594.135 77.7358 mo
594.016 77.7358 593.91 77.6514 593.889 77.5303 cv
593.864 77.3945 593.954 77.2642 594.09 77.2397 cv
598.92 76.3662 li
599.06 76.3428 599.187 76.4321 599.211 76.5679 cv
599.235 76.7036 599.146 76.8335 599.01 76.8584 cv
594.18 77.7319 li
594.164 77.7344 594.149 77.7358 594.135 77.7358 cv
cp
f
577.961 40.7412 mo
577.961 40.7412 576.029 38.6069 576.586 35.2998 cv
576.963 33.0581 577.961 32.3325 577.961 32.3325 cv
577.961 32.3325 576.44 29.272 580.965 29.4575 cv
585.488 29.6431 588.15 31.8638 588.15 31.8638 cv
588.15 31.8638 590.218 30.8486 591.146 33.2598 cv
592.073 35.6709 591.146 39.228 591.146 39.228 cv
577.961 40.7412 li
cp
f
587.892 44.4688 mo
587.753 49.9912 li
587.753 49.9912 586.718 51.5537 583.48 51.7354 cv
581.068 51.8706 580.338 50.6152 580.338 50.6152 cv
581.042 45.7974 li
586.907 44.6606 li
587.892 44.4688 li
cp
.956863 .517647 .384314 rgb
f
587.892 44.1318 mo
587.874 44.2822 587.813 44.459 587.718 44.6606 cv
586.413 47.3882 582.036 48.4272 580.643 48.5166 cv
581.042 45.7974 li
587.892 44.1318 li
cp
0 0 0 rgb
f
580.126 33.1792 mo
580.126 33.1792 577.055 40.0303 578.101 43.9058 cv
579.146 47.7813 582.674 47.207 584.788 46.48 cv
586.902 45.7529 587.893 44.4702 587.893 44.4702 cv
587.893 44.4702 589.854 45.1563 591.188 43.3384 cv
592.522 41.521 591.731 39.4116 590.612 38.9189 cv
589.493 38.4268 588.149 39.2251 588.149 39.2251 cv
589.216 37.2358 li
589.216 37.2358 584.906 27.0327 580.126 33.1792 cv
cp
.956863 .517647 .384314 rgb
f
588.149 39.2251 mo
588.149 39.2251 585.19 39.8223 583.136 36.5298 cv
581.08 33.2373 581.269 31.8853 581.269 31.8853 cv
579.221 35.2842 li
579.221 35.2842 578.764 32.9277 579.706 31.4253 cv
580.648 29.9229 581.627 30.2344 581.627 30.2344 cv
588.15 31.8638 li
589.868 37.0928 li
588.149 39.2251 li
cp
0 0 0 rgb
f
580.36 41.9546 mo
580.253 41.9546 580.154 41.8853 580.121 41.7778 cv
579.667 40.291 580.716 38.7861 580.761 38.7227 cv
580.841 38.6099 580.996 38.5845 581.109 38.6631 cv
581.222 38.7427 581.248 38.8989 581.169 39.0112 cv
581.159 39.0249 580.218 40.3823 580.6 41.6313 cv
580.64 41.7637 580.565 41.9033 580.434 41.9438 cv
580.409 41.9512 580.385 41.9546 580.36 41.9546 cv
cp
f
588.433 42.4839 mo
588.371 42.4839 588.309 42.4609 588.261 42.415 cv
588.16 42.3203 588.156 42.1621 588.251 42.0615 cv
590.126 40.0864 li
590.223 39.9873 590.38 39.9824 590.479 40.0776 cv
590.58 40.1724 590.584 40.3306 590.489 40.4312 cv
588.614 42.4063 li
588.564 42.458 588.499 42.4839 588.433 42.4839 cv
cp
f
590.413 41.959 mo
590.375 41.9561 589.083 41.7563 589.083 41.7563 cv
588.946 41.7354 588.853 41.6074 588.874 41.4712 cv
588.896 41.3345 589.028 41.2417 589.159 41.2622 cv
590.451 41.4619 li
590.588 41.4829 590.682 41.6108 590.66 41.7471 cv
590.641 41.8706 590.534 41.959 590.413 41.959 cv
cp
f
562.979 65.4546 mo
562.979 65.4546 563.636 61.9253 562.814 59.8745 cv
561.993 57.8232 558.133 54.1763 557.898 55.3008 cv
557.664 56.4248 558.764 59.9497 558.764 59.9497 cv
559.769 66.4111 li
562.979 65.4546 li
cp
.956863 .517647 .384314 rgb
f
560.486 59.2905 mo
560.486 59.2905 557.075 55.1528 555.931 55.0903 cv
554.786 55.0273 549.79 56.9448 549.876 58.0796 cv
549.962 59.2144 551.772 58.6348 551.772 58.6348 cv
551.772 58.6348 550.028 60.0493 550.448 61.1582 cv
550.868 62.2666 553.133 60.6587 553.133 60.6587 cv
553.133 60.6587 551.688 62.5679 551.911 63.3169 cv
552.136 64.0654 553.714 62.9814 553.714 62.9814 cv
553.714 62.9814 553.462 65.7261 556.429 68.4585 cv
559.395 71.1909 564.262 68.1665 564.262 68.1665 cv
561.845 60.2114 li
560.486 59.2905 li
cp
f
582.303 43.3804 mo
582.726 43.4819 583.239 43.5278 583.433 43.3135 cv
583.646 43.0757 583.587 42.6958 583.508 42.4341 cv
582.303 43.3804 li
cp
582.919 43.9648 mo
582.357 43.9648 581.778 43.7515 581.681 43.7139 cv
581.597 43.6816 581.536 43.6064 581.523 43.5176 cv
581.51 43.4287 581.545 43.3394 581.616 43.2837 cv
583.464 41.833 li
583.522 41.7876 583.598 41.77 583.671 41.7856 cv
583.744 41.8013 583.806 41.8486 583.84 41.915 cv
583.863 41.959 584.39 42.9976 583.804 43.6479 cv
583.588 43.8877 583.257 43.9648 582.919 43.9648 cv
cp
0 0 0 rgb
f
579.036 36.3203 mo
578.917 36.3203 578.811 36.2349 578.79 36.1133 cv
578.767 35.9771 578.857 35.8477 578.993 35.8242 cv
580.215 35.6118 li
580.354 35.5801 580.48 35.6787 580.504 35.8149 cv
580.527 35.9512 580.437 36.0806 580.301 36.104 cv
579.079 36.3164 li
579.064 36.3193 579.05 36.3203 579.036 36.3203 cv
cp
f
584.114 37.1226 mo
584.076 37.1226 584.037 37.1138 584.001 37.0957 cv
581.998 36.0811 li
581.875 36.0186 581.826 35.8682 581.889 35.7451 cv
581.951 35.6216 582.103 35.5737 582.225 35.6348 cv
584.228 36.6494 li
584.351 36.7119 584.399 36.8623 584.337 36.9854 cv
584.293 37.0723 584.205 37.1226 584.114 37.1226 cv
cp
f
579.036 39.1445 mo
579.012 39.1445 578.987 39.1411 578.963 39.1338 cv
578.831 39.0933 578.757 38.9531 578.797 38.8213 cv
579.139 37.707 li
578.843 37.3438 li
578.755 37.2368 578.771 37.0791 578.878 36.9917 cv
578.985 36.9053 579.143 36.9199 579.229 37.0273 cv
579.61 37.4941 li
579.663 37.5591 579.681 37.646 579.656 37.7256 cv
579.275 38.9678 li
579.242 39.0752 579.144 39.1445 579.036 39.1445 cv
cp
f
582.512 39.478 mo
582.487 39.478 582.463 39.4746 582.438 39.4668 cv
582.307 39.4263 582.232 39.2866 582.272 39.1548 cv
582.614 38.0439 li
582.177 37.5337 li
582.087 37.4292 582.099 37.2715 582.203 37.1812 cv
582.31 37.0923 582.467 37.1045 582.556 37.2085 cv
583.083 37.8232 li
583.139 37.8882 583.157 37.9775 583.133 38.0591 cv
582.751 39.3013 li
582.718 39.4092 582.619 39.478 582.512 39.478 cv
cp
f
587.795 48.333 mo
587.795 48.333 595.402 47.2456 598.429 55.3335 cv
601.339 63.1118 604.269 79.3789 579.036 79.4858 cv
563.853 79.5498 559.126 72.2617 559.126 72.2617 cv
563.584 60.8301 li
563.584 60.8301 570.623 62.6118 577.345 61.667 cv
584.067 60.7227 587.41 52.1611 587.795 48.333 cv
cp
.25098 .313726 .498039 rgb
f
594.135 80.8296 mo
594.128 80.8296 588.755 80.6733 588.755 80.6733 cv
588.616 80.6694 588.508 80.5542 588.512 80.416 cv
588.516 80.2783 588.621 80.1592 588.769 80.1733 cv
594.142 80.3296 li
594.28 80.3335 594.389 80.4487 594.385 80.5869 cv
594.381 80.7222 594.27 80.8296 594.135 80.8296 cv
cp
0 0 0 rgb
f
592.188 84.0342 mo
590.274 84.0342 588.77 83.9482 588.747 83.9468 cv
588.609 83.939 588.504 83.8203 588.512 83.6826 cv
588.52 83.5449 588.634 83.4321 588.776 83.4478 cv
588.81 83.4497 592.17 83.6421 595.224 83.4478 cv
595.361 83.4346 595.48 83.5439 595.488 83.6816 cv
595.497 83.8193 595.393 83.938 595.255 83.9468 cv
594.221 84.0122 593.152 84.0342 592.188 84.0342 cv
cp
f
561.146 60.4165 mo
561.076 60.4165 561.007 60.3877 560.958 60.3315 cv
557.748 56.6719 li
557.656 56.5679 557.667 56.4102 557.771 56.3188 cv
557.875 56.2285 558.033 56.2388 558.123 56.3418 cv
561.333 60.0015 li
561.425 60.1055 561.414 60.2632 561.311 60.3545 cv
561.263 60.396 561.204 60.4165 561.146 60.4165 cv
cp
f
551.772 58.8848 mo
551.672 58.8848 551.577 58.8237 551.539 58.7241 cv
551.489 58.5952 551.554 58.4507 551.683 58.4014 cv
555.077 57.1001 li
555.207 57.0522 555.351 57.1143 555.4 57.2441 cv
555.45 57.373 555.386 57.5176 555.257 57.5669 cv
551.862 58.8682 li
551.832 58.8794 551.803 58.8848 551.772 58.8848 cv
cp
f
553.133 60.9087 mo
553.033 60.9087 552.939 60.8491 552.9 60.751 cv
552.85 60.6226 552.912 60.4775 553.04 60.4263 cv
555.197 59.5684 li
555.323 59.5181 555.472 59.5796 555.522 59.7085 cv
555.573 59.8369 555.511 59.9819 555.383 60.0332 cv
553.226 60.8911 li
553.195 60.9028 553.164 60.9087 553.133 60.9087 cv
cp
f
557.609 78.8193 mo
557.59 78.8193 557.57 78.8174 557.551 78.8125 cv
546.439 76.1509 541.918 65.4604 541.873 65.3525 cv
541.82 65.2251 541.882 65.0791 542.009 65.0264 cv
542.135 64.9736 542.283 65.0337 542.336 65.1621 cv
542.379 65.2676 546.81 75.7256 557.668 78.3262 cv
557.802 78.3584 557.885 78.4932 557.853 78.6274 cv
557.825 78.7422 557.723 78.8193 557.609 78.8193 cv
cp
.407843 .462745 .666667 rgb
f
582.996 51.9922 mo
581.036 51.9922 580.188 50.8374 580.134 50.7588 cv
580.054 50.646 580.081 50.4902 580.194 50.4106 cv
580.308 50.3315 580.462 50.3579 580.542 50.4707 cv
580.622 50.5835 582.525 53.0996 587.616 49.7817 cv
587.731 49.707 587.886 49.7388 587.963 49.855 cv
588.038 49.9702 588.005 50.1255 587.89 50.2007 cv
585.798 51.5635 584.19 51.9922 582.996 51.9922 cv
cp
1 1 1 rgb
f
571.483 62.1543 mo
571.365 62.1543 571.261 62.0708 571.238 61.9512 cv
569.998 55.4297 574.461 52.5513 574.506 52.5229 cv
574.621 52.4512 574.776 52.4849 574.851 52.6021 cv
574.924 52.7188 574.889 52.873 574.771 52.9468 cv
574.599 53.0552 570.555 55.6826 571.729 61.8574 cv
571.755 61.9932 571.666 62.124 571.53 62.1499 cv
571.515 62.1528 571.499 62.1543 571.483 62.1543 cv
cp
f
576.987 62.4995 mo
576.861 62.4995 576.753 62.4048 576.739 62.2769 cv
576.724 62.1396 576.823 62.0161 576.96 62.001 cv
577 61.9966 580.948 61.5645 582.458 61.3179 cv
582.606 61.2954 582.723 61.3892 582.745 61.5239 cv
582.767 61.6606 582.675 61.7891 582.538 61.811 cv
581.017 62.0601 577.055 62.4937 577.015 62.498 cv
577.005 62.499 576.996 62.4995 576.987 62.4995 cv
cp
f
583.45 61.4502 mo
585.068 61.6367 587.627 61.7036 587.926 60.6631 cv
587.972 60.5049 587.929 60.4668 587.914 60.4541 cv
587.542 60.1221 585.454 60.6782 583.45 61.4502 cv
cp
585.24 62.0718 mo
583.955 62.0718 582.716 61.8584 582.453 61.8105 cv
582.345 61.7905 582.262 61.7017 582.25 61.5918 cv
582.237 61.4819 582.299 61.377 582.4 61.334 cv
583.555 60.8467 587.383 59.3164 588.246 60.0801 cv
588.38 60.1987 588.516 60.4199 588.406 60.8008 cv
588.115 61.8149 586.65 62.0718 585.24 62.0718 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 24.2.0
%%For: ( ) ()
%%Title: (2201.w037.n003.132A.p1.132-temp_01.eps)
%%CreationDate: 1/17/2022 2:47 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",Kf30+be*qkb50r)<"9sK5@\tN*P6/VR,Qe6`4@fRq-s=Amqr#*[^I#Cdb(J;PKp?jJ;Q40fWidD/Q;Wu[3F=1AV^d17`jFC0
%WG+*AF^s-4s'&ZQ?8rG[SLkHmrc;%+-Xf&ji7=;gY#u+SNMBZ'(Y%d89!M9pDoU3ir,QW2^P6\)f\<'$XF-)*MLOt/qBU9eMeo((
%A1P'Nhh]qlNI]"PFadVO?8)AnQgigOY1Ur'8'jKAn!;o/3dp$nd"dgXd=A(1X?*NJGUF54$uQXV>Bt]<>Sl[bRboMmara]iBl_hf
%8Par<cX4Iq0Fn#i!air&_3Nn/2L%*aFt7gl=H28NCU(c,6L*(DL5C$K:QthK-f&V?e:6dFrnhVEq[VMAQk;-"Sti%hc69]KXi3sA
%^)"#,hD51!<bRVO_pb8X/c(HW#\o`=_MYH'9nSf%#LsZi6OhXa2rWDD$']YIKSVXSSIgNma7,:/gua.F>9WdU)1*G"q4K&@SZF\D
%$9s*7/[b[$P2@9=Ma?`Q\^1?;f`^o6*;c"K:h4Uh0sX4i#olDHr`1UGrRuD@!5>QLRn/O`R+n(kTNU"?Ig!0j)UQ)UX9Re8ar.=)
%*Vds#"X)Mk3$p>i82r?[duB_I*"scV'05P+e@\1V3B@Y("0!^h,h<QHj^G91>psWoHZm7\>TgI$=6*WQe-c"0dlJ]8nh1nGiJ)eD
%ock7_BP95SZJ(-f0%0XaOar&\LN8F(RqCojlk^4m!lbJ.iQ>%@"6GL!n2Go\*8oH3_;DNINs8/i$FsU'Dqi:hSqk)0Ba$@&Ho2?1
%ehHSt_r,I>=mF;gC`Aks2L_rKChDGSbdOi\25o\H)pcD[*rMf$SqkQQ&"DN>r/JtLBl')1A(Pf@^Ib?.9f@peB!\p?h6U7#ONhen
%?8O='=2]1N\(F]/D]$hA?a(F9$\)YBgm?_HItsN1hq/,lKth?j$6@n>pP$BP'5e/,j%t[c*Z?tk^M303#/Rf&S<\*:/&5c,2>iGN
%Z<;i0.ad5ndu6ph(&m?u]R/K80:u=do@)\6WDjQ1LWse!p`"ut6LrFt4%VDZK?\@rMUIG%mYlM2htRL:aF&NQjl-l*^Te[E&UuSk
%R9^Z?]E4U%nH(:KEKVLd09L78bnt^52nXLo!%je/`\[5=MJV'9rPLP'6,fV/60c`WkHAldp`#\WYN$ZA0AIFp@iO2GFB;_M,`0ph
%F"jLBG#h;3pl6-9/Ak/TKLF4RZ-V`Gh"/aK4BfBAN7o@,+.K8*H$CB\^ZU)enLUW_fh?`^&.ao"J'?&Pl/t7W>tJs=c4mS<Ekn3J
%A>%2(e@j+$9(L`d<k*$G"4s?q8_r,L;9Ms4<\s?_gf;tJ#L`*AW_-Rr'8!u6^[aV<jNm3prWh72Ma?`3roZ9=\c'\N>aI[eDJODs
%r_"U6X7e(D9;VE)qj%1IpIp<-m8s:r^!32(YP_13rKDOKBo'Nl^AM,^i`Fp10[lm&\4^G?8b[,+BZ0>k-2`YEq28PYjQuXol)'Z^
%?`ACZVYshX[stOG^H)2$#tInL4$/&oFg`/Di>a6*A@cC!At=l,S.*14#IC=lG@m=a$>e-*:=_:$i?mfb@qT)lqF@k>FYi,ii,_Ao
%,'L_b`2Sd3Kl(5<RB11:mB0GKQBr:(D<'6T%K(A]]nFmoM8fghDfjSCQqt;ZBPWm/b=hb-Ac`BD.P8;D(_6#1qe,g/Xoj@BNh+Z3
%A>Y$7aK`ZS<Z3<)clE<fJr=0`&oNFr>h%@^i'KCph8)L1Z`R11E]9'lro)kb&QD7"g%D/,e7glOGqTQ2(kHB+UWZ?iJ#r%d8]2$e
%r]O9dYe)JlbHR.1;RhOB,lS"Oa4Wp!IH./&kq7Z*@<U7E9dbS.iNn`t*"0k*6/)gfGWH01E&-[be:hj8!'+'oko6Vb&JG4pCs\=h
%$h(EX)3H3r^jf`ck`lp5#He/&i/kC-;7M<t5E'/X#4RC0C>hP0"Z-i`btBPBK!m:gP3DgRFTD\7mN.](n)uoT">(Z,P11(/9Ocf)
%8AS+\FG1f@A*t#bnDg_[)7HP/KTh"'4.t/E:__n7]Q6dT>1b6afZ$L0`&:I%;Yq20k0b/fFqtBP%dtJ<"3kasJXddfaW8n8Z%eB5
%3>Q**s24YYSX,k\pD"_-TOr7M$W)c(C`=>p$\):1l0ocOo0@!;DVD_/\k(<<H'oH4BmtiS!OrAA$Z-;\_R-tfEh/!@L;]<sB/&3(
%hFBZ"@<@&[gOt+d0s.Q$$_Tolf!',XX]HkZ@[+U=\koIo_L^u.Mo4#h"jF)\2jeHpW0*9i`?A+PTY$YHIU'<6K=gh'*3fYS#:p0\
%L7?accP&5+e[5r-8adJ/$ZLc$OC=-aI4"mKQDh]LKC[>:[=M5)8"WhfL5$=8OtL,r`:8Z!>gD3*/o^h>FG7B78AQ6!.$!;@U^kD_
%Ak`,K/;(n41n4/#$A=2Y5YR#AHf.&VL_3N+gOf^)`V4+/m#7H'H;:-BiRj:"9fIr+=TSfUBos/fQqk;U78?D5YmB7k'p=E<r!1&/
%)Ap=_VmfMXi)2!SV4jF><miVHl"$4V\/2'OL@Q9uI:Qts[Zt<Qk3opVM,F6UCsjQ]5h7\!-6+KX;O@smJGNYYW:#9uTJ,9PXHINF
%NMOp0?">5jRoCcPOXDRAP[pJ0[\K3?A8*(r]If&Q4'<PT\Tg*WG2akuD&eG5M%64Y_;G;qW$DNp%Zs60!?qsgO)1J`#[1BpmMa5k
%%432G$Y1h4/cR`KPPCP#:X[K1r#1?K?p$[r+Qc6H=KCs&\Y$dOFqZL1*569(NnG$"VH:\<llQ'2H=b&"P<-!2!+99fL_<40STgm'
%E%$U>Y<=Os-40\SU#?.VNQ"^\8j0@C1oAMKdC+5>%jRLNRjAURaJ]Fbo]*3%#%d3H:S>@Ia;uai(?$CH%=0mK\ZX<qg-HF7!XnTZ
%;PkJ6Z<ZNO`&2P,-f*6fGfUK^U-0c9)T<LnfBcB4M@a,?V*3[)"3n!!B<cus]NfWB@3UTiiAY-HW:"bBTYB\XZA(_7FNEH'iM"^Q
%n:`7%,7BN08hIcM+f3U\9".V8^Caau%>aRl#U-<`8[4(;"EP;b?ouuEB`F_Md`<ZGp^iAUHUYXKQN_lcBIAu\qZt/`Y#J$;)HfI5
%<&;MY_BE^[[9/&f7s42d39:iuW/Rfuh8mXTFUIWNFDOHo`s(Mk61Rn1!K.A`!,bNA/u^ZZ*kp(O/VW7sV6H'ZMn9fT;AJso]RV3-
%G[dJWl,OS'n+PoN_L`_)([1"%=2]_a/;!6)3$(W#(0_nN_6]ebfH]F05G$pBWQmPM@[)54Wu-_bibk>)U2BaO(-Odrrk.mcaek4a
%-+9J6<N[JI_`2LC3^D$cZ::::8ZE,VH6ciGV?Q!!8QE.m!rkj+OQo0C>'KKfg?Kl]=G-MY6X`=h#k8'fD,rE_@VTju.??AVW!^C!
%nc`DgAi5j6+K%&e<$.q_fu@/aX,J;S/&`FJ'$@AOmlK1?kT\d^Fb,p1fR\H&r668e@9sS"9Z$"H=43?\>!p"0c`YBP*S."X\YV(X
%-U)m9<,3e]\<?2$\E:m#h5HJ$,)O-tgoZG%Q(s:E5%>Y8(4(/*/nC]omPe\>/"mFu9<puiAuf)b6DUr)Sk.bh]0Omu]aKC:e$eG=
%igDlQ(G`ft@<,O!+.Ep]///eriB.U)^lDp%*N*c'V40/rE3@;&7fq*G&!U^foV[49qZZEiI:#YK+\'mOa`SG._U$:_Aq7fsp:tGq
%cY:)Ucc?\9C?$X4T[DN3pT5!OQs>i@+hjVR_,^?hUHp0aP-1.gH)/$-kZp`)QP,l8lcK9=O4H4;$.ko%#HWJbJLa(kkuFNHJS?Y%
%'9-t4SqSPQ!Xt?h#(BV.`X-R\0;hd)Go44a9(B?3"=R'Q/_ohEgd%_WL+]e.p`E33YOItQ]U'[2V#IPcGLU3G<q`/nNs\Wc-CR,>
%a#79maBal9-KPd#asa%H3)Q30TgT=:SZQ(;qN&j++MlF*A##8HjA.OI;Nt,F%a0KK/ssoq%*g0?N#@\B*,o^PaMSjO\d791h7K\Z
%+g\YI7%V*(bNL,G'/&ik?a'$mZHX5!s5S2C0A##opAYc]n)@nP4Q6;;m*e>3?^SOo3(03`.,(WVW=RqleauN>gY`Te(?CYM2UTBN
%n]R$mN[,ScgK:2jJ#$P.iIu<eHD$R?/\^U2goW*<X#N0l4\MA_3bdiq(=(ihL14I(,mi>2e9S-ICKeJ/M[42DZdTrY*hE0hAqtT%
%S],Uh,T+p6F)3,dOP,EJ(97nNY30f472Y3JNNlGnFeRs8aoYT3V$+5r:tbOmQ:2r[g0;(>]!-9]3,X7lhb/:1mTjd_Q>e8$d)W?-
%i\2b8"V7kh)cOF;@0@bfDOST,E-s!gs0Z/rI`82^)8r"J$V,@^`Ys4;hpM[[cK>@G#V=n,H8I]QaW7:,*CC7d^9i(kp#qW5aV9-]
%E0f([0qrRub]><k(!^6@0[CV(N0T&C1b=q!A^:>d_4$/4>"X'O>@gtLZe0G%J84)@"1)TaP\ab@J3RNJK,-,(4"u3+g,de-Li*(G
%?VM"E=T#`daiETDiEV+bjbT4CPt"l^ZsRCa%'p:a>%$`%31@2_M0V3tC,b8:WO0Ph4*5'jJ1$"?7A67Kbn)WcGVG0%_'(I5ZWW)B
%c.71O=GM2=^s7,(QmJfY"]/S\K#HYRgq1^%6BI$a4(a[?8fDOYT%%BQ%lSfUM!eNm!/pSN"%3PuIaHc+A<D>"bNcr9e"IpsCq/=g
%Z7qRMA@N8k`juNp&pYY%Rp%_Q^YFBV[Iu/[j[o[-@0"I?4O3(f:M'q9rpp>NYf`NjYZX4s`n(/f-#,2N@F5r</R;3oYnB+9n)/l6
%HHS)&G=nHhWT5:j.o>mBT+k.6NlHnl,:Oi5'KT<KaJ=$Glg"u("u`;MAN\201N8`e%i^?HdUi5n_.;Q8-Dn6]gX[5]89m"&B4Vtk
%$(&Z+%Rr8s4O@N2P?&;QaC)5m@+eq:i4L+D8gS7\9a>IDhS&Y.,aDe:.?;fYUZ,i0rS%IMf48f3X+tXb(fFK*K?%fnI8X_=U-Jf6
%30ZLHq&n2qW?M+8X>.r68@hFJd)`LH$((h@8(t;HOUJYq)il&L&50?[ntE'Be9(7hX.?^)_FY+sgomqEU^6Pq<S;oF`6ZY:6o\m>
%9UNl><,+u(G^T(B>.3<&I:btupH1:a/:26J^iN@(+VCk,+R[m/(OEA<,^<4@`sh7/#c1<8'rj:A>3->ZeU.8=22NsKmPmFl9=8nH
%,IYZA2*hGaTr'f^-P'5QFO%_FUm>LKHr_f:`R8CEfU(^"2rkR6G6IMN"9"*.e[=,4&+EhUFV,5r1Xir++WOWT']j.ic%I;P$E4jR
%FZH!\3T6_$QB..r?e.k"hB7p]rCJ<M7%P/gqotSjHER_mC#a0&lBF_M<&qQRgo%pr3pN.jksRAT=fc84q[./*A]R1!LF0T)r6p]^
%ItapagSYaaD:grnd9=0Nq2or+;GQf$SLo]"P/jrD1Pd.$=_ZdhLPpSujf,VLrmf7cilI>7M<e;H79^Aq/Im%0_[R4)^]TT/5q)<=
%4I>b$mGIb+:V^JK;<8B:3SkXJC/S'R;q6C[aSXrLSX+F"MhB"<EqaUO6&aPe3'QCo-Y4a*:jdf1_Y6%"OH7REnV7B/9Kcd#!')Fn
%5.%AqkQgiW23KO%KBfE12n`,ZL4tCS<&1E;IF<b\Mi\U23ZgIW/BER6e*Wk]V&00s/k,3Z\k/u9DdbpLBg0.;pHZ\%8JNHY;\b=5
%c]"0<QRAp&=27<&VF7A[*+(j1nq+hs"#$eYop_5RIE:u0iUg+B6[SMmNc8?WZKoehF&[iW$EcFLj#Tt"L$Gik6A0F@r<,dP\E+L7
%0]K=sdQ.KN36+rmWM%[1WfV-8`!raFC3q/+/j-csdS^ZP86(TS8ON'oe`/5]iCJH)W<]Eo"\QKb`4kh>HrgT'6:8ms4IsNO$Mh%C
%T/0]mP$^N>%<)KZWB4UDc9g'\?17,`X3M)U6aOG^=aSKpru,no332DEo]n;\?\(5/eH^p>qJL!ELUhpbVNI#a=J6D[a^Smc[GS-m
%UH:O+C+5F16#8NKG3r@<Fi!^hCLqn4LG$/SG:P.'H`um!`'Ce[q+SuDTF3U2XX5ZSA'tr0k\UAB1lUIN4l@pLfhcF9=TbjWFf>a*
%.B%Mh8d+<k[n1e(aI/0/939:bhXNqTW\nRH%Dq%>73;WV"&O]*PdW1F:!*Gn3C$lWPgD>/2"JLN-7$BeADbri-,]p=?@C%:OYI$/
%'NGS9Dt1+Vm@EYdDT`l^2r_-&je2k`W86l-$KFP%]"QRU[dM!9O*k]UQ1c)c(IS"]oBIn9i&u5;9Jb9LG"=+V5Rs]L$^[5:_j+"B
%K+TZO8Ym#5kiK8'"`6Yr7?mP<]an]a:@QC7V-6NHo8"E/8(M'4DHM.6/d/ZBqRW!j9#N^S7LI]c@Yt\5!/IDHU_I/E;\q$?78H.i
%ms#bRoAM9Br,/MB08$or6*E+l9947A'e3G:ZL^4HFE(UP8r)tMD+h6R2BZLVXnoa_ih>HH%q^er^5t3Ypmtt5Gp>bV`ShOajY=6n
%>Q%FRj-UG4KIkDC.LRLZYfHI'nnM-N3@[PD6(]L#+'g/_mO1MgPXV:o_.C_4mVXi#d.#Q\X&VM^+3=MO//"+74`ZRo[%'Hr[%g;<
%bI"kY9>93EW@X^Ji'YWKdSQ)_fce[p^"J\VZ`V;<@Y-NrHA:cL)3L<iMJ(0lJ'%-_&$:X*gA>isglYC.94)?n&G*"CW9G!6LbpJ!
%n@oRPXKodMgtPak/AGY.+Q(ZSqZ('Deq[t)Nftn=O&KG$8EL8>YfSa(<$]AVO7G"$a?/dtFk*C\ibVW"&(WXe^>a*6?8.JMG/2!c
%-\=Lm5rNWMX4@VK4Cp'1QTj-'!C-5e0f5?_;&O]G>%=MR0!%r?&?`(5UIkVMi?QUc5`Y0%4mBED."jU]QRCL!A7VjK>N1F,M5[WC
%B;BS]M.m2Q))66RhX=3j#]q0^qTF!\o<\I<b`?pBI^SLV4hEN`g%MJbHl-sl<uD)>l4@Hp4lbh548`:90'DbMVt+]9;Sm(simUZu
%=f=iu9!NCg^MSInmnSI(ZhbJ&kEQ#`#8QH!.-'o"s8(URJ*1,X'q=^S:9DsGmZt%+J,O:3RBKj"Z*PS)W72/=K7*%TndBhINNLP@
%MdrYB56k]6k>n(*?`:,f(bf1dCI*ooKtd1V]gh7Y$*Gbc;L8CuDO8*A`C`!E0Xlrqi_e)Vqm@8hd2Hu-n.!,%!Di)+Z!l"('5>[`
%<j)R.BG>412?&[ATs#Y7Koa]bQ"/SE!`3=@CdZsII.nSjS%Z[M4j&.d^K<$lfDOo.+W!f%Re<0&Br+^Dc.2"S('_\6d9"tApnY.d
%S#\k9+4OaIbsEXgcVl8mnHn*XP8h8oi-*;-45fM1N;`Ti6m8[J&'8"-qaB5T3+ct!l8KB(3DHiMj9RR?k32`C23.l9i%0hg@SkA%
%>Jp'Qp:.&H(`$iA5>%9-@\I+C0/j"onnX4OXr*],W&K;?b)j#UCq!*\#IQt%&kb1LNCjM6g!]IZ>O3D:I+)?f,.T5JMna-#6Kjlb
%]\%uSd)N>4)XFkAh[=#Mr34m]NcbAW.r:U(f128\?/mS6c??LI@KR_'^<q6KgOr@@p@f%Hq1.=7$9<L2\mP=hiiB36b29%))89>\
%o%"/7bsh]?H3atD[@6"/-?iB:k%d8N>):hN0%c*5Qh[WO"*N'[Ut>$'Z<4g10D*fI`X*&Z^@#h6bqCtdgHp?SS$HD\-Em\joPdKn
%d5>cToJUT=_Y$VJ_H'XREG[)GB)[gpO2&`EKaN*<Ttbk-H:M$^/+gji,4)G,ojm[MpHlT6'4FP>h'@'tNsOM8d:0jfl^Tf&fP&hg
%8)p6Xe=4E*C.'p!(I<%&9ebD6@.^>+f>oPO"s;$C`9;W6S#+#-_uCK?d37JgA!=KWArYZuV-ab=[GYg6W#8#.]@r<]F61P9UB&-c
%kRH+B*WD=o."po"*DtJug4;G(#G[8ZE&pV6644l1LTus)Usc@+JfP>Q,Ii?e.'?s'Hn73qJY>e;W^4mbL`sW9g.fVe`M:dkOE0\5
%N#91>:nja\WKRVInqU73cK"*lCh/-uf[eQ*EooKKle]cHPadGKo2)UI<p$+2'SUR/2'2mbi^'D;T9We:K!Cc]?nOc(FWS`NA%?k9
%2im(_Z.qI-lPIa@Jo<sFjMoMI^<agXS2jL[h7Au)QnB:OVBjlP7ZlAaG:nfu5rrs'j.-Il6+rE,"Q'PMXs]C%)/_X@IBePsft-),
%T8h;-f^YI(HGM84#4pb`qotD,X*W,0ZMYRTTmRQFQlfh^).a=U/8]ipVDalTSebHn,Z0t%.E=3[_rdW":SW_9-lf0ECKGs;36D!8
%-n3!Xk-H9fA(a<`!u3@/buKXdg?/.!_1?W^?h5K\WOUd:,)?Ld!J,#%rE?d1XuH9!'T),B1:I-qd5ST6GI:<Ym^0fRQRNA'eh'US
%J>*@2K->>q[#L[i[deEtgX)^4j7gR/J',ekWYEU8]kHZ'LOX1Z-W3q<U`,je4VQfH7,H>0qZep$]Q)!Y`b_5e9UZ/6()h:7FG<a[
%"A<r#a?L.&!ujt=s*PbS5]4QNjaD<tS,HNaEDm2_;)U41MYR`?o.EX\@YK;.hQT@dbfLWL,K_'dfeJN9(^/aXi*]_D]_b"^3^?Ba
%\@48`o_>2^Qrj+]^+,asV,C";K&C9pPjl?(kMOR%7bGt=B/]c7[l3k]Wago37C-:?'HqHQ2/.pr8[+''m"l"7mV@9cd#=\T<5\5Q
%/H.p1eQ@!Y0,4@5-d'2mWYheg>H(V@nBle!eD17^+gZ:b/BWs+\Jgqo__P;"F63(q!ZrRK3Bc)3(9Z#ccU'@)Uml;OOcu9o.bMom
%L2^m\42PSV?FXY;DL[>VjJfcG+3BU<]%<cInUp!8.%!5li"*rVTL8+G1d2L01\&It-F?qZ6I_c:J/Rt'QRE?gjO`T87lW\*htZ;R
%:co&Ao^qi*VeJ;"`jNQlKO^I_n#s4DR&s)[:p1Z5>_%=]A`'[dVoac,3_tgYR>!"NQ@'N%_K#3I6opI#J4[5B>"nl2lZoOT]H+[g
%H5ji*<Xm*Nj3i02F+5$"::Pb2&8P(&IZ(FuM:ZZCDT5H3ZV)J[TAQ0SSMY%2=3;+qFFGjo/2`3QDhYG.DEP`dHW@,2U/ZhDZZ5Bm
%.Uk^*<M<NR<oR."UK&@G7Dl+9i&[%Ba`c^u8hH\q,(en:o*,%bK2L^,eT>'.MI<M(Ppd\iAUJjoMr4IT&Jts>K8*`kkX0=4Z&p?L
%G4JM%<5kuZ[>eXh*;C-6Q/qjPDSHhGH9eFn\2G)<nHit52>I8i@^JbkCd6Ll_Cl]tOW8n,Iqf-Cn6i][/6/E4g!%A>2s]nE''30r
%R<^)NY<:$,,taEH9Y>>j?mSF0a*:<a.7tjY1@[s!q&_eJ33PagU\U=S>*LG)R<\<Z'5B+NIlo$b.$7c'GqI1O(?Jo.2R?5<P+/:O
%PUN#hG`sp^[4%0-J4[5B,7790[4%6?he&i'--BgH?GFa"/P7;K1F4L*hg%gMNAWSU"DpbE3Sb4lMc>-aVo83jiF.$<nOHY8c5"RW
%o*[AHr/Q]mS9LJmq\:E<4=s?pRC+Dgc^usKf5&-sfBg%SMh$Di?CU8g\R(a4]s_2KaP:'j]5*V3ecKC1\Q528[C^.\\[+2<f&g.Q
%Y17,QX+a?&/q.l0`AB'R#UoJGVjLD*!&tdi]8Me-(S_6aR#B?sN4R!lW:5"-4=^1l/nX&Dj+$+X,$A*nMGPG9CH[\W,8Y)VV>>+"
%+5Tm'8sOs'ba>hoSeT?Ci2TTpr:`T@8dVPLhoJ33PXDD:\@+;FT$)(M)Z0,2oU*?=[$YaID_2/X>OW\?\)<1sT;a`?5P*u\?1XVH
%LVD9=pt1q\>FDLH^5VV<re"!oR5EOZ1=Df!SsnC3B\SsM=QNlqfZ0B;rr[b*EN7FtPGSG&Pu>"f#LE:O)<&o>c^HJRoL#F*$iCG]
%8CMS$GF+f]j&?.q,tCn;"_R#`CD!j\[tFAnh?PqW>Efe0%oK.`G)VJl\=8bOGdZni$B:NQd"nF5VGKEGp<b5d0d'?SJ'^2sL[:Cl
%/cUIG)a!b$b`7gU`e0(/g=U+rJEAfh*mXKTmjpT]Edn!L5Q@:Hs3Ar?a5DNoc[R>>r0NWpScB.8/#!*9TD=L%)OcdEhjOC0+7h;G
%b+rZrk@_Mm(n]$uI&ACQ1%f1nq81Z^1WgedQl7gnGt/OO#pNmaj^uu,1AG>?.-0XW0fEZ+Jt?c/XrtkHM>FaSNoh!mL*lk(lUOc&
%<kaXO8?m,^dsqYg3IH!eKM?T5Qsf/f<>Lku3a,%\99Wrtjr(IML2<G)q`QJhM]":Y$<u,i+=M/ZV$j_^)[k8_X`&nc0kbCRK)AZG
%k*H;o^s,ejPE@nqs,GgU9q=^nWTO#_YrbUi)rZ=_s&ga-)h\,">R+D2bAm'C*FV#q&O&Y-4,)CK3DG\d:p@QeJi2-5PRL(>HW%_Y
%P3qSc+:%mnD74<gkjs2?7->f1Z^g,f6j2&@jR*N"^>:IU/REJ*gOE9TjkrlQCj29p?KR*2H/dqg>FR!H-9UfBdk%#6O]`OD^W[?E
%o>Jg7nM3nQr0J$L`?B7!<#tJS'1h]tdbP[Z+p4E^#&3'P89`e<`91?:oPkOoj?E/p2:HY3Cnb$F*;P;>WLdg'"&\K":\o,ZU>2$+
%o]Jolg)lHEf`t5>0A)g[A7AI1n6^O``)r#Zr$b='AK>FB.88,0YIS)3P(7Rj*%+/Js(fVo)UI1,?sBPj0&lfn9+V&k_5ArWh"^]f
%p\CH<q3=H'9qu<hZ!7#9*Z6lNc9<[(AEpA)=0A^k5m*H\$h=md1Gtm@iNHYO,Q&E[C,F%Z(h=CCp@.hOp@.r0WlHR[LEnYT`>IN7
%Pf:"+okqU]Uf$7bT&!'N;<AJEF@BlLn8MXgd$@.>j!KR_#M!QKY3i=V<eTj.nMeJODYuF7=KIuh3:D2;+/orP[[V*IMrLf;R--1N
%,P\S-H&V!-[,uXm8JWUr#4`U.p+Xg&bju[8W[t$$Wq/?me.ZDba-`/T7`19d6oFL;N;5JT"=3(QjK#/tV2V^JM.bSDR\+Bj`Igc+
%8i8a*)nDZnn.Y\(RrYiW#lFT:l&c,-`a`MehcqurSmoo3KI?=qqXkt8$beNOE\9sPf%#4SHRi/m)MLXu:nk0=AV9AF$cPZ\f?nn:
%ec(LkBIFKT?e$X&.+XrXNGBp57j^[q2obj<UtL.@OHt^lpLbD0.#pf/I(Pc^#7&MG)`24mj*trC'K>8@pt26(Q2!@Veh3F\_"Ddr
%"XD!dP9)p3*tK!<51B4MOEmRB1nu=?0A6cs@aJDqC!&O%g.W607G5ntjD,B#^*<+'Pa$Pafue+IHo4/>cHq\?A!E<?D7TEI,qDo\
%MUrKp4H9;XUp9*fgcs/2o4[RLhU"BRRn%P7&C!YJ-1befo).cu1cLKXk0_sHReq$R<^h7t_A("2&U$#BkN:aY4IhmrF7X?g*mXG5
%F6Af\rjq5^Ob(W8jfFl-jjs*M1cI#6>U7UaP%ZHdhp$=,2e.nYLj4,hdM7._BP33p.PYu\?g#b#Qt2aa)>42`):Jp+s+$((K0CYW
%H2X<>A;mEs3niKOSJk3;EBb,?W32!hD"D",hRkE9\_F5'K.9kc=(qNaN0MYj2guI9Ut]Im0oJmE2`R(#1t0IZ:(Q;Wc\Pst<=naq
%oG#BnX<s_j9ts-r6]tBCe=utWbXklL&K[>`2k-t7l#3[oM%.%CN,*VLlGi,6g6J9<:3(e??`0[pli]R`fuEcU8.Qgkiop_*=<D.'
%_gC\:0YtWFROfr_FgR0BP:"Nm&92=@Yu&"D6,!%X$`.I2Z^=e:EUCf,n4]dR#bN;Q]L-PVlontfA;BlQ*QLAAP7&PO\0psu<-iV0
%qWk%Xj3c+7Kt4*8fq*eY]0#fH]j8Xd^Bh8:X`jU1C8Dp*BnPe*e*IdnIA48Jo\]7s:8A<ESYCs^MXL7pmO-eFR(8a]]_ZpU21bT+
%p+rKK+ulL0KA)"QJW7[WLBr)$2N!%?MK-i:+"?%ccdP-pKuQh9M"J.cVFiR559@D";P%",),s8W+ZSUpmpXQFj#ZmAb`1Z<38U48
%-J^XN1%:BE*2Bjkgb)>n4?9m1'-d>R2;:*M)<CT8)k;ATB/]#E7oqF1*&7"u*7O*Wcet"7B(E.$rNSR<5*k$KT/0-#p&)Woiuue[
%oWA]R#b"4O?LhO7#Z&d6$5J"+;`jNl:60,[^OGWTOO6.d[o$+YC,kq.Y#q[j&*(jT<YI98[r8^IOtgH4o[H)Mj)C<faf\-Q@jh9/
%''lmnE/E7AThY&E-8;Q[6ogg?-Qh4hFI7<nFQQ3]I`9m^/+!7`I1Y?YiRB7Y4j'BhT1XV0DAmn+9^:+he4>la=$\EBW6J6>l44c`
%Bfm)Ipm4k)0GU!<&W:TH6Q84IRbd7B4_APoD3f7`;lN5uM9-B*9T..VS*eGQCtrj(cb;/-NO:a!66*WNHs6-borBKj8RV[G*d>HB
%kSa!>mcJi@o,n#+L@0H>BV,(q2on<3DolJYcY.oEN,\3b+f?Ws0Pr,%IqT"0r$+a*a^&2afIl>kIgh0A(4n.K.chllKc]uo0&`ef
%\kildo@O!PWq;k*h]3H$nGA=H[L=]8RBKj"YuIi.^PV@TAcFfi`=?[/=Q?>5A,L2t0,=rIXB/u^dn6IH!Pb,7Rm(1tXMtln6*Q3k
%jns\3%9O_?@*f6^WA6mYoY79N:[#RN^OD6Y9@b"/puL[#aQ(Haja3CZThqo)#Cc/.XaL?'3<1r\R6<!`Wl:X]8;eMJ03(Gns1Rq7
%EX]\qNp/P*]_$mEGe.P9)\$3E`m]%YEb*3L8aN1/E8LN.:G:Y^(P$o=<5eK?mltQlr*SsT0o?(WP)%"Q76%ShR!1\]7VH#$nT3b-
%K17*DN>u6\A`YH2O(!]fUIN@6^_C\Hbtl8ak8/XHmjJE*WV1XAZeg[<HSB+<EI'Rg9n&3X5kO<aP96XE8eHjTIpnVh"W]FP>]cj+
%CR-)laS65&MPZ4?"[Lq\Nu\E7!$U[[kNfsm"<+bNahK^WDjk7!dU0R&C:'<[<gLr%Mf4'H^,=>J6Y$%'A-C[k9tg/Ye>)<7:rY_5
%2S,n!g&alBK#RiM,QbQobo]^!B$1al8(hR\P.M/m4q*?MU72'VVYK>1)!Vnh>stH1!E21E,U3Y=a%h"]$Fsc^;(;H0[4i3)]US3@
%r"a^If_/(1r^U+5ZgOU7Kf0VZ9ls//2rs+3F?.jc]q3mijndO%aZ&[P+=?bj+ZDJtgk>08j#HOd6ZsI:0B:J)6@Tqur-KBrZ]We?
%4Ssfua*+#,knmmj[NbZ9=^"An:We]IHg=OREF_p(/`=[&C^IICW_s_CT?Bh/4K,sOWc;,k>`[0SdUIMa9oK`Og6#=HoZ*LM_i"NT
%2A,7'"V![,maZ5XN;&ALZ^@(>P"7\OC>FrEP-mdGp$:F-lt)iCY9hDl@M%U_>L,XbGCFmtAg@5]V7te8<\F@1EDUKfl`)MA]D$$9
%)X_BFQ=3AW,^6qh?Y`nIr)u9RNt%07Z-//=Y_4?IFZlVq(b=)d7DBF"bCJUJ/oep/)gG=fokSg<3-JRXjC@l"c_-1rHDaj.ldeM,
%Kp;N3D>3&f@R1=+.7]-/e6%I-YYk)b.X!^HR8V4U[?0V'8+gVndACc$2jS8<.^<Kuh?[l`?!+rXmU/G?=KN=<O2Q=Ul,Z`*CI(eb
%V2lFnqUM5CBJ)0#m2FX`"-08QD7PhAXY^tNGGSH%\u5$aoo=TaC-b"]I1'M^_;C7)G.u>m0+5`c6ck(#)m7R,=sY]JIefI?5A:e(
%/XSA0/#`j&8$a,W!Yu\?),NZK2.E97:eO&miVPq>VF=b,>jOEM%W=9%8/-5,Cc8;DN6tql#("n0kEiBArcJc6W`31.[G9=a7mRTV
%0@_Iu$[+dY/k?"Zs4q?=QnYB'fMu^jI^r=3JO'#'4q4nr6Qg$H:_$t-7]g\Me9_u`/l"Y?ppOo`+*7f+i^%#j.IaA%,Q2(u_7-'S
%ETRH:^TYLHOT?!YX>'N2Z'/e-$7)aocLEP:`"'Nc[;)fT7ZH+hGhO'uC],3F("a2,VGA#-LFtGc/6%1m1%,&\AFpe=>OSnoE0mTa
%m>>(JI?7>/h9sHi_cIfPjSp-`4sfO1Yk>H0kREJ3mE8'tI-rq$0\CVHgWe74li+>keTS-Zo8>"2*Nd42:2qjF[5*WV9Sc*Hg?UZ-
%Rr&q!C)^g$\$/R$Fu3!iam3@!Y''0^r-X&aV?l"0I-dY+WQ',)H([SF2-W%hY#<G1K3hg%2@_3rcL7$-f`Q[o8tEAZl)U_jO%s.u
%A:_*uJ`D;4+C\_*L9t63^E;MEbu.).HsH&:?oZsJXVI"E1eT7`8JLm,&IpZ2>$LG8(&e]#5_?&0:!JenU.l)$OWLqqj[u$*@tc\[
%N@[liZ[CPE^\-o$[>BkQ]B)TLU!]R`.&UpAi`P$sYe&[NA,/oCaFC]WD0f;o]rUPI"`fOXp%@g7C3.gsO%1q2dWHMrOCmNGjY?ip
%(d55I6eU9j)/\loY(P9`A(GQ+eOr0GmDr/*==t.';'.J9@EgG@7nd.iUJe,t'e2G(2PSo,.)RAp%qNs%Q-8"S<@&DYD7tQ$CBWm_
%P^9+G9+,L.\7$Zs>epjEf]A/rV?V?$>TFIF%d#AUlK9'T_Gk9X]3V*5aA6a`XP/_M%=5G:&;M4eYiYV:]QH<1h+^C$bI&#OnB#I>
%S<t-_ek6l8&*4O@=h-!r7r`T6W#)V[INO?IB1ir^7)`^Lbh<UT78CpFc%'>\Q8T6'H1YSJ'^:-mYFd&o98@JhE<o]7.5&fM&n95U
%_@?BZ%,8j_%DaF#iaX]s:K&@Z+<>eG/6P)C[@3/4pK#0T_HP3N_!*G*Ui*EJ.sK@8Q\UI+7&fQ>pMEf#.)3%8\7tJ$5B24Na>RmZ
%\)2'jj5iltPep`U'Rog'5BaC]*)F5)O`(a[Oi6?i`jR^@&F\S&@B&PL%.$NuPIpu5(IH0(Oo071'&$nMO&.@gHImqO#&`*FkD!C<
%mqSRL,7F>]D(VSD_GTS:@g"a;8qJgEeqsoje!DFsq*_'6*q2]H"Up]tPehf*0QSrW&(n8NUk(8H.Gh95XFNFCiR>]91$\CXr6RVW
%L\>h\BIOR2?o,CefP3BR?FfAu,WTn`Do4Pu>33p"*\Xg7hO`r9mnf!10a^*P#=ZD]g8`PM#M"-pIcH%ce.\m,[(7mGG&c-TM8'K=
%&*+U-/'>eL-D64]=S=XPY,N:SLlpDEg4Fcj'H1h(Se+q0lsO&En*%$1/_.Y5k%ZL<m`,W8j[LG$*20cSTM*L2N+u<"'d9ULft_Hh
%r7Z!.]Vr%b0mFe=__:slI2KBH$cQOEG^H!@44c0dFkE%=Yec?bo\UaF&d@dTUCUPooR$Ft[beZuO(sk3<bkd%G#W,H(QW#Rj42a7
%W[BD,(bQ5`Z>spO@qoP=/:qqI*mk8+DmY?G/0Z]P8(mTkRb0)/f[+$ne9RBYXORNO5^RWi[?t_UH`[>/?2'<0&&2s3^mWCpk%C%j
%_"!;9@=/A5.b.d8`#_2Z<Gs@pT;)Uj&#1JZa>]m44F[77cm\_-(637B;*R[4P3n9k14gKh[-oL_*Q'i%6)Kg?r,;V.4fNaNK^Deg
%1XCoB<o21Vk@JPGHab.3X*X/AW/nu@fSbb9H?s_Z`CYYC:WD37b]`10K8ihrAL3Kel.oXsaoj^eh8aHonb@:V4*m%#LqeB/`5la7
%552Lkr_i-'lJu]0ER38uLrX;o>(#"NIf+$Rn6*XZAG8=dF:[7eDmIPJHe"`QJ&^NLT/6$4KDQ&Hpr\Ku(tQ+g[L[krs1pO3nZ;G!
%=,/a/CA@<Ul$U,r_OIB'n8#kr8NdH)GX]e7fYDfVp@7Gu]X`Na5&PkqmCpAs>P'X]\6Dc!iup?FI@&^,O#d'(FC,ncGdF]+K0Mu>
%7piFWh<JMJGRDpdgeT1;_M8BKC>jDMl1VoCG7P4gqf]PI5Ma,9ZrAQ>3*rf+Rrt:9c)--I=8_h35H\pSIe%UbhtZ]aZVofFZ:5p]
%2]f'F[S#okg%<h8a$8s8G4fJEnl/i750>^G$"NGg"!b4YIZutn>$oEiV]H,ZpWCPDbBo`I1KX=C04eHJNDG3b_P[FP'*ZsMMt%aK
%ferIlk2,u0mIQ`pr:B)loj7$RD8.K(gSa@UhhgaqH>;K;oOL\D"M3V$&K479qFZq?_<j;gL;(?&"7.Qk+Kj<K#`.:;rW9NSs5bVY
%h\K2OKhWi?i<=V8He_r36VN\iFn4$>4rbj?S^cD<a3!B>e)f*Q`hH$T>"MtKrNql9Er1*.\ann!:?mK13H_s%J,&BrgHmC.;=.d&
%Ol(-=&.8!O[pP>qb&oN;.(ah>gFmV\l,)KDRqpdUHht(P:NOh8p0RI.2XWGD5C[S+^3CN&Hd\iQ&kh=&S&pkLccYLhFWR`$32I-]
%&t,EleCf:pPtaEr4SWs/na^G>F@u#pf3R^qhqG1s5MX!&*]B38h_&494hn(pf"G/R1V<J=q_29TpoJ/)MUp4Pj)!5KN+=NLX0:?*
%+&PiM?G1m"pF=:KB)H6m[4SP)P'Utnm90;bA^Xj[/7bp758]g<rr/+!_Ff^b,\I#n?X2.5j,4IL`u"<m^Vo0#EtaqMQB'"X^1cFs
%(F6gt++.=LY9(@P)Lo!U4Wn?Ll9Z.5]dk2pdpdKsibC^FoC_+sZhispMdNS2PK0$M$d0VNj,4F(#P!.Mm4uE:J.sY$5.",nmVci%
%nWg#kp[Qf$P=kbhbH40[mF=NQrp]:'=a^1cp6U$`Ed]gZEF!f/f1JQ:id0Deil5Hf?JK5.[c>s0UDIqIiSpcFUL2O1m^%<dmUaZ+
%n]f\U:[tP,h6`&(?9WSm:S,3YN'BIPHl[];f%8o\bm0Y]qYfDBI!`DI0:k?'qCMVnWVRdPHWXR4^Kb\(j*UdR7Ju*.g1pP!g"q_'
%\kEn!-bK7fr3c7\Fo8?:AKh&Mno-\imc*aG:@mGhCFB,G<UiHSo;VC:IX-*a'$n=lhMYb&TBsO8.XiUk]<"/VQT!`MNE6T'47TMb
%o<7](6h,OI^?[]o(9=G5L#phDo"rPoS(A$`l)37PH@>&LK!t,d/K">5$)Uk0^21McE"DB?/8T0h5:eq-mlt!#<dX^d+anEZZB5%W
%dTkH'\6E4jqsaN&i@r#b/fY[7Po!acc;#24C,""iA8u&:iZruXE*7dlYI8Vn6K'd1:g0rL>c8^S]/WOFrbHk#iM:X8ES5_cZaa2K
%4C;>XZ(E]7``mZ7=uOqIh3),PI.V^MC@U!IQZn@UK,9<$cVLq7injLuj2Ic(YKXu709=^$h_)(g?i9+f(Dcro^U=taT9L,+LmMIV
%R`4i;qI["HS@lSFE;9(jhYi5ol[*E>G&H_^>;*bHZf8/]pUh"Q?gg.'=cM<3BCu)qSf>fEHi%UAf"L+!ouHgP':V)X5&?`0h=EQA
%hqu'"IsH,(p2domYM.W#/B,)eO("KRjYmEk95DfL+-uO$^V")9P&!^O%[N_<V6m:eV4F)W2bX$$+0R;f3/M9@D\j=1Q9H%%^FnW_
%'^VYL(S?bSW`QaZE]if[bP,rHYEfjFV<YAN/8QnV*pN-[T,!M>0[90KIJ.],s35D+q/lGkj5kKgFtT,0X^Ebg#M/e6EooKhgg"2L
%^V=#<?ba>sCqR;sSpa;fhg2^'iI:''`Ors4G`ogko\mp@qr`ZulMXN'S,N4cp=m"PV7k]Cqi0?C:Ji(fJ+>S5P.:)>XOs,X\aoNR
%gK<.SDS93+#9C?q>!?(qq=)5HXlNhgpK!/#c!G+[?7r>9:Be;ZNV(rPWjB2/AG,2bH=D$[CSnglPdnuA^3Pi)?i=5d^K`?Q3Q5]5
%^D:,@_,BF]g4R?7qo&g6a3<-?:S4,c&"Xa7Jd8KF/,k11Q/L,DbG,$q_/8/kqZi,'`V['nea&93_Q@(ED*;79>g%NGY1=((Ar:Be
%qep4br^)$ImE<55=DKH-4#"psQ&EW26]p1fGkbsco)@Tk4^3/UR&_l(I/EHTGaSAECd0IVhO^o(PYZ5Lf9`)1XZN$<an=`2fCS[%
%`N./XRJ"Bus8:i'J,M9FI'_\BI]"LC;Xa>np@;cLna*-1dj/7kXdgcap)`$_pb,u=:D@0#M]3$WN(4iQa2aMcDLU!e82m/jg,Rl(
%(`VpM^\G/:ltC6`4o09"XfNciBu]JX>OAEOB=/P8UIFS:3chH0^+q7A$kqr"].84^NNOA)DWm-W<c@V9?ea1><udo@lKO14IXZAc
%QG+,t69Mus-D"2FMrJ=Edp)A)6"3@FK+gb&h-7O1XCb5ML2F)B2U^1>f>`r:H=;3nmQEA?ls76c_YKl0e!M)6oU>UNOgAl<Ge:Cl
%^3O\$@0UZ=e]k[FYAUJu5%n'T\[,]2Ushufl]&e^/%9u0=^N77E9mf?;GV.2s8:ZtVD_39e)QW"qm*_0[(gp*Q^n@'9\])<o3&G>
%4.finER(/3>:3dY4E0S21cG5dkO,,.c`?KWFNS^_4kVl8$SS-#nJ2Y-#u:[WO1a!5=k.l,IIkPW*8CY<G99!'Hr,(bC3)2C&-qn$
%FD(2^E)YRDS3G661gB]\(+WU$H7-=iakX(<SRt(RD<9)NgtulAgA)t1A^Phr/H)F7kiaA&qoEtGX?QK,p$VG3oqu`WO.SPUY<G/>
%DfUmlcL/An>^^#u:EJr:X?Cj!\bu6`i8oUI-Pu7FOTh=U$e=@:lg*fiVb[e;+.jTTpPtjAfnYun[Ar[YgGn!AGa<H1qp/#<QK$6]
%V;#`?rorH[ddZ-1P2#fAf?*XMo;gr=qu0=TrhJ4$.IU9CP^6K_C8k".S]+R9Q<SuUdYWS]7QN!lSto.#N>Li[bFPu`]f42``]6/[
%B3lQ)&t+gD2p"bdoDZl*`q#>1G056;])DIm4LnaB:jSVEJ,Z:9h:fC/Z3S55lg3_AUV7E!>^a7pXh13KG#o2nR[oL4\c&)&CTFl+
%ReJT94EFK6IK&A@qoSHXKAuRl_parJG*Au-?Zoekc_Yj#GWW;LX%dU'i^pAap>Y0*k2VAhZf&sKQ,E@hQ]L$P3dV0!LBku.d+DQB
%CN&qg?O4==\p&0Zq-`[Rm/<:L<BYf>s.k`Kn"7<HM#B!+Xn]`$F+&+k[("p7S6LmV#Gjp415C_bm+,V-P9pds0/OalIbh`OIjAq0
%`M;7e+.>\9NDGO8nW-br=)PIPnESA)=b:?o?*2e\a"&*!g@8,%MfX:.DEL'7*P?i@Z4SY&52"UK^-)45\6;%T076k`F\eVn3^)2%
%3BXum>[>'mO?6ZoSU1<VoC]_ZB<PXn::G,eXA=oMZi-@@qe'!RgL&6-;^WncF.U%YH@>e<?!94k>s6ki@mC"gjiuc<b1<'Jg\op^
%[EnT;\!`;\0Ah5+0ALbk^Mrj`o4IIU]@2P)Q$9(le\1_R<W0c2QcA]rp\@UO:HkjDcG`#DQO<1FI(67Aq&'.!=GCNRDB3P"IXM+Z
%AFF$i[-2lmI=(M5@Jns3Vh4NuogRm5lg9Vd(#?FA]t%;C]P?jm5Gu^$mH7:6)`drTmc=]Rl*I^;s4t#V'>M))o]gJ_pupr4/:Vhb
%=aP+5S9#2ZB/!'JUoqJY<F5+iH2HRnQi*nS<m-iThQI.G$dB$=*kt>O`UqaOQ1=cfmcs<>:%RZDlBuX/#\3W*n7;@S)Ii11NUa$]
%F`Xoe3kHitenPB[_s1:]ea(KSL%<&$3i69NUYP:(P7MH*0@fCEa1'oG0n4P98NO?R03,d^B`"'!I,!/'d__L%PL?d--`,6=OaU*@
%^Z+'&Dr9/2P]Ietj2s_:dAX^&DOadG/tY8+$LMf;H?=2t\QW-o^OU%4\t>Ts?dErpKj*8&"LVm!O(YkY#L6(mFm7'G^F/Cc?\Abd
%pm`e!TgE.ITQRSHG1Nj6W$X3'HXR@8IqbJKG8DTsPl:%"0UB1i`Sab2goo/n`;^V>2iEY^[2:1$M@b65R%mKl/_1kt>btS@FJVEL
%bI94=!oCDF!B5"I"3<LEq4U`C;+k#:^KW6I.90ZQ`I?o:\mM<>Q[=t=?DtH]cl?0c#m7+(.[PZ$K&LuE2:R)O>fkgO.]"7dq-N3a
%H+b)brW<EGJ;ZCl?EW(FI"]*kWY>iCe7@IsT0&8P%`8H6fsABaQ\G#"6g53+N\DWIp86T"3O30oSO&,6HYrLoYBC^4*KlbS<k>k\
%3`'t]k>,`A<Zht2/%+-\<ncGi7,cLe6[4L*BZXM]Ep5OVr#\5jKOjjQ43>pWd3uq)=3>eL1Yp:XOU>0DTiFacY9XWjZ>lW[I!@UB
%VS\2A!N1e%bF%`VpKma,aR#DJ%o[ZXT)0T:$t.,SE^*B?N92V+>Xe4l>L%frlDDsZNh]7M7k':G,&?(%fLPBa@bLA/f\nf3(,qbZ
%ST6Y?pYO07;9JY%:r/h@e1PY%ZIdK-Q?XYgeA7a(18;!C5B[OaC=$t0l?QP`PkP(0m<Q3<8m!;u"92\6aCuQiL=:64=Qm8e0oV2a
%>h+S03ph.M.Y?N90T2aPC$:l1n6RrtlZth>3t3!<$t!1oSd3.@HU_;Z(e0`B3=g0rFLBP&"Z(,+PNF0KBr0TE`f3F(K7&X+Nt;qY
%o,2GFMp6uk3o#VM#Yo<,V9?/O-k7hB:qbBW[KmQ927l3N2@9tI2;2m`*K4;kLWLPpZ4beu-hA@ARd)<g(s(AQ#h<Z$`ALP0"r^Yo
%a3tu(E&!HK=Q:`aaXYCLYR#R;p"9#.TH($0hiKepEX\N5<U-L!"H(%n3e#0]?A!N,QcB^nO?+?uIb2,;a1snhbub^Njr!=LJ:dl+
%"qQ%I(Ws!LRJXriEPo[29\^PZ$oEbt.QC6WL_].MJKHE=h!YJS>m("T3bJ7ca+qFGJp5BUWWI&K`\Yg6JE0F,FlfX:TL(fm/DoFh
%g(K&*LJf,&>+n"2.l"$24Sk(G@87_i3=etuAEMYd?:NFBWF/'=K?LSfn3'*Rcj*j(4CT$GY/$-M]5MaVZjU9M_<G"93AB7EY99HD
%JB>Ce\Ydj3W#f1gL\A*e%=Xi:/]n&H2^Lbqr*!`8f/6s5k'uj0_D3qgO=V0tSYjsbHUI>MA+[@(hmS26JAWYN?_OC=;2iC'jjW<I
%r:%2U`H:(YKOqt)$__p6J,O;>>2ruAgac<,!7o`ifc,0IGr*IB0;(2#*jc;grjm5b$5\#>:[Opt#JU"oMb$n!6O=Epm5b<@fV`M>
%isBt*3JM#O>[kS!*S\Lc?,nf3^&<[-?PrTAKWU"ocsm\\1b\iL(pFeXd&0qAc;1J1eNfph"EZk__Co_C!b"B.YD^6Zk'<mbdFCC.
%5dPQ_:=NM0T='<]Y'/./No.usq&=PuiCA`I2*])2'^u9PAt,8Z2nsMh!ZsAp]hn0sWTnA&WIaS'p;+YL[mqIP)XbX]d=8-^p.N*;
%Sb=:W&\FfM8`EBED.-M0h/WP^WZg`H$X1;;k3,A$m&/_I9j4$c[=i&Bp/'%`F/Q9mNB)s+"i45dKl=fLNK;s:JN>HlDJ"&#d5?$E
%drR4T`LqD$n_An[2P']K8LfkpTU%8tj*C-/\=.:PXSPcbdBcOV:I+-:,qN7&j[Z=H(O!YN+o#8#1cljs;b*[]CMq#:1`N)KKSH'F
%@\/o?/6tf&CKdu]J,R\\AZ*-QkdW6'o5HBl-;55?+Qub[&>5sa*)(S`c%,KnZ:pHIYZ;Doo/CQ#CXc24'=R!^Ys-A.0gof[(^]$J
%/^F]22jI"t^oADV3j(D4gqDj*^uEgSmF]Qrm*3)ZkM\(gdt/SA+rCEN%9l)>3mcT%E#5BB\-?bNGDq3UlNje8YF7`oE9r75-?S(J
%@<1*(UP]lBD!Ga;nm"M3mPmH@1cgG;^nHSK[L9.3R5GMLGur@CYT=$gMGQ5T$l_l`mh1DMe4OBi/EqAP[-PiMh>@?,ncXcVmP*"2
%_5%kJW$b9tRCkTt(nsQL]3)Ak4(*'\hXlKJCeo,%bMEkld)k[ZFk?;J6T!Bt8]!ET&2*JbZO5&[#?k?afQ8qm1ZH8/':.f!\47ot
%!X$M_4FCctbVGk<GR_G7#'M2`@0=7e&>miL@MC2`gOau;E$raF!.gb1%/A,r24Ym5B-_b_"g`HZX0?)o$f#UPb]JRDSF:4f"Yu&D
%"5o&WY[At)9UaB`Tc$B.ONI&E**j+'KAI.GcaAm+_Ff>&nZ\d$!0SmsJYn!E"'ADVCe8^f"so'mC]L2=^in2Vd1M,P)FCn6h0Tdu
%8hC1I*<Uhh1XcH0".EX1XNa!9>i^,HaorM-81%1hKLtrZ&YG*%XChR5@#qO@SKY-G9C*g#H8phN3k/2@mpRp[PoK9+TLm$[J1B1!
%=Y\T[B68,6:%rJ;c"+n"]mNct`(-J5?'6[R.=a\q#R'`-LOhLl#QfRa2J[e*iL!"@i$?Jk3RpPb[re0kB#=3L`1`2I[X,jP6qRj%
%DY#B"$gLa<PMLB)E#Ik"Xs[:]=dmiL%Z\gii7Wk$5Qdt*0Yo;mf#K[B3B:b[SUmX_K`tLn3s[[%QE8bG_K&2B!"d6?Z6'Ssl/C\-
%150Sd[@>%LaUMc/bE0%lVId!o[g^TEh0"W40E?5\#Q[4VL$c.h3L4+Q,G@:?TK<&u7d\Up+@`e/@K`^J[2]kU%tKs8H:Iu:@L>gf
%F$,OPJ/GG+8r*\1M6[NUBN^LqhuaTm&Z?WW"77:A#]Lb^'%n!H66+=:rCg-G8W+IZWANk2!*)aXE3OVZChDuS5s/(4:bAJWojEU:
%l7LI2c9NL&&-MTm7iQD)6Z!Id'B6kDY(WJ>_n+@+*)ket(`"9LDKTEd$]1s2mRR]3CaOEA#)Fk0ck=0"oKcY7!.`s78q;K&",O0%
%L4FDc,RuqtfGjIrm:`*0JS3C0aEn"L!?Xe[*SJX>p&oo+njrf`ZnPqh*B[WDd,r-%-Y+mJK-^W<1e]b^\40AYl`;mM@A_5""$iQj
%C:+t9&2l==TlpR>!Ji'n/Kk7=#d"04j#OCiGdKMLgiIS@"#lbV*(kni6_#6#YK=uia9=1>pI@_<bmFIP!]j7G9Fq6o]3S_9Z[k\]
%iF'u.])`I*7MkD(;U"(t#o%:2$Fi/U6U30UEl[*O\d[)]-Zq6Pc*0L[ZDaPaGS4#JJF@_PYXajj>bVbgfN$0mD'HpW/V:"O9ga(,
%(J..?\uMp"coogt"qh]Y(2Qig(@4o=G<&-[c0><=(3B\8B/!CJ&:qXr_:G(k=XD"=kE1^u(Lh%j3Fk'2$l(=K+Z(>BGQek/EfTG)
%c8Q$!Nq9cZD`"kD"0q2:e&aaWn.flgA-jBEA6q(FYt'Ue\HGbB#;2)a=kW:J5[dJ>N'/FSEs+cK?&ibE20hO+oG#ZjKd&pO'+3(G
%ThJ,M0pj=ac"KtqAY;C:Q_jP0:#QQ8Y3`'[%H7]1Q)/pp.+G@a$.dR=Aj(c#D!O^l>-:@XK3k+B9:uCd3<4SOdLpn?.KNubeoDUS
%3hG^$Qn4P2;0>^\!3o8+E_S>Qmc^[I416YF:!Y^L`KFUe8a;Q8\mS*lW3/sD[U"f)6#nBLoT8m%ThJN;Ec>khg*+M;#,u]Kq6lS>
%=UdJ5E^us)M&ZiWNB@PSJb1&"^K/P_%]kai/V"WLV2jYZWe)j__7E-tAUl+@^+?7p+C'&c3\clM1XJ'IDqS+TbS6"->qjl]??$uU
%,$_*?NU7<CK[q>uD%Q(W`/tT=Vbm`O-2@u6N^IlK+UW4^-=e(?d1*L5LO;d+%HL=3!N)OJhnZ25-9]ba7Ge&sf0cWIAtT4n%B_Eh
%LIl;JdVAlSFMLn=6Z[h<!)SKT+nf;W:DdI*2sem>oX?/!rc&XPK9$Kc0a.O](^Zbm:gF?+\5M5oa!>Rn(Cn/lP.A$Flp**k+E3Jq
%TH<=AK^#aSk(%2c8V-*`WHpToPW1Lg'X/n!$lhCnS0*'8=WoUO0X1V$&2Hf(8N!/CK5(K,!SchLbFp2_)n^OM)C7XjQj+6J6Tm7;
%#ZA29Qk8jEIJ,c[W1,Ju!Gdi3]PcApEaU_!3e7[7PFt8W!JZ[[,TWT\d#gjh#ciVdF:,gS6bI8gmq-=;!h(I8At,MD1BqG'<_9*o
%"mRL(0jkCGOp/3MFG-?UoP6`Bd+![a/20K1+TMY6bOS3GJ3[PI8I[E@7-]:@d!7GU$&0l_&-!U_klCcu#$V^n6>Y^Sd=X_]E.Ndd
%L4BAe+LIHqGll%jQOjI]#d[6_EFE#YS2j%JKHojI!S#!u)U'"B42fCJ&Ih'W(q'LPkcc,T?ihA]%"M(*"<5n$hAXd/%1#dh7=a,a
%NEG75!NIkNO7a[R#j)4*(u2VUB,(43=(r4q+dBhqK'F<Z,LBqu&i!eIP\JK!]jd1BUo]gM'GM+8'Q[)93Url.^WFBfHEn73QGX@.
%GZZf>3X$0N!;No`!#f=T3=\)K3fi3mO!ni$R=u!"TW#MF3J)/71]h^%,KLJ6oRZ>l$EB;j@&#=4O@3atk*^1$2Mdi4[@gnJ/\)":
%`Dg5Kf-?'rdF?Hp7S4GY@"U\Hkls(8f9DG42JOs6.&]k/fu=TSp)&UR@EKS*$7sI"LVeO!8B^p(bhHpZ]iGcbU2?)%KM]RlS.HB#
%+P3b!+bC#2OGaSk_dU:nTt4s]^&k\RJSanD!(8ONojt"sm(,WJ3GUR7e-r8\;mR3WJ.Elu^h6CN5o(gf&-NV:+Abq<m#."6e<^_q
%3"0pLg!J+m">$+g?):>+@t[L5_'N8;`FcVi1j5%]/ZB%R6lk-Bl'co7[^si^.u=M%'"*Z/$=[+IOMaaUXb%b<Ef'T'KIf\;K5tQ(
%'!;d>*H3:W-V$Nk$5Poc#qr;pbRmZYS$rma!87U1&<G4lq&@d]#dHN**.XcENY'fOH3(rRX5[Ol5dmp;9<JGq1RNuCDP:K#>_+97
%\q]Nj=.PMB(2>3eXp*TO%fC:`]!.FEE_So)*s2TM6D806?-)<JlEB=pE4lIR0O\rN+b<Hug0lC]+D,dB#T8F`\gq"<(bdG8J.F;1
%AJl+0NZkYtq)7O(\oKe"#7]3b#W8gTJH(_=4]=lZmqOIr40UkZ=@#*]D*d\#+e]+5T#JR?^8;9m8'7B?:b!PP19qW53`d$k!0@7!
%"Nf$2Uf0+gJ>^hA-AM5sUR#`KSAYT]T[DUE]je;=!YI1\R&)g+o>!c&1_$Bo>=)1d8a\^i<HuoeF?2!QR=+ot:tnu0`P`%5/4C`b
%FWH$,p5]dVS/NP!>=R[l6eKm"N2NG(^uhI1*(Z5,8@O@rVCk@qnXPuR,H$_:jCg(s&D4"s14+[TeoR>sd4O^CM-"9u,W'??-,ZCi
%)WhGK-20$-F;*+/*jl([0dXY=e4^UnRs=AfkhHo,?'ho$X^G'p^lMq,*fc7D9a7S=&442]9@iTK_C;uIY$/,^KI3L.F:*R?XA&#7
%aU8P4WD<rJa6,E87^L0:QKuYG^ZY)H)tKWHq/1`Bq@MZ=,cM'c""Ihn;\sI2?rucQ.6V]IE!f9c+:+?"MMBJ(THumK&1DmW'\Lju
%Ft=DKRsc:kEJ*b6aW\dJ%R*Qn8qDrU&Sg&Y[;0h_98@U<Rnt_iB];ih(F9BM?BWYh$ipho+DqB6Kb7j2Scfq>da#qg[cA85*A.K2
%f90]M,Qr\N`rg4S/=,Se#t\XCg('/Il0&1i"CP>g'3nE@QGL\)1c)[.]>,8;8fp1&n:jc_o5pE9/:l:h!]0ap<_ld6!/BKfjC36U
%TF4P>ab]kLfX']>JU9pj7ALTc4,s.]bQ^+M%'Pjej?jU^XqYo@M5_ZX+5Pk]8?)am\&G(H"0af\2'>hb?SG?^@MZaK"0,;n%XfLO
%d=l@T>/>`/Y\!m.GZ\WgAH\\JLaqVe#>df7'E[V59s()q"4lkGQZ!OCCdP*t$m!,GK5T15cICcl3@7c0W\24B,sbAB$*l,O*G%\o
%[neFebMs6G*@jWbb-g0\/k4ea3/+(GkjA_8dr[4V^k@f''G_6PJ@L0g#mZ^s:'6%M*Ylec*X>Jg!D!R:TR;iVV_%nce07]:]9e"#
%BD*jc[jerNnn'KGB1e[rYgB0G'Vbg_MKR=V0EOq,qRFlW"&DO"+q@9T%8c_M\.d]6j$[\^K.WWaB0Do3n;ru*#mN97@q?R*-8Vj'
%R7(QpoAD/l%d'?;^]jTB1r0;fHf\q4/A_,Mh9SpqK7l96OCQ0mKX.al3m=V$BlP\T;(iq]JWtdN!<oUk!on(7^PaOXMsI*Z/.!Z1
%;LsT-63;_J8P+2,0qdr3*fshP[A#DVZGm1#24I''L#HHI#EocI:Z>Mbne%c<qX6%Z7fgQ\&ZdIo$eQ7b12/T[_r6^_NJM4q#VsN+
%#tu]35UG]rn`IVK0f1d%0F=;WO`hC_q?DjF]$^YrEUYf^Y_GYs]#D06d3Ze(1nf3M=%?oo)c]_&[Or/hiK\Z[r</nB8ANMn0(Uk]
%T#%heAY<mR2Ci;?R#qpc&WAsd#0k*7ki1NL!/B>c-j&IWb55WunDK-ki#]BBGU!cu6'H&J"sc?b0"6l7_*M]IbR)ofVmR#(_FK92
%"4&AM4bjqRr=Y5dZUbI$*K.n^0G;fV/;B<884>]F5aN1eY_F;>fcgF\K$Q8FGFFu>U2QfsUP@;99/\EY0Sg\DFGO,2lsKDUnke"D
%a'=r8_XX,Dc[ZiuEoqW):='q6e!Tn$1cckH[IHH@a.\)!Aos$g1(@_59b0N%A5OD05QV%%"L2BUa_=TX2t7`MJ<#7o(dY#G5rP$]
%E*$+a[EuBVZOhc@9T&pc_/nm)L2r:WT`u\[6*<js&dEWaUUmaXO7[HI`^-8O'Od(H6$2P94lrIlBFS,P(5G`ec[0^mR=J*T08'GJ
%EOue4L!^1:PrfXR_pV\N<a2f-67(UED&<:1emTJo?T\D#2XrVU0UIs_SrTkE5U_7(C.qgB8kO`pXTMTi=9k%%))6ePad5SCc',sK
%B`h>C#dQQ2+.JtD6]`m"M[Kp_/1#=soDi1]>pDn=iM_-VqW`*!f4G8Uj;\mDn'#co75#Y`#"Arrql/Gs1rFS'`oc`f(C%%\@ZJ>`
%:F0^ukch/m7?C!D/:q\je/FWIdcqg:)6[m&-sfBAM&W@I6M1MG_gSLpO$Ph)q+/#Ld\\);!ts3h,i5>AV2T_h-:+53Y`AD/!.r5A
%D!@[0<+9>k'HA+4WQ-VPeg,iE+;";LZ7fU<'4i)Y$9Yk/<us";_E:=@h"HOK9lr\W/o5[(2,Y4]m_4O5B3h>-9ajg7)7p50pfJIc
%$kJVW7qZ+4B++%BOrO,JYS)ZF$Ni2L/nZDF<i1,-M?,ZHL/d)dqgkDqcEf2V5jjM\`-'0(a$<sDQNNm-(+XEA:YH?!ZdI%mJIQIV
%raFIsltMhl`\S,.@*sMJa*h&?WfaRl5?2bV%XfcF!\U=0@C+#?CSLp274aH<HBIeP*fg8Qdk2"[\Ff,F/5%L95UeK3aD47PRf#\.
%U4qh<K9*HH@W3!%6FO#u>o<s:Qu9])\*XQ"1'[O@#G8=9>%)S*Kepe;TX/gAF2lSD`0.<uN2-mQjO"4@>V8U`;]K)0c6M-a,H-Sj
%;rk<Y#3AI25(!5E8S$hS/nPuSDW44nks\Fr&A*6V*",E[=uZ;63%!?7)7Nh=bX!@JUP^<#7?B(R`#8V[0Sg,m64?qm(JQGmZrJ;8
%G[/0pF/]7fk1%qsj9=3T%uXCIo1W!SddaNr=El*B+OXC6SfP]k#]X.e4!kk?km*s4C?0/>mYA*I<,1K=WhD]icoA>3DTeU]VW^-K
%S\X;.elQN+=2gqVU:S/Z@aC7mdWK7C9Iu^/o,c[<-+=IsW.n8]7XYH:XU'&)LJ&P9P,S`[:s1'(TYeArg,mCi`FAfR*rp1<lS%`O
%!XLe@!Z&tbX.u<jZ:R@h,UCGR5='iG8Sfk^B;ifQYW0OReQ>pt5S-j\KHmgr"L[?u+<boe7s!au>'jH'QU#8qABU7edWm&*_R!60
%\I3+/'o;"+fM(LT\=olHJ(dfqM2`)-dC`RiNI_kmPA8`]==hPL`O(9"#mOi/#9e+(#dGu3e"p81"JjNmJ35ZU49_1!CufW,!:)oA
%XL^/AYTR1Y#[h-+Qu-r-XGaN:MMp[(QZAE&f+V(Pdm`HT$pbKdb(;K@St.&rE/G<i:uide8[>&TRP;()!\8<tFCiI8#c)I;$u>Q!
%8*2TnFpq/J]OdP%5BA-kkie/W?nKqpLL'0J@5."F/ZhbW%9KhpE.LLj;fSE^R/l%Q9.g;SX1;2fda#GL#B>PEH16H`ad%E9*h;Q-
%`!A=IJfD:e`28+9Q3bnZ^6.CDft6SYr+8SMncf]CESV+pGLP\M0nG@Y)d*[WpSlNK`)&tNDA6'JWX-<Kj?gA;5mXJN0&Ak.<h0[D
%e8\^eL'2^CFEt@:`gD@TeK!8m2S#Utc+el9cZBOmZZW]H*1(&n>WA/Tn^04G0Y8VK8=#P#.2!XVTbD.`oX\q(RDD4<b>tAUVWqn(
%96N0t@T':oiq6`^(O%_cB8dC+#[MR1jcq>j*eqQZ4PQ$#3A!@RUYWMIVpK.e&4JPR,o#r5#i[W$0]'DI1mA_Ys8TZ7DrOp.bKd]\
%aLXp,%4[r<GLj(q*g4ghKB+7e&MPOO/F^2e6\9-BK=AXpgEa=C,7X:AZ&HTlA0N"H6`2,!/GG6$[t-7jk8,\Kc,kGln=4YTI*R<O
%FbSFN;Wm=8eELWJ_PD[G@eqIV?AdPjK^QfF8OD*S![upa,D\]7*agmK(O\)%D55eh"IZiClS,;UP##oRE@IJh=BN^X0hHJGY5;$E
%I5`WM'1%*3H8I[<jCAQjiB$>)gD$%.*21eD;Db1)KkoUP$BsKr$VcF-M-pG5.BoOF4?O[YOuT"mf?mJ@\iib/qdTq_A]`k2A'Y?*
%!c&-G,WO5(Ls:&WonAE/0GJ>Uo$1o^?!19g6mm+0$k#_i%;Mi*cpM4'HIUJ30>M1].JU1QKbnj:.h'QL)nZr=S4`/6E2K-FB8T%Z
%(;S\1k1gTN[F_[Tc_]*B?G):X\K![erJFEU2HC>,S@/ut4S(k;TQHlZ,"QsCBI"/b+nYO0fiRqCl5r?8:6!%.'Q8Y<[OkE0.*L+0
%QZRDu>g&.nB?=,2L!ufagBN9=rZmlNG_sM+o3oT[S\ZG:WD3[a1:MnF%F?OK257\kU9pNYlftJn="p;LTSd:^iO(OH^Zjrs3#SV;
%e.Zk/a2Oft$O[nZ.<Hp*gi<jl'[ftC&>=,,>=L=I1+c*[KG!'0RGXSM2:6h-jK&RZPNLKVFJj_R[r!Nc)^]ff#VoX`XVeO>Al7_q
%>*LYG\F>bOeeU$Ak)i_@;TtNEniJDU^qL;hd[5C!E$r\SAS?lr<'iWWJ2ep3+PGB.!t$"XbWN'5I6?ICT6Yfg(P/`#84KJg<s18n
%CTC"`0cVVB#$-2qTYpI[Kc)?]7$&=gKrZi%rdMF%Q;&emN[>i%Jg_@O(lBG4BG(?9Hq0:<6=f'8*%ZeTh4k'E"%-/^BX+8O.('ai
%//?;O8?sLPJ.)dd%BT%S31Fcb;D`uo7OWUMg>-]bbrSoSi..c#-(8tM"uLITOfBis>4flFSCQ*MBGSSnMZ6qh%nBR$,BB+6`f/#0
%fH$V[XT!C[@0rONMq5+3LAbDZ]<j"uWLsBgB1!49Dos6ETneaA8B?#WCS5K5Zc;0N"HmLthA.=I?gY\q@e*P?)EhMl^^7Bk(1.k5
%4YlYS_,,BHB!qEH)*t-!@<D7\P!CRa6BFR7'X*s6UdPcfbJ@G+,)BOX)\=&4Zh"m6>b2/;nNq=fDM#/OZ7fS@,cFJ*'"DCHcHCbq
%??bpM/(;ib[9H?T&j1Ef)(f*?fR`fM$N5E#5V6G9gegLP8O=kj;*]e:[bR7jQauVM&Xju!X&:,)_/\9=?1N'ITr':0:h;)E'AIKf
%E$j-t92icoh*abIRR,g[Eaq.gX>O;[V[4?lCth0Q;:h)I\n<FGo&u;M/M'mI;CfTX)9Ef_C;j0MLUNa6P]!q8+_L[=O-;8$"reaH
%$.U&1SOJGO27g5NHe%UO(.(8[il^>UKf'C*4%#s>^81N=Sg^4`+Br]kFZt^Pm^AS&VY^Z&;@%CbSR"_1?86km?fU(a9gqU9$qFp5
%_o1tPMVla(=?oC`5kN;YX&W1+N9#Yb"EFoVJIDjj<0V%;1)U48&;C2hjjm:FD:MD>1Cd7L4Hj=l#_49T;Ari?Or[5%\_L#ZP@@5?
%$(Ve5-bduoH6MCFA(HR2FLd\OK;P.b8e2MiDYhe#VS(lB3m#k4,j]_WFL09R2$;UC%'hE%`b;s3+EW4.)PY?KA:ohC>X"?!O<p$%
%BVqR"<YH+fF:"KB'>j%OHP_84K^Ot*CZVoqh';F=]uu\;B4hd3c?_(B=]CtIWo5e8!LK#,GQls_HW^KZWB,\b'h^R[/5J1R1e4Pp
%4J=!29/k^mS4[-`_nn'AB@uS1A!5AS#r5`qj7$BB_%**f3`e6CF6&pG=u'nZA]L6>8;LbY4J""gQ8c"V<!JWU8uTj6OP2UOX"L4I
%I_$Ef)%#NaC8MF1d?Np)+B_T:0$^d4L2\c-_BX0Ye(dlh/@q5EQWNnmW`-G84U8eZV-nSSTs1B$2GHaO(o/IAQLpmD[P-Udiu_qk
%]NE&*Y[q/TT1g@D"!P3AWML5IG]K^_KtC6YQ#S_C4X;#pTe\jLJ^Q0*I+/KjD<["HX@bh#l9ad..:0e>!9'%$!?Vuu_NB.H0jo'S
%_=[6p>$aK+66>S7.Reu$HTId+j2ie$b1j5]S[)^L8`PT=#03W/W/WJ40(tk7hn2""VmqKL4"4Xuh,KeNFJLRKO0M'h@:?Ka(HoE"
%n;TS>7oOl:TPJ0#bc)!\??uFaQH'Y<.k+<NS!I%,jF:W**E0s51WHsr5qW0G\u*ILSS.P=,lJ4^Zgdaba@@oUbV#7hef_XS_+A<k
%A9)5Wbto-+!]T5oiDg7JZSGM6$4pi(PR7LI2.k3&4`EDBH8a[UjNgaWQq`o$Z(7peW=`7SUQTYpO:'LVWhhoCs7^:$;:`!1'JB^?
%UG5T0"FBhg?C$Ql/,JZ(RDT4mBip3n:[(T10DK4@ZDLS,<:&B5[gL%/(ga@BH5(ImW)g&]<X=S*8b0q86%"75;[&Nod\X9A"\]P"
%QhgDWSLm,cT"!-]RVG9HVeJV[i3IU-LbecU1dKf@*lHEB.Wr$jPmTA;!F`(Q<%CtkJ5C^/'gaMEWX6T^*0[B<O(R^XX/e>QT!*mV
%5;JMm)7mKDX%AFATL0N:20i-4Kr[C.rDPRfTR+-q*$8>HEZiC=)_!Bnk]GC6rI=OtDV'moaj,88]`To,NQLJTJ+qMo&#Fi1+TtM4
%1S_V,@3q_dOB"Vi2$\O+M/P!;3;`&`P0"tFAl_N0-m2)k`/Y-'2)eaJf'Q:=jOp#hFW>h#(+M:GVDOQV,&tOhBM+XF]HhD&YSo'Z
%XA3a`ADp;co)A90I`8SZG8sJ,U#?]NaT:MV<g=<0P_PQ7;]-J0K[s+11HFYn<-+SHHE?2MjR,AjnYY/Z)QW6&?]B]@C'snt4TZR\
%Oh.7qUpH'5eAG2EbUK=b(iUG0]O[INSI\8-aJ)PL<*Q/7f+n>)WoV<#VD@Qk_s]n5fXA.mj>KCV@&#+:3Cq"bo3MK-B3\UYpC]0<
%B?<45Y2M6G(edIm0&%"uXp$+WV8[;s(dUf7"0)D!_kH74LQsj29fr*Qh)dXKlR3HYe1'ch=b1-E8fYuA%hfs&4sj+o_ZM$`G`Pt5
%$3YNlE4Z2H%#I"hO/,nG;CXRUH*<c.ba-%<^5Zjl3fP?-M.UJ$@lMgK<qFtj=;j.QA\'aY8<=QQD6BqrI5hD=FY.J@e$p4s*13[6
%cKW'e\I\tQ6<_U'ISGqa'ra;S?.S!^M2o<@96ZTfkAk:1!6jDcVB20&7;sN+Vb%p@9/Su%PTRjaZ1MVRZh#_F$K^3rFHUD'h@7MR
%jse(1DLMC?2/PQ&OeBcS<ge=h_o*siW?.D*P[.1:XqeoV_&[6Y37o^YiJAY]H(#:LIE_6^2U[>/CtXLW,fRA:$PcnWJ@$GbH>F&5
%1T_5XAn($[0pbK%A=>\@YH'nglf`[K;h9Hmon]5=JUm0J&1dr7:4*@+4g#N$;$!dd8f(M<GM2Sq:S"`chW+H;=2307_JG'C5S`(+
%"I%M>&,E/2_:?j:L6!'$WZVoiF"bu0#@<Wg;?#0#*_0A(+JaW\7@G3lhKASK\G3T]?0:bN2K:hfLL[LS$l!(`cchkDXZN[`(!,B=
%.,f2p,cc,,SomgMo;g0JI.c_\mH?_rB7F>ljd+Wp4\]dMT)qg]LoX^@ioplU]YI:KP^"Bi\)a92ac6k80OIKh.9KX4N#b1sYifXX
%?%ELFF'j%mn5[@jl>`f6f77^"-mn;u)![:j0X4-L')1CnGa/R:"AHLU&/Y:^A=rFN[eRAU0m(!nZ8l&smjc,pW_=uO&o*)%ZO/X<
%>dd7D*8%:nQp&[c1"1qMPcq&%),f7k,:81u[58_GTgpnP"]eL82Z4]WTgM?"l/H>dGA)YJlb'/HYc`(9LI+NYMt?0AiI:R_+bEZE
%FmRWem=7@L)fRc"U8<;tZL3J*M[0%0&KQ2X\/kY'V#oZH?kgFE[!?eTMZ(OdfilTLq::QqD)Gq6(`Pk%;V`":*=gONSc9-@V=o=M
%0>0R?DDkN.;iilp^:!H]o$.PuRc]F`'2bZPBQDdeW/!Us&5/**lHLYAnta:8Y:BlV,'?^N/K=U/Zc+V:_0qAej:U?)H*c4,EXNsV
%I$-7M^";Ier&T4kYob1D%rX?rN;dNTM7)qW[@/"Vmn-G[;?K98=5+eKfg@!UgC8>C[%]<A^/Bl`SRSUX"j_)"mI0p\nMp\imjI0L
%5t\uZGg7''E$S;Fh<Zemf0tFJNM]S`\AQSSU33"[K*=OYkW*R_MTsB`%SS7q/EfJBd3aLggC9\r@O>lo66]eeET'p]0QnI8@82_c
%cT/SWr%]0u`JJigq>g4m]8b!-o?-lP4%Yr6W\ZOX[s6qSJTpnX_&GpfK;YnP@o[)h^m81!E'fBpdn>%Ychgqc]3+*pl+)SKmPRcf
%2>pW@p5*nJ,ZRpY?!Bq$eu4SA)Z=C=r%b%aPte8eRa/OY\+OjtK!dqaDO?H[%2Mu.nOR-3!YnQIjU+eBj\Y*A(Xj8:$#@sif@c9'
%(EJ\012SKpCg]<=UMj(Fq\R:]%Z',k'W1,J2ErS%!N)X1F#u(.\@7;@;m48)N43M8PB&Y?_qTG'g[4K(dsOoWS;Zl9]:T2!(GWju
%4%9jO*[c>9\c=52bZ47h,NeeuGp=,K6or(%cql[o!#bC6,MSu.?chYI.KWF06KFaHRHTHDpJ`?T49.pdMt%fa!j_NTF199'2kb5k
%Rm))Z/d$L-aOZ$L=YA,HLH($&'V9ct],0=2W<aC=PtB!1QSqOq@?^Hn'8e>r%jQ(ZF^44cREX\R#/(q<IY`$]"=qkio<16Y]T)Bu
%*aSApN%'n6GL*qD97NrY.&O<g&:IQ"<\NaWe.krhSK$&kjuP+V.!#*U2OQo5aF#U%E1U"gkQNCqpp`:<c+jC=R>loYdc0s3ZR-IX
%oK>Be`i"9*3@Q]h9BG>o6k,\#W.8lZ9I-W@fJG"!V;e0eGHq]A,OZ=')k#uBNWWuN"3?m(+PT16S+E:Tn%d?pVh7Ne/:$!%S2##p
%M^qoD9e4B.2$]Oi!iZ>#F1*2h:>KnunB77/1.#;d:7b=+&P?V]5cPuBfd;e&D'#*dCU:.K.AIA`o\U-S0jfjr'eQ$>GS]'bg;=ZD
%4GQBA"f$O<C3[Dk-]S$"8*Dd)YN];-?R@`(eQ^Y/2)_'"e!pAgqruWoq5$X57&-1.iDlp[.Pj\FY]9.fPGn,O:*5#h=pbie4rd'I
%8r!qD%\',0f8L:`Ad^=FoYI=Y6(hW/,BT8o=I3*c@_r4VlWdariC&SUJq1Pb9J+N(#2/LV>Us>o2Y1M#$pSoOq6[FI0Z*W*2(m&t
%M`DWu?"UKppZSQ;CtN/R*BdYRer?0Y,hmJO(ap5)7A:0?"H!^pZsE4b*:]Va<5pO'UEW$@<b(#(9R%7M*I/TT7Uo$%0Ps,OXe+5M
%cm"Nl?Sm&XXA180XV^(@Ym&E$ZqSuZ9a@BJ1>U)Ra#(t-<?s:MP2;mpCD<bM@=h%3aWdOCn/+>5SYJ!FqN+#t0]F9TdP]^&5Cs8'
%C'\snTE1>H.H9U5)L;U0nM0guD`)-f,@>6WGnI!l*#Bp0F"H#+J+-7$3Ch%B/k&J#SF`#e".Ka?#pC\?CL<7Lf3UBnPjdqLY?dt$
%M:J^8RlTIk=^0n*<T:<CGZ>Jk?aiHO8h@l[D>C2&VI(qM5]iBua`PZUL:\W3$l\rJ9Y'"2'uQ$Jl!T`ZKg'g99\fH=HI]$KN%>!Z
%X+LB&\<6?c[aVZe'_lUe-::MK%3#XLh2s.q2:#(E=A@ag;&kJ?=1\["Ulj+P<?>G%%u;N#2]gA$$4U(6p58"d1$U4oD2`CEUB0P6
%7T]\eU./G5,7>2`egJ=OBr5@=*LoU83;+mo*0#NON#ms^JodP.\.m0km[f_a?XLu"I?MW''i*BTM-lKI1nXaNK.Hc<@pQcTHp?d^
%o&V8.l'm!&<f+[Rhj^)#77<3.5hq:]Y]'d\'g%6>(+^ESE2db%^6[sEhIu`o[Ur@BnH5KDei`?V4o5GUj'.$3\X4[B\p;Y(-"_]V
%&f>jD-u1oN-/NVF,Pj61kFHkN>2BU!PD/Ir1t8C<S#]pm%8"-G_L<Uh3m-E=#lZ.k5DnF<']!8Bcfrp#NK;f;metGbI"kD3F%A1n
%I]'IhLnlBn6.08>ZsZeT`1rt#i1JQ+(V%h=^a((-YJP;JFR\C'l_L48;Yn+,,`rMO_fA1ue0<*U$!K#7%qE1OJ,mB!*A6Y!m-VdN
%LkI7Pf%FAgWg?<cI.h0M=2h_B:B!nS',^^M;]-$q.8fYZR(&A14:+^CX[Ndt@SU)F"OQ4P<V;PE<F:b/J;D"j<7sa'\jc\V%gB@u
%GbUY%9@f,dpggUUWMWNKK^Tr_ckdf!PV?&N@m"Yq:V)W%Cn-:9Q]fYhMY6-NP\34Wl/:'b@Y3m]HVgf'VG.F2/D/.@6U\K3_HN<l
%M0`9Z4$17E@0WUO[O,0)M@;V2,b7kU,+uA?#_lU/Isd\5FpK#C"@'.oSZ7Ak(nOmckZN&;.<mK6^ZL_/3+crEl(o(k^Ut5;#T6%e
%,jjYp$C=cQo[T3OZC4W/6<V+Z>l^D?Ofp):q6)PE7=pek`PbOLd?r9j*5THpRspLZMBdRI'd9#ZGUeSdJL=dKkg;YB12R<S#:q\N
%HJ@t5<QkHSeF\sDe@cq*Np8D@_+*N8-u3u87;$L]"%0%JXH"[&*YF[W:L!%H4e!=`kP"MJpT49?AH[A/hCE7lHosH-p/(UYL:`ci
%N5^W'%Q,/G8a-m?U9$-cVCfc/7=:9M%L#lL?;a*D,NALZiP1L5UOIZQh3.)(?TXa?ABI=`ISkfHe=[)mV[nOGNYuBURH#]THV>_H
%<Om4=G+/o1j0?NP3_9FRDhbP;*Pmt#p[l%DT,2@bT,=I/AQ?F^5qZBSX+SEl2`;),a:met9/lo-:H(,0U1tC$=l7i!f`mDgWmM0M
%-Js,?o0a%oR4,9XDoh";ZpcR6F'Nr0h=h[d%Vpnl(Y-sm@Zla:`q%Idi[,l:ar+Te.sc+"Wei37K';rh"pLl8g1(l(5ZK3P5`9uS
%Ib)4-QUa069f'OSJW;:_F`la.'Zo5Ye^@s^O-&LSU*(eeSmJIO3'[+,>b(gr76Hk>O,%aGH2S]n3Qs@7(mnKa=e%EX"PL*KEA,12
%5oGo3@rW8L:f(9o=E4:NZuK'3W5,55LR,J/)9_t4'il:EEnLJ\KlM%W,q_k]1#(7r8,V.>c)Yt>i7kP\f2=BX@nTDL'=Hp6gW=2m
%ZV3sdE]er&<Jos[[>>dUTPsDP5=1i,]P_;)"F6qZ-7cPZmgg!\/'Y&a#SN3$MWfXb+$Cs=T%>]i%/-!MRb!E3;OO+SGf3BjhTpR-
%<6.Nm=-k\)c\<^sNMV3Hr]#Mt6V8_p`.8[L4Zo:O,;#c2M;rfbKQ7X<.N7^rnnYCGI[eDHY%-(h^gH:^BNSPdho!WV2A)-p=CnLB
%ll,hq;XVM7=&hbSh11+CJq%`^$VOe9YTVu(qnaSX\.mLL[lmlo_i@U]\sLe=D!b]rEKQgok0<!HL@o=lW_nmWpR!OJ(RQ9s=->G@
%a_A+"^NOd`h5i"P^bjWp1MA%PC<'ooJ.5*W]?YpGi>dknbn$a(K?+eD4c@T_:$8lEhK5%[+j/)LYbf)LD;<,>X"2%A)6H63_u:h.
%OeW_*ZH@</?c5=M=04bBo3H:l%?$j.lK.7WC/i3umC6_K8OHr:`l4k)kCXSGWd%`KVuc%A-@3/r.RbRH55UjWH1kgerIH>T3":cB
%6I:s6ePs_4a"[n:UNpIr%1#9%R@um0Vbl9_>R^^K55>IW56TF&eMAGiUFXLaL:Dj8lSF8fhbQtl$hrZ/aOglP['=7VQ"^0`8O\^4
%R#X\<!c*h%kMC=7$EK19S7g&#^ar#.N];cMd?cFl`*B?\BZ5pCbZskrc$5;"qJF^9nC.Om;(Rg3D;UF,Ia7"/7%rmPoD3&nAT9j+
%ge^/EUAm+7Ga7L_>kY/`*4hpTU5`7G<3+sF@tmWPM!e,3Y>"YcA9rK<e)&El2-!3U5q@)$MuKtfT*J!#f&SUb+l/&d<Of-fNNp+3
%pu:d/D3;)?WmipR\^_b0;3pJZ]CC.b`:Yl+F#R_d:'3H.No\l_g\8\MQ>bGCE^m%2E1'`C!ehq-2*,t3XofHOB=@CeQZnPe^okf9
%-&lQmU"//pT1l-8KI*VkKjq*>Js?5NboS&@]j2^o`s6n-0g%[A*3#fdn+#2lr$tO+3'@#lE4K'6-#g(GU`F?\)YBOd'%Y^4JtAoE
%BN_3('NHJOT@rijAclEod@T].bp_(MMjqoYCb7tW53;*O]-Aft&(s32@m(_4:IiCeN4\\K_Qi)sV7-ABY&RLL!jt$WqUm8=4K(.r
%1oW)VpGid4\L7mq.X0(4NF6EER\oZ7aR^\#8td@>+u2D^c*a1f*^a$f]<l=BUnDg`nMiU,3q;W8fZ_TPIe9OVoGNL:-eW<6p_l7_
%l.#e&D:D_R1+mk9dhZp7@*o9H(AuamNqoT$UWtO.!CT847H.i1a%Ec[.obTGcWs"(2@92.M#ETr0>&&gl7<fD@c3(0j9Q4aDbA17
%Ti_@C$@C,oRCKE[#Gl1Q>JehR[Z+h\YXnW<BS:Hl/^]dd5+rJL`E(jt!@qn0YUhAf&onr&d4ouN[f58P[NgU?>7GE,JQJ]lNAX:9
%Tkrj.9VVJKMR@82)C:[cXC_Q=2,kg2G:H-6`?EV?]eV6cW6KnX0h2k+!cWCuL.!,)^cH(e/o]2e/SbEN,KIFE"Z,;RC369+-lS[+
%V4Q^LOo,7BZXsclBXhT>k$^)R0LeltHF3692^@d/J::N>b2"b\ZHJO<:MD3I'M-J-<b]PF&Z.ps>`t.fdOUaOk,n+>`s@N!<U.XN
%mm/FP\BT>;Xs"+M2>=LGlQKh4OGrI^2mrph62^<ubp<DAj2.(A0WDVb7E:<+6DOXFUuU[A*?(,VFtj_H2"UpUR*&Aq.g)K6RR0SO
%=mD*h0g3&$-M_/scYIaLFk<dgm%."/b)RMt,4bECVN'tVlbPK8T3g+`rOphK!nUG'DH,U^5aQQ\*@/12+9i%**+ZkJ#T/B?8`)"A
%=R$/?6R'O)`M0*"77_fd?"P>)@:jO*!gbVQ2!$`jaEEiUJM%pOH&(H[r<)PBjQEee!X<pC!*Vl'Wol[jIAenVYTbY<,D5F,LbB`A
%]g4[)j+_m8R]dei1J(@I,;LY5,i09AK+ab(7l*no**YYe2^M:n+3aga$/keZ\P(efXG[L;iU9.\dc1D7Cj-ltPr]"$,c8N]T:uoA
%@W:e>T"aCRT-.;4A:Qt^1Zs-B^maK-DjmYbM_9@%<k"Qa'nP4Gh0'ba)?LEi6]I]R3?,`.3[Q^OGKhVtj=#EeStc/Ja>`25.Y;.!
%\9!9fLp9nQ\3+")K,C"h\!.lX9k-^P3/08HmgL="Y#'-*CV>!VXr2>Kf9"Y@3!(_0Kh'P'<?AQkj2Uu8C,UOS,l,n_opbud1Y#:1
%9sM`S`@"0`[nShOZduF!<F2mH'%;e6_K:g*'tAgV.$iB`4;-"X?T9kE:qi0ED7Ke64-_\>LJ0#-C2uTlLf9/*=g@2%OrQn+'>7P`
%I`EFKE2aVR$;>(c<"K4JA`7,YUM!`e?lFlK>LSa)T\?@KZ.NTVRY1Mu`!L!)0s[fKptXG7E<T"_pUnH[cCsQb]"%PYD&mNR&e]8Q
%C(JOCfEB1[l;fCqm4UAH#K#"`@]_,[;!;=#K:NodA!)+^I1RZt((ei&3RM5L3A+9n\*atk.]0j&,)!AsD<2&b+`PA@F-VbWMm>g?
%Ni4R^ej._jFJBgo8UH9(TP0J5:.`dLdd`=2$Vd**&n>%GNh@k>[lP,KlL]UP6"L+uqK=7KiWfiGBe4C!jbE)c1,"7D24MP%)pMVN
%il.#'ihHG!b'eH8i``X$JeQARD-ib`@KiiFBJ(dKMHbc[<D.JFK:'5u2,0]C[P<-3`+b3<'<S9.f4-`a"kFmdY@l>-3Lqff7?i!I
%5gZTs&e-.<oOt292;$1D!!1KS@;8U="RR?a^WY+Y1(t+5*m:lsdn%klAk&afs6B$g*3;A)+AKV>#.Joik*TV8N:Rg5)T]kc#*V4Q
%`IhC2&*8^96+q-$6fr0b2jQVW]9UR;q%]IGoP[H^h'l"-p<(d'\fs:_[CC1uhkj)TV7l0$j8`+:(/sIMbmo\>.R0^VT?++#Yua^I
%jYUf=?=QQ\mcgmLXVPDDIpnMak0<c#A0Ltu6hD$->)09AHja+4UmE$cMhRFqX'dEOA#5Wi%.WS&7/X<?NYLhZ_EZC-\\O+%G*P(6
%R)p2f5ur1tR(J*GpsXH_ZtsJTg:5@6)eqY=D*@*PRbO(fVIP2kc*^X6Ls3$/@$e/73C,Nd%pC/j^1.!\ap]l@dqM+*6$(:4N3Rn9
%%[134ZcJ/5.:jM9AQ5I=7'dRY,*,AC:fPCo8%ZQHS.C^KQS+cVN'8>:?OrOP`/SMXA5ZB:5b'r\f=HPH,UNQUGL&.d-T_q,)W&pr
%:\a,8fqBA9lM!&'!VJ?/OnbgpoJm]o+_hat?UR8M[[EG"@REal[#=p7k%?>c@K6j1EZ$?SQ57:\.q7+10E[*4^akrr#M5h!9GeKm
%+c(GBTh;I*#!'%'LOB%=fbR+/Xl0S?&\9l*,FgQUR[jt&@^I]V8]=T1E#"gO(aF'k1th0iEU2C;i_*o#4<]I:<s_)m:BfNc)l4de
%YCa*]:",'RioWN[G(_<8hSUj\!,cN)FirV\f#;eVgcE8jQ)eSM\@)`K&(<M)H7#q1pS8"*j];eKc[AB/5a"sR\R[SLCA+r@1ionD
%#q]\%jQ3o;COL.Vfp:j%Q9.X&A,CUtgD3d2\'8sFHG;i^?>X$o%mq&nr@JAH4nS)MFP9I0$5ei3oKrafNLBo0F&\&56WWeNeZHM\
%b7e)7NG1(6g.r(+40Oj5/I$oH6jM+d]]5)n:DOe8h;R^ENiSQ=I>IGUG,\n",mp]bof/RkgaC#80<r8C;,.@#fE%TlZ%".+?^ZfR
%^Z1<VC_olE*X\.X]]k2@pJ)k5X:]US8\B1")&`keGnpe3[n^TVk-r=?C*%L3o+!he$jW,hZCmK-G?J<QI.Q-?Io6l8_T(-s=)I+b
%g'^-EDYqOG]as/+26P(Ee6VfdNm!/'>:6"`9?_h66VRli@cl.G;mL#SPj!^D4`0`@5Gc>Kji76;!<%0S9;[_\)EZNlr&mhVC2@pS
%\G:oYMDfl2WKRk</bOAl6W"%&%/!746(D%bf7(/OSD$u\3DDY[:)T&F4_U=H_+R,c>J9;aqG/M:[q&7WRT?N]+Z`LY%F9rE)F5t2
%@.r]+;D<d%mY\MCoj80bCZQ;`R-,e%Y81JW\qa<S0?.l#KdI6RbD(!71TgFD'&B1":jgB,Hf3Xsk&0]E[mHE/N*%WdWmgRm<SFHg
%>gl:(1MMlrk`eig1l(C+d"S8/KjA>P*#G/VZ00#ajq0/S9SR8__\/E7R%A-q6Q.-DF+3$kZb@0.`3T!glX/k$T-riYiSoVQFc;IP
%.$b]iLrl14J:*_*nhm>;UX7XC>6olM"pu\@bMI0lk"-6#Zoc9_kIQps3)[MXYoe,D(tJI=/6B0<D(3ScAf0:R"%ne7dEqdRKlc1]
%k8)&t8?9DSW$oh-?I]r8De*Z=-`b-L9Ua=CW2="OXuYM\M*ZCkN[%!9'#<ETl`[#k">1.t$IbAP+T^XI[b1qU,D$tG%`>h/%^j9[
%-[=*$GE)CWQlL+g*U@]0a]c.HRB//LEbMHYa0]%e;oI'S?aSXaP7S%'Nj4?ucdt%pSun>gklW(O;\<43Ul'0.gn]`A>@.aqMsMY^
%[rt(2YfYIPOei7,]+J>[eV7<r245gs_@&qL#.P#Ln:Ers,]<1=;9L7rNNblbMj:ke@81Uh]hBFFedtR7o7JV;R07Oh'1b1C*dS^u
%NW-G3?@Dn8Mdr*K9elj="Pp^I)FSqkShYE[)(1:j<6DM1CTi0T(/tigi/MTog]AHa.&+Uq1U:Og];m(Pdc4FqMC^OT\5$poOX+f$
%g(3'ZQpup!G\P4078r-+B\0k4faj?5,i(Wm?'cg*njBuS?0)9p-q;7BG.S`3KV%I79AMJiMm':WL9,R=DgWYbM`k'N"FP3rrV=YI
%^_]0@Q@*\P"5kmU*mN@H@M/1/m_6aDI.X1gCE^\fIOl3$%[.29!j_Q&;Wlg@FJSeh`%m1CUtqfK$/ha:[Y1N.c9=OI(]j*Od994b
%`tg[G*qEfNGHl7dhR[tPA5Q9q@quB,f5DVk^'T:LR5I[:Sorg0HY-hj`1ZHnP#n"'Zp/18(@K(A2,?7Wd*[-@atM!HP0;[FhJi,C
%ED?PI=7'(oH?CC,(E*!X4!r(p`,iY&.e?gN9/&YCZV;TT7OPt"&Z(Bp7A::Y_sdTTF-KGg@eqS0cF#geZE8=fo-6NeYBN7HGc&a"
%RCX\>BV)54OfiPSo!3*bE6/U+'\Q^S5NV=s+3(ZV7\tHkAT*5/fYKY;[Z_jgWFo4OnJq?KC=u$1\Qo:CYNEed*b<+$/U17BY@@7g
%F6[?l=+!O\(l[R5:O*rcqN/)kX%rYfJiJ;BO"f)h&V4_!N)Cl5UCr=.caD#^Y/A`B+h$3YDkjH/SShIZonhd-J,C;XG)NCBk"CYY
%]<#TeX4DPA&[tC$_$p=odpSEIjo7sCKhbuYEisYn2ZQdnCjfR&;kN(_7KJl-!o(tF-P7UtbPJ'&H>OUY(pu-IX'6O#kff1^hm*99
%_=FOka[R*O=+!"LEbEG1YsbRZX:()k=f@X3VQjHTYFE-T#*Ore-OCM^c5RuABl,Fk%6MhM*:I7cnLt'SMPE'kc+k3(T[:9IT[3If
%=TW*4RXo-Y#qU=V18;^XF(g./r?shM`[@U891LZCr\0?aLNpP0BBHI1`e5WNkNg^:gr`Eo"Co3KaSrkUVma@I+\aCPgGWs(k=IIY
%$1;hML8d:j]eMn!VV0n:EM1p]`gSG7B+'\lRr8q'os0>"24bK6jOmX&KETI6M'DQ0,6+/UlnFh_7f2mX8eh`(h+B`#:K#L"e[QBY
%=e(]=^9nW?Z^C<5WeZomKb\_Sh_O63X_]-H:5R/9<uK]l-X_l(C0bes05pYXEO#1]:%dH&<2`_;9uUKZ^h_A9d9\`j0dqojS@ZjW
%[@8MWl\Wq[!.QH2aV00_^%'Zh.n%N_5o7=!Pc.Y]2YeMdk$p2`<[t\Qg&F;9Yce%r\^dT+aT\`j(G!p`?Dmbg_[[&c5=I-b2nk20
%WoW3qJ&g`Vmi[LnPfu)t\\3;i:l[p5PR>[f_[3Ip@]B'1Ja/`@GE!UVDO\LE2F8#$i76cG,ChI@K^1Q/R_fnOa7.\[`1j+EV!40+
%S=dt$`mS*.\YS't^Rr,V*%"%g_NE)?Z1t<(lFtXLe3":ugEMrj"`(o1CK#Fa>E_&6h1$*d"3YDi/g=r.FfN/5l?"<Feuk3]D-BWT
%6(fp)HX418cGY[:G]"hg4'(S-i[i[r\d3!gGTNBt];_EEaQLd60Bi37/U\?*Rmm+#)#L2j`@-WnMm,_p*7Nm;XndMI3_0O8\CHi-
%Qr4D0?tlrWBe+($^ZnkJPUT4])QMDBb+nB(3AIp^h;s?b3B<fqlL.F+:olDt6_8:1Ks8R@em7/sqq-,\df#oO/5`o_X=%I15K'gI
%h&/XV#Kbq4<iJOF-$$N\0+du@:Q<3t5/%7`_Eg@8V;4bcXjk!Ih7!-SY5+L*J.dHkg[oQ4UMo&EkRt4=">nq5Pl(gP1K7gjD3=-m
%Cit[,f$Fa+6Z,!l#tI_p>gk;0BVO=d[K"2;Vin:;=Vt&NNZ-PFU#!UeM+''%&ap=^L4))W@H-8@1!3&LZ,sh/1W#VS*_I'G`F4O4
%M;se_),.:qMi)K]miF5M2iVn1L7dh6o]dOtqa4ihF>2c_6?LcAS8q@JD0Y=#jRc5n;cdW)+PU1&.,8J;b5RBs&JO%U\pR.;RmkqS
%hGNZnM['uH\daYUNNo1W'%?)g7bpfh7^9CAr6?,e+O1r3pq=C"(;jFs&!G2bh#iKFIP5P5qn^D#@Ic=QBWYL,?`%m[9*G[E<WPl5
%7t$/1nK[O`R])P6X:2=E7]X>Ck1)dI&LWgI%L#D^M6?$Dcj+LA8LGe[9`)O%_u]o,IajJ,e2YM&hu2U0hn=C02rFSmn,NA/^OQ-I
%n,E)hhgPP!J,b#uiV.itD\3&<]ROPu4Fcban,N0Ln,N<&>b,9qS3QYXs6fbKr7CuBQal[+ro*nQVa%llkJ)Co'8<s.rZD14c[Ylk
%q%*N$j*s;n<q\=UrS@MMVa!?9-L^s+pAb*krpW_@a*$&\U-J/$J,8aY^]3miIeW_(r:<-9r:JnELHkb5rHI^Zpl0Zjh^<io9uiUU
%P]+>##<Uqm(Zd;ejaA@0qV2(CJ(?jRT=D,<qR_7Wa1jaIjPU"-%tFDmGOPNlJ,\m1J,\ks?ejndQen*YHCO;7Toht(WdJj.s-KAW
%J1hfqHYi[s?hNOl+27bNs6VoIjZe4gkO7:-e,IT^5B6GH2`L]In,E+ZGMiGr5CE5)q]GUlrIZ!hZ]2/K'&Mt#57)q]-9N9KR;AuT
%^-,P(@+m[-S@]ibKl'/!ZD/b;#6;u<o?)Qe."_u!Ea_;k9O@ZfDb_SY1INO8ep<g4%:u8dnGEMuR"CZbUdpl"oJB<??C\"[R_[K<
%"Gg15)i'</;IlR-`"Gca/lr1SMO3gSg<!afkQTtQ;e4F,hTuk:_YO#tf`q;Cj4Do"bdn_G4FZ@0%eWIrJVTX5aCD>R*B\X&[]>T*
%1%ppkVN7o2PcoF/EOqMk1qYl]19+mc1sbDQL9nF95k@IZnA?uG?kXGBZ2fsI>\d"c_!#N:P%WYJP;2W8:D19rmnOc9n<*B]?\p2-
%I$'(3d+"Fb@T>qA6KpIhHDp.6kZLk%Ql.6g"@P\#e(NsI!Hr,/WY-4>@n8']7MlU<0HA-;6A@<reuP]epfUk+?OTkJ=\.2lc093R
%4O<3*$b\4+_/iqk9K$Pg[#6BOqe*u#7OSh*!U$!5;/++1cfCm+U1hSf;@q.NW.=Pgl+-8ZE\ZNVa,.Pme&,bMP)C=VOTKAD@.(j'
%E8WtN0#uUDLN!t>?^=9:jH_XHMQ8T+'glPi'ZE'o0qI,<&jV>8J+//c*_cCKfdTYLDJg8PWj0VW7lN+0f'Uqo4YN$2:@^N8,T66,
%po&1q"O#G\Lan"]/X+TAHd+BTPPI2`2$AG>:k%Pcl]/ckl'm2k>7T_^hY[teqDhJhcG.4i<-c'8"X^>!YZ"Q7g,FsbL$^q,LtV[l
%CRH^j,DId;19e3qqgbHA/LGBt9E:bjS*@5=.u-NVY9!>Y.4ZLV3'M?lr+OeO4/q40VK;.EP"1Fg<!rNR\%8M<idOG4alN*@%P?pO
%o-]nO/,<J2*@u&_lc7k8[2jD!_J1,Q:'TK1e`.EnESu.TpR.`:-]*EK[RSEC`Y"i">Xo1ha?kh(;t6#c8ftOl#aY."g:$!FG@qm_
%bs%rW\P9X$>=WtCWWB8mV:_E'?Xu>_oiQY"H`lV"4=/X+4tW(gBh9kD*".qO0eTQjrVP&?]#3#be-F82C)J]GA#gY_Q_`kPLNsF6
%@$Y<&F0qD`IAW8o/-#.'ohRZ@N@97L6t\(0CC#EaE\/+DWJt;@QO'I52FqG7EYVo:(fO21">OJ8nuG!\!fb[>8mh#n^J*=)QZeYB
%it+>g!V$)o7Q&:U@C^"T>7)s9;!@2ELm&`M(<WttlB2/_R0D9Xmed*7<:;<-K*'MTrVZ_<k"Endo_tDcZ;S&m0*!j#_,625HWN[J
%C8Q&X*bgBtbTZ`)\,:iI_,khLF8^5(!,@06)qC&tQ3PT-EEuM*d(DJtl8+<RV/&UISh3QsRFGhY7i5N#7oH<(iQr)3_i:9H:E4LF
%&:(XAHdP0b;X)Va(Dt;q@UZ]c7:r6]p6/H\No_*<l9a(T)6_\jf=W*)e73pRLW!YU6eu_*O%n8\%tu;Km\H;5,Bc;aoc?5W=])Ik
%L->r5$@u&<^Bh5;OKL[Mfc[2^&bB8kG;P.'RP]pR=#`39HfIU#'.Sb(Km`g%n8HFBd".Wb1LQseO3ZH&.W[D6GS>!tgN5O?!dJ?0
%5nEPSg#)`3-eF\8*O[:MXR&f''V@(K8g]Ti'9d$FWkhh(JML(ef;+!\Pi6X@56A`e;*mCJ!c@EhCg`Jp=Z`IAJMZ)aM765kcYOc?
%f2"UMG.V3^,Kfn&,3%H2lI/:gbl*G;5Sp]g@(]PL]A'fMr?Bmh3TrM>qTLnuJpm=2M<nhcVXDn!N`fXfIhrjXT\)5Wi]hUU%]ca^
%L]Nr4MU2K<-R=:!D@8n"JTqBr,r/k%F';h+6YLCI#;Wp+c_X!N\PeXUqDkRi`N_+q3AH\I?`]QQ+gMXY9Z&.f:n]:@JL@%cSt'UX
%SYrmIcGcDEB/6/]j5+jIW1k8k&B9Oe>$Q>K_T"@l%D9A'U<jaRI&o'&MPP\4'[>dYJ#6@uajKV>.p84cp1D/dPP<pbWhYq'+ZTo$
%cKUT]9"K7eK;oMdTmnn?*k]HuaI`CtO#0?uLb8Sj$X"8q8s>^i)KWLqF1IAp`F20JS:egR[-SlDQr^IB;-66J'$F-QWej`QG_LHm
%3J'st";1!S6UgE`pgq;IBo[6e0qT.[<Hs1hehoj:!n<-E;ZiD.oO'dbORusRLY9G8?tbZYiu)$rWLrJ`cf/!U=P5Oa5!I^X^PVWD
%Cmb!C`+;+!mu>EHCFL1B!CIRTOJ]g%4'E,s^klUI3DaX/=>KG*JP[MI[=fso5+J-)SsQO"W-"a%Z(=,%L!=qTU=:#?6:^N.Lte4a
%E'j>UW=$qdEgHgF-rc"?\lKl6@o`&4#+rm;<)%a1QOrDgAZTk4'Q2aYFcsX:4La%&#Ft]SQMc&oqk7S@7@"_BH)l;N/i#b,^MY58
%UkI!#n[,9FA:VI04'lOEJ&+^AjFU5b72j6m3F1$aaM'&(Aq@8m(ic!##;Y@#/upDgq1[KB\:3RaIr(i!W$M;KS<2IDi'%_J??M%0
%&(b7k^*&/k.3!:R0V2(@9nH(aI"1E+Qs!u\_So0LaG%DClZ+)p5'bnu:NT_@J<$CC?hlD7HVlA-eo>0m*?A!o.gNL(0hro4m2XGJ
%5NUoYE4i^[s7Nu[KT0">O;)mpWro/WrJ:0g,@ZR)dnq;j[X_C5T>Bk^N#Wt[L[`3OS#RsiCgo"Qk+7a"$BCUV8sH;Sp7/B0;Qa3Z
%F7biUj6:?.ZH2kggA,N#2hB-<4BbMoU@CV4bD/37,84H0m&Ll]g/NkAhtRSBK+PN1@@!kd[Z56CgTY/P?.$K2R"8'rA`gD>)9K-[
%QX*P3Xoa!b8PioM5+9@f%.%lG$H@[_:c-n.<$EOsZ%V5(m?B'Q<7\shY/fSd)MB`pKg5r7$EUD]GaTNs7nPoODIq'=!_6]]JJRFq
%0oDLhA13TUEVpC^/b.Cuo>np5T2o(N0_KJ)]aC:Qe2A>g0m^S%FV=Lt^B2f+;d?g:>IEJGC+72c8$[a<gGjUCW\'B5m<piKA`4;j
%6[]/_5Yr'cJ/F.&IYL_-<Ou*S>O#DC6$dO9h7"oBh6d:[nu2%hVG+N@-[,[XPB#=R[H=CKl^pl5=Qta"J5s=]?o]`c!:1lQ&YUPZ
%CV/00N6?o\7U`U"PJY8]W7+1OS[+6X'Ah]ATX#Q4jF56to2iW2]\r)$1/bOCAd-ir_Lke-3)iYXDIep.-0cD&nGM5!lW@!tV;cON
%^g2`<-@c.Ma,]Kn.#JO/l)/^n]5W6cg_PhG/tO%G[W2)HGK"Kh"fg4`@@`olC)i5SI_08er9)0.nKXqsL*TCfpphi:=)un;(:M'5
%=T_?[R;.2=,8_DPI=gdBZR>rHgQ&Y'B@4)=()7JVB,^K-r"":2U["c%oD?ORn$s>>$c$d<d5aZdl@EI0^u"*F4'Xm>A&/@dLI'8k
%cB^W=LH4#5WIJ_leDJr*SqW*k:=Og@qTAYRG=/&USs#6jPffc/r]Fj[YR2UoP3S,1K3C/n)j6fRmG:##h*1r`6%8(a.+V_G/,>%[
%P>.O.9iLoFf!]I4)!]h?++eCR1i)!G]Rt=&mcs;3X8?>#[IWbrfK`tf)$L;22Qg8Z\heW6eg"G+$Y^"!\9bKS(J*CJGAJu%6Jh<i
%gpD.0>r_6-P13oj`b*`,@4]#AEH#A%)Tu#Y$BY;hl*,6@4B8Z1Z#:Y"f5Kh0+u&'%MD-H_&8kc*9PFZL=Y]'kPnMm=3_`uSnlM%4
%our?WcF_""!fn[Y_L#M1<TIfF6EaTBYoGCrd#=I+7W-Zagj#ZQY9"2C"r2XkGf)?&F)4cMQZ!St%2ko;mcX",Tj(SfgOI<G:Kk/3
%_;S@+e9`8=,@E8^K'DS$"l\)K=)F"$!TU\k*7Z*5P\t)2i[*G@3)0s!j6S]g8lPu:U"+j.%uW!E]3b5&KYt9[.j>uj7Ye$o*W948
%Y2/P-kiKj8U5?MD^b3@1[C^Xl<MlgjUmA!jdd$6TcM'D&<8>+A-POfhq=pkec/j:NP#I197?S=t?0h+_HmIoE!-IS`>L@nf7*BD1
%$Z7hU'EIf.8bO3d,K4/*eX<j_$"<6R4$TquS>11$f0uMm0>cC3[gj2aG99K;f!W.XJZ"ob^D:s>4=saZ8sU@.Ys%$KV$8,o&rY7%
%p)NRYL4$kl"('uIOaRS"#,Cg<>X,=57;ot)Xe/hLgroM>mK6sN34EI>/]DRVh[PO2++%QPR(Vt6nMfB+gF?,_Y.ebY"PjIa\Cu*'
%[2t%V8rIm"VJE[)o^V3;AN+Y_pSuYN?cX*_!6MdFO;630-D'HHT$Vf%3)/3*ppo&qBtkdc:sM`qigmPXX1dsH*hj9i9PKIaJj)lj
%]o2$g#4La/S]P`@*CCi5(/^4b\Q3Ia<;P-ED=5!^l#BpHS`2.LI4s('VRA:#S65NMls2ELDIaY+KRC+%Vg[Sr=c)1D;(\V5Ie^0(
%?Ru!@n%4/@F0'`5Aa7,qoWm)^g:]V%<A)/ZV?*j4H:jXI>,ICsd95#@c<O(pXp)lHND+1q[U6=QBf-(n?:E'KL$tOUEms5<9EP)?
%o[^ms(?@+9D#r98bo-9DnQ8MXTmK:WKlC^FlSqAjY8m@Va8@]hZ.0;fGO'R];No#QW-+@bg([mPO'']IZ+jYWHZ<h^Q($K^QQN89
%4_j]&rd";_!7>];O5O7"LXi?8D:L[T9f_mUL;9+^dDoRg>MR+8b.if]DO6$6:IREcf6/)i"S/r1b[\lQNJD.9BmrA/@!`$$9ZnQI
%R(XHg?/V:dLHY"/A7H4X!6L@<Du5nH'pcB(@=4^HLM(ZWq;ET3T-te,&("H$Si]h,N/i1Pp/qt`0'rGF&hGX2gjiSo6V?,`p3J@p
%];`r1ok04'03<$,O^@n<+4AtEH.?]=jB2-bh56)s78h^B+0oudJ@)?5p%R:XGk&%o*)1A1;2]B<6LuFhh85'6iUA!3Cmfn>m;QUu
%D1qT6^:3$?b;:j^')mQ`NQ[HTfd\t(LPRt7#Ks6NZ'h=SccCgS2eMI`+WQ$ul\Ydt$TRE`T#oufm1.C"IM!!!B6M;e"%']k[D*r0
%+hmB3=,nDH'13P54s_Q@D.DD0lH=BV]saeL7E>.2Fj5WA.?^4+UoP&L.5*I!jj#L1#-57VCl0-^L/mY&KAT'#";/\s`t![rBL0]h
%pL'afqq!$(cW.J8dDH=:aXW^8ki#N_]Sq8?EG+@2$)t/4aV5?)omdtsVafJV4CHn9F2r_K29dqZof4&`!]WnfSb14#H\+LL&Y5RT
%,QZPT,D"E*KOU6=n0'ECn2(AkOonKSMC5OQ0iMs%lkbJ6AsRYFNV/+m1`!VC4;"-G0)>:[V;:X0:d:glT'Fq)-9OE/M,(W%$W?'B
%=J'uu09M]N>UBBWo]7UqC!Db^MX`FpPp$_N5ODS.iFDO!7S?S.IJP$/1-*a+;5(I/[;`4,Ee,$Y'gN4rM^+/"Y,Z_/f4F_D3]8pB
%+r"TbNLZ(bIATtnN8OGYX#Ua+2hNJ\l0JFh%9O,Ea`X<,`*Hh9UIMCFdtIeO=nTqkjS3>P+$+t+ng#S!Wm"b,0"QI#_UDQ`"\Zgi
%dlIG+.fM)tir??LMPL)ncKTg-'n>1?nLmC<G,TPXnf(h"B["9Vki8U<DQ?m`"/"%G'i9PsnR'Y!XB;@kN&'#l4-$F2&\2ifTGFD:
%;apLjS(`V0U&2Hrntkr9EgNXVXAl%M;i;G3`U%X(`m:mKbcVTXr\j!aG`i_GqA!QYWPnO*BbppZO=J&u+_jhJ+j_7eLSXOO./C\b
%4O]>JrZ]XV#eKSMAqH+G9l&lUaLMG=&BUGabE>%LE/c<n&d?A^>\X*al.d5+5,r1YUeX(3`pD1Lj"<M@X#0uH49(iZMj5nDNm$*u
%<6$-5X+pqJ0,76u#E!lT!g*6MF+,'.(i\!75$7<@mNX/%Mco.rKQ8u):%nWXPDV[3g@9-HBQAPoDR>)OgOc1JP;MJ@[nu$hA3V4t
%;t8OL<@eU"8N5!V$/Vj*7&PlhoD*[pBIZ<Yg*4_q+k!H],BZ>"gu2<f:,9]HeV!eYa[c?-lHbpg0]Ad=d.FsL/EL/1K)QlHO++V.
%Q=4-PC''^a@ooGb"$Haaq<20jBoC+j<J=?;ePl+%1l;I+7!`l`":nMVX*REq"2JA(e>ATniLF_(9krYH&OV07bBF_oLo*!McN=>U
%:btRJMqF/Fa*fJfF_&Xd2U!go+So8d\Q4eE%F9[:\[O2m`hm%m/u&:W(QS*rAJ*?"9<\4@YqAK5@Lb+N_Gsg]Ds:X2c+&DqOBVkl
%Y)3>*D6b=$DeqQf(k@mfUZ75#5:2L%Po>l]qDp2/*H_O@a[,0fBq?&>\R6kbqM:*L=as+$K[SG_J]W%Z'Ah@[H,"Ji=;&bM<Vm,!
%7pOB;^@?;&Y[pq-cW_"sS%<S)GA#*YG:?.bVMi].R?^WM-(!01\a-go*;\r[hH^l.6C=9rS10;+<Dpq%WFl2qOAb@\kMD2Mc\[g4
%o`<jbS?YBj@#V@Xe@bGt$VS5ifVYSn:Ir3+5nZ"6'UbHo?cc;CMAA*D;oQZs]g6QeR'KlhOks8D";Q"K!PCC_X<;@$)qm)J8VT`V
%c70(8S'q_VmSaCc"@Sp>XCTY)iJ4&%CgA<+k,@^uV%<%.g"^k=Dgj"Yo(B?Xpu^b9ETsK0*rCL5MP]pTOH8='Cdbm;pY/6DIk<WB
%UKI@HI4::Snm8JkT!?GIl+JC=k>"C(Z9.FlA+'qdR/'\08&%^jmh$H^_U9-?.<\fO&QBF_B,L.>KaW'sH&.%!,7s[r&^JZEFJJ6N
%P`A[G7Lh(0V*8\i8m2$-*5Fiq3'u*E5f:.E<jgoE&d$>&m,!G+e;l!l%Q;2#4\m!r7lJ<#/k8E_ea3m)]'I%bn8Q139%'a$5">ot
%7e1p0V\V@bF&"3$$G9OtOVlUgMXFJlap?"`[ZNRLf:24@$%_'Re=B1E%9^7894Jd=]WSQ#-rZHX\p?mE.F#%EoR\d"$8pgV0tBM4
%qoul`3W%FZ12*"rbr&?sP*PKQ4Y4>61,3^36B4sI-H0#r1>6(aj39jk!2]R7JM-$kJHf0fm:kQ>&?3h)9gK&GFsRF#Ms&#60q<n:
%I$j@S!OKPQC?K#HM(7GTLD.*Han]BeWnn8M4TLf#g`FJ\TaEcUm>CE]8!\c'aAsM^2BG16e(Ih:_5BiN91sl2\:`>lK5j(LZnOp;
%!J8e<@]bN%V5hl76/_f4a?q)_FHlmdf$%jWGoXQ@!,Kh&l/"j%2sYq5L0W*a'#INt/e;]n7HBs9?PnuA-L`r_V+mrXA02FK8C`Lb
%CX\<C#""cpDQqd^F[A/hG=kX2]6Ip!I4C]adTfXV3sC^b(F'\-L/hIjJ[HN13^.U5lYrhF%qOW&cW2Qr`5tkc8HO`LPK$CViS?N7
%G<oY=N)-")T=O6h)=X)F@p#"lKa0!%>qk.:H%'OPS7B)`'N!.:/7fI#L.i#Bs,.8M8Vr:MnCs&E`&JVK*-":]'PS6tHraK2h?Nn>
%,^>54"6X:H8NLV_;5"6=nQUM5iF6?OOGYkgV7,:aaOHB%n:f[_8.?[/!C+*$:D_[.!Mt!S:oH"=18*u5.b<sK8)\kZi5AK;7"s3J
%Kq8*3Y:6trMPSkJ&(SWN;221jl@McRDisKARL)^pXb9XS<LcQ:4M!I_!HYn0P_MnT.m8J^ABLM^7DHb\\180d![ma_GYg&Kb%"%u
%P+KShg]:SL\P@J;NNYJRm%E=*8d*eb>;)2uQld<?bLRVb.>Ms;/ja[OECl>]>K;9+3UC2FJE#^NXimq<W`*<5e$D&cor(V7*.Qj.
%qt<6X.o]#!I\Tm`cSWN9YYKi?fnu17QjgJW<33P]dg.#DEm[h[@p)\u)=eqnmK5>C,E?:D2POhFlLds=W8CL>I*!p#i\:<?,qnQi
%]%'/mQHdrO\HR=kBXZol\e'V.O1lbI$\B$QTng]cd'"!K4_Nc?7r=Pdl!j:+(RtuA-Uc+(6<(:n-:"<;@Vb2Z7#0G^m7u1J$N79g
%k7*7k>fVPYlEHDTbn(r).PH(T]&GlOn>Uu&S`J%@QYG\Ih&6n(,k2>;9.3n&9_NWP8Yc>UU86kCWLgK]O&g)qaogm$VY!_D;HtLs
%.6MQgK#bO/@N#Ho;:%XJb-Z^uUR</pc$$0*FOJlTU?4_"W[an"e97B^`;[,5S)b-D1/P;_U(oi,kgHBEeBG.eV:)UA]cm'!'c'E0
%lGfP-*u_/iT*([nqS"lqV6PVle>MsP69?LdGib%d4b,h*cOF\+N;uN$T=[C3d8G)l7*FOEQ+6PoTUg-p\CAR/C\>=-H"h49';C^'
%eA%0)N#alBe0SOgad(>BOHmV'WL06;oU=(fD6@Kb+/';8k@5#;5i9/\mcG52ip0\q]^?nI"Bt;S1I?j_0pr13=BYlK52noF3AHf3
%!JIkg=;WHA=`IlNeb@X`660c*W2b4!IY&cKYPfb!?f+p*;T?;kE"ZLVd`2J-o!YsoRe>chY#:c$XX^"0qlo4b+'EdYYF/j]B(h@*
%@jSKS3EFCcKLAbp`C];"dfoj0G4C=>6=8=!"BNPCg'=R5^>)^iQH+=mDeHK+/=s#T41KQS_9*o5;bq+CZ"6dX1\:>hP!!&mE1:)3
%1kQ'8#@B!F)WmHrqIFgJm?]H'W/n;YLc/"La$Tl:=QR2s/K-,0?^Z5i7b3a+[41D6d8V/n9=E\m[dK5NZ!<493^)9P[hoo<!.I?6
%fE#cP;QpWT@S0\+O]suOQ)G-R``EJ.efl]l5_&[-4j-^oR&71GZbru`BsI'%!sgi_'Lgr:`(d])fTO4!0C7ItimoXcOek,XKW5V&
%IFT7.V,YN?G=<'+d-+K1HG?FMNIH-#@3-6Le\?+EotK1l,a0ii?!]bFGK4b#ho/u&Wl(\V(M[5/)DH8>4pl)hPdu0rM%g[nX;'`'
%g="ja=aIG=o/:c/s7ZKj`3SrP^2P2*cG6]PDET;RFLhJ*a0;I$;i)MuWm*<\m@e6\I3&(E?(du[PW*$a$NIbBn`[8/W,dqGg=;HO
%MD1$lW4Va1s%L[<HMgmil543%UW-uj0C.2f*g.6!282`;H[tBIeMRB"N`LD%@:"=e7g:eB'r^.#B0JCV)=:[BqB0AZ^EjVabiOE%
%"'*e8E:C%\5A>8T$#<qU]7i9<jSU,VSF#<*h0&-e&J3No=VLFq=BaQe<7jKJ\n^B'\/m;%B%sL[L,!#3QqBo,bkoMqcA-"Vg+Y2;
%oU"2XVZSDVhHt'FNDYud0!"3'CFSU1C?#H1N^;CjY0i\nW0$mWlHIN39prj;"uecL"Y=g^XM&td<J/\!i0;.?`K)BO/hOJd.gf5[
%#m-O=cqR*V<91FD]UaGFrS4[Dfd*ifV11s+:!U7t#K/R(p2)57f"G8=*m,*MFd3l*As&;_GFCPqe&p8XZ$X)+K\gi[31RJFIb-e;
%56MPI)Gqoin:>*GodDs5/#H@Bp1dIGJYfLaeO-rj:"Eh33l,+VZodY;fZ109A[ctbbfLd0MIOB[UWMI1i+rrP<RWm*[8kq'R#6;/
%CR[LJm>C2o1(PD&Nqh2:`oT1er>#8:T;,OjL#GE/X\NIkV*47d\;kM=<K>Rl@7k<blT1?fOHco?>O+=1"pRU5AD%XQY+<RFo7?,!
%GBRD^QAV`q:1lnqKMernI::U-AJ:k'RWuhkX=f(D2!Su+X0_7a`Fo%.0shu)IGl78`=bI9Gl,RA[591][oF]m`^r%='28!<8p0Nu
%H6/`2Q]su%&dF&qp5V]s#'pGHffJe8KoSdPZF5^'gI.fI&e11C."YEfWnG0BjbJ2PH!7GP=J6jf=Mk3U<#3qcn:2KF+FH^Y4I3>c
%`CJ9,V^ZFQ,=kS,Y/:/)a2[g)'Nj'$JC^:d(+&_gk,XK'><l6RYXZXcH8FXT#ST:582KRs.nA#Cmoo^nMf-0oIF2/jn^NsVn"VUB
%Ns^diKEO29g8)8m'iI.-FQeARohoA_prnbRMQ-C_br6hqY#dj]BD3,ic^J<'^rW;`48d_Z^);Ug+^Rd4Dc]>iWpm!LU`RWp*d[(1
%C<es5Xfm5+chV\P2q8cM/1@cR]XKco.9P9K0HD@V`,m-o/CQAMkb^D2H]:gs$lNtX^^Ur8S6pFjOhh]^fZHrFi.Mq[&$*WPL$m=a
%eT+Va14QruE7#7Ki;Bnh\$=@Zr&8q\[:8sPRS11'"%sdQ_X(35R(#_=igQ7:H[N^f\:[I[Ysm(^nZ?Z\3p[Ib-om=B#(<A.5@]n)
%g/T>n4sIJ1C>5EW=nXDT<KngRn[pc2?q#Jge<@gt)l:<c+2AMqL5@%BX+@Z@*HA:I&m3)pY2?p@a<AhnQsM!%!_mbIU:6@RV_&oD
%l*5ON`@=G*?i_$]"+mLM/frU'f"()o=b,*&NoWO\m*u0Q]6[8M\I87#0O<7DFuae+En&YYK3Id'"/k$[feO+i<<WX^2qt4oO2aOt
%AeI,uA'\-tP%5BD+]`r."ja7EhO$o_R5A>?_6sYJKrTN9i4uSN.X`i>-29Nb1HfjSPB$,(_[ELD&Wh4e;nf^u9"_W5r%9SN5Opql
%H)%GhDG9GK+Xmp!@-#`m0u5\k'HZt5K<)a)daJ?jO)hu@<FHTn];e\K?k!:##4Q%],VdZ*W+d9AGS7']XoaLu2cbP7:K;<XR&hqJ
%ODu:VH(&n=9QlEf=N^@s8B%GI>a50>0)=/Z9U$ojq#6FHd&T1$XO]M^osMiSDNiq1>17>hhf[6mHhluk=F@#V`2st/*Yf^OF=Kg+
%$6M2_>dM!Q0L.8&U*DYufjW,t<^^b(bAW`K9\GZXO!!u"KDC#ir1F>sp.&1l#>mBp7'(gE-&btbll/VC=H<t6VU`Mb(8lhl!Is;(
%!15)E*0Qr$)_D\h/[nFM=#i6*="l*go.HX<)1ntY&)k"R!N`A<L-p4tL^lbiHu-L<Jf^aj0HC<d)8;>CZ4t;**1E+t8JGbmHkWm3
%0U"f-i&t_lbuVlJms^B5ql=AdjaW!p!4S7]=D6Q1(?X:;l[E`kY#J%6&-`3q-7I+8]MT_`$_,\p<6qk,_YOjE/8M\0"`D%H+j&r4
%<#+n2&R*l;k07_,&5nqO%G+0UON?n]`J!9iJI!'%W@m$M^l#Q<^qe!_qaim]8;Ye;W5#Iq2:Vhl(PFMuE+R7nAPTmTeKh(W3TT,A
%^m%kN@<F@-K:Hat'MKcJhLsF\o,P>312g@[i^!sUD452#TE1pb?&Ckd'JjjN@FsgaY)DVAP_[?`)E\!$NS"0@@fD?.N6uR\lGZl*
%<^>VtlE4R\WL23YAX?3SLI*)aa+bLV;cGk!ZZ]hAD:Ou5Z"[F@3^!f4SFYNt6@WrY[I>L2+8ek?Z4`r"Hgksfr`?Q[33AT0mEKgM
%25pRT!X@),o9tbPfG#miR,Z>_bqW7(+'$67iEudShs#=kL*M`*Ah#MkX?7k:OI0ADVV(-b#eU9Pb=W-!o5,t_U0SbZ_DLGn-L/GK
%[EINP)9k/3S#3c4e'I9ehF)_o%T>kR7S$t.(4\9As/m!]H4C>CnG1tO;P#*`K0u$bBTXa,5"!#g.NPbQf[)UB4$h6QE,i$`FU.Mq
%'g])G&bllW.32Kq_k=u:%`MC*U]R3pNXlJgbo2Z!8%k[o)$/3+F&C^2m>'6&*n[1r3(uEi"maOL=(,k*TG-ZrEFeI@@4NE@L!`G3
%'W9AH`3Y:"Gj\g_`2Um5f=j$']gmM4=Md-r"h-.RBjRI1H2Sj1#ZEalXC03MZ(/7C",EDV1Q(;:[%8]'0H;@$31APmU8J%%>jKPE
%"d+3J^%0HVVY-moT8\ZR)3&!0'M2@*Ykf$WXii\%_&[R0Z!p<M,``QM86Ks@:!dB1a=%U=a]gJ+Vq38pdQdt(W)WLl.u+b7o4N6+
%Aq?_NO^/a#_!:QoX9V=96@)6lg9cefG)@#5:3IJ)'l3KX=NEk^,-WcB.$F87eN.<*JoZ][(Bp0O3`Y/T+;V54*P9"LI]!Lm<jB7T
%l`O6;em;;n]P7dMIEiE;TNXiYqdm`g#RM^.d1eDra,4*EN5.DBMnQ+`Vu,&Pe4:47+Pt@A!s4M)7pR8?%LJmSF^4d.YI:C3XEA16
%/>e)N?0NF/egINX'Ui)u:6@T=;k8/L3G!ihQ\bhR1R![9^5dp[X5DG3Dg$3HH.Og3rS<lZ)te:Kn1-I!ArC=YP#I3(PRoi15NuaE
%WN$H+8N!Bu,dq9PcEX:NLTNj&:5VrPc$c<W5/Sil#?)=&F1,V,q5Ui<>V8(7'WH/T\HW;*(OJiuBk'bXomKiLZo'*I8g0EG1p['8
%8MD/n("uJ2(H"#bD=MhX>ol90r=Lllr8O1"\g3)dqJ)XHc#qX@5BfU1ZkiJVH*4*8l]MSu"^3OZ9L;D+P\S\[8a6[^0bAn,68ocP
%>L!DdZ.296$\]l3_<Rt=RBfPu->c[c;5(*R9B^j/_]MufpB/Cn@N]4%dWB:tA%>p9YFAB\Z9Sf3EM8SY'!dB::m>b;+-HsnShjV=
%/@e7\7sE6lX:g11-6drh:j4Mfo6)8b\-%(Ufd'oHgS--g0.Wp)X:khDnaO9&-duKrlIZp7s%(.iClBp>A<]>,Z.3_[CFIs1d&3dn
%BnA$s\s46s&S`CX=QK\Z;Ou:bFT?`l\<r:khB%CA(ql`<q2(.be)?]_jA&]RCQ*MqA&ah5HD/^+%CSeF>@+p=n:*,@L]46CmMb`\
%n%kY5+GU4R0RD*$aNLSM-4`&p&X6"#;)3f99G[lSC7dl$Hm?[cqc8(!4Q)$n<XtI2\$isjPrpFhF"(hgDE.,GC*h/&2=Cq+,r,'-
%=-X6C;r*[B\/6FN$YN_s8:GZG;T5h^`#Z^u0reJQ!;8MP)S:3qfu:[FdB9?mg885A_*HRXV\58mQ)I^'l<;_TQ.2'HND-/BlAcY$
%7"g@RWR@#;84C.!3XtV^e87oP&%<\//W'TpHcoCjo+Zld6?*(-&FW^W9:L'6e`Lh*P<EXNAQo#%ZJr(d,qDJ'WNr:;U;FY?o?[qV
%f<$=K<7e/0o-MT-rJ8<m>arFGBfOY>%V;0nk$bi<XLhM]naOF@L7!"7IR-UGs0o+)`L!(NnN967R6ng.gd^-o84#BSVfLi(*+A4b
%[%3,Rf%[Ig(*Y.4m[HI>WOOrf0hCsU^S;p(R;P@P82Ol1[t`sq`1t#Y2$rJah?'s']s2]><WQ2H]r_[%0]VaQ9if`%9i@&TRNnlL
%5&-N+/3C8K]@OQ/esGhcEl1%$,`6006J(om/,`/5,*I>h>Cq9sk-i#gghKk;MgHR#)[A7%!V%FK!s=K7CqG2Ak"W7\R>B6eSHdqZ
%Xc=]9D9_g`eq7+8i<hHGD#47HqIQgO2VgjVnkE4,dGVtYTPO5COY.m8`?JaQDOM]7i&i3a\-\0f?G8+Lfl,U0EKe*rU@)_=epCV"
%hmGEG&)a=.:U11:S\s/5e)nO+8!RB!/3)X(P=qksA6_''*r@eg1a!m(KIA`Ye04==Yu3bam.JbJ!bV<q+_pB?o3+"0OttS`U(ZcY
%Xs`HF)YR2o[.]1qNH4At&l4M0e_>".F6\QJji!>ND\b-4;'F`Z!:053oQ/LCCjeNN&m1efDbQfXlE75C7d65O1/F?f%Q8m5qr]H"
%EhR_^J$+au1\bq'`oBW&C+t_$lGc$rZC#iH01RI9dHX`D\WB&..6K3cg?P[A=3\.)oh^m`-WKhW\.2@Xb0m*qPU#s!,riXEb0nG1
%=9T5Z3+%[q:C7H'-_A!EO(a$ZA%,d#M;rAsSPDELGLkb-%*(Y=7\i[OFpiA^j7-rFkJ>khFPPq1_",lf<c]XX-019D4:s[^:fBgA
%i*AHk-a_1*0ssr$a$6Ed;BC]_LGPNYFQcP;doC]gTnIMtWH?1@FkS*7A/(*$(#d\(@qm@K4@d2$Z:_XpgZ4P%TJ,#m?W%#3lE2m/
%lMCiB'd-YF/N0VBkZF#p*cB'AMLc7mIL2IA6`!9E_qY5kBtA]aN0pBt[Q;+sFS9*B.9"">)`gq]H-O+lApsNdmqlo!"\/2*i)=.b
%>\:@;:l+hlXAe;R/A^)`6GkW6KPm/=j.iM<[tXo=Z_P,1Fb[0#-3'\DW]"[-facSRIRiXq.d`_2(NW7;8>MRBmt]SIF'%Aq1;Hc%
%[aH32EEb1&P[j$^+=o;R0VnD_V(RL*@e$V@iVZ'-U(K.Z&=ES_DtHb-6?+X^i*N=Lp;Nlbl%5P!gNME=l?QLhX#K,AX>eBRMk\"U
%o7!NJD'tG7[-rGPlL9C@nk\h=Eo,?c`$l61I;`oD"qZP);aAl@qOf%%n[+Up?,]*uK,f\SqVF7qn__uF=Nc?%#:`ReRcEcl8[/V$
%2BtIU[`BjWNE]&G?r`'0BaQjU9E<:I>%)uhiO-FqL(X."ZMZ?5Bib_`#tA2:qGb;_WL>A:lfM1DiUc!^BJ79:'^1t!2n*eY<d0Q"
%o"Jtq'iP[X*A&Zo+@pA@`l]i7G"!@hi7/"SbN3K+^otKGG'34iJN"XOP]+EbW.%b1i^i`r#$/oBJuF(N20R2Knd06J%R`URC&s>4
%45^\].6p4";&tL5WZ$)hXs6KSK<^BKH#,p]-mC=*X=E&W#@8Ne`SPOf.pq7[/I'L>hd0FQJ*tm`kJ$Z'ja'Ff\DH"FQYJ@rm#ZF4
%COknZ6T,Wu]N1mhiN)Ql0VQFaf15f8UuO[PCn4m#?#ms11MEs58Z,c;GuTr9%CCqcVg.N6)WoV\SAd@6=rPC5;:sGP0gS_@Z9&Yf
%<Cogj;p%U(T";0[7'0Gr7Nmf^`ItA4DM2`hX?tS9LqG/1k&'cVPfB,&gN-p!WE=5X038=S!cK1u)()98C#==!)J=8n?X]B-#S-+d
%jrGlZZijou?ls\\(NIGT\EZb<cH::BXeWpX3QoX)nPKh]]234'Z0t,Y-j;N.?JYA<(9nQp6ZBp3ReP2":V,brntbG^OGdEUKqhds
%<50`W"=N#9@6!Uu//@B(,EGMLXi)X=f8r9!hk1;Z365l9BF`BY$<hH^idHV,(oL*6e-`<?1l`4Cjs2?1e.uM2A'[0Z&8&Ihr?,&p
%e%kboUM4uDIXLi(5C"7Fjq(Bgq'qcj9;J5[65og*A^>EaDS$eBZ7lm@h1f"SK%H@'e4n+QJt\FW6d$f3`pLKO8O*VhnBeOO0VA)6
%HiJu<ABXs/S/4V/Wo(uj!#tSlYI\%b)S.23#fGsVchXl$5WA6n7]#.c5lh#S\6)%"g6-Sp8GD/b]_bj:->@9:o@YR[1')TnqFDS'
%[^&Eq_fMJ4CoT'AY%e`]MBf-Rl<.q[c1n!(jd%,b+Ne=jQL.!0.BSMdUD^m,Km)s.B"9():286kU_2\bWls2EUUjHc<&^a7EU4@&
%?n[m@]0SWN'!mQ?3`<Uangg'OiW0^'S)1HGYY1DQ%@?@B=/T>a-M.mDnMsc+Xi%'/OF!\$ndJT.D@2!E.M5`W:58qQ>Y#bE9D$QH
%_Z/3MX(76*Sj;t[/i+B_jKP@2S%H=i/k`g+k,tYO!dj-ZGCs58rFB%.9HJ`cT4<@h2gBA@\[G?pc8*O[.Io6]>TPbl2t'!V0<;CN
%eg<+3_KAA-dRm>6cTHB_QPml'`<Re*:&RL?LfgG?D2JP28h_R6P"nqV8fuMc1"7giae_8iYa+g4Y)=rc$pt(s!!?I'>49K@@!5dL
%OO=?Wk*>MG)W7'd;LHqmNuIZRl8[q./$Pr$<^SJaD=tb_2>qf[2fdT:)G*+@5`etJ3c[V/gVeYqm2<M"bIKF[H#=Ic9KB-C:tH!Q
%%P/o+P+ns/iS%fPep>+DSrF6HEGJ+R@njOL\4B9*mZb:Xb#OWW@d]*m6`XCTZH;!H\F:NP416qp]m$u$i(RO%6J-]E.hJXBNA:Vr
%Us(5>W69.jWePQ!C5+jN.,Pe&UMT=9WQ%n?@MD5dHf-r:JS`3eSW!hG=d_)bN^[-dmu(;i2^B[;PFN]/0d2R8$:^f9.G*hg&SN<=
%k,!Bc6Rc*_)W@Ca\P:(Vb!V5Smju)nE9<6]KWKCcIWaTmNb[:m5#]O\lenuPW2gk_P;VW3_?1ShBh&AD*6Hb%/K2?cT>D4`\.8]=
%aUIqq:\fnTjcf=&GbDR0R;[pk>\KtKEMC+[8jnGj2dpE"`dcpP_)\:437teTBI$'\oU)cCQiQ[_Zp"bjS@cp*hs0)4dJgZi,f4/V
%k9T+L:%FjTTGV>=J:'TY0bGVJVhEKiW[b/2F=ca@d8VK%/1`sA:n1+Qp&61#I]>s]#r6t7'9iJ(!6HH%h(6=*\s*<^K9<U8-q6Jh
%D+o7mhLE<cGL!,l$[R]`e5nRu?=><(9$=O.rfAjPIs5\@T$jG*d;Ik&mNXnq,kL%OLaa2Yp_biC#=(N/Yg8Iu<!c(k//cBUs2PZ-
%^&,_9J#Wk8nX1k_a'YkIifAQ_Esd_qpGMaSgNMIUXHNRPf01HfJ,IYAquQ3&j+'?<Ip2:3^\m^/UbD$-?VUIfKp,V_5d[GIiql58
%./-K/KCuDsYh#(pp%kTC\L_[4?k57R&!pQPnc#L8C\.LVXUXRXVhi+6G5K4^E9"iomE9C^a?T@Y)o$9mIQAqXmCRRlq!\6YdI/]u
%SXSeTC0h]?5;AcNo@H-d8,VoD2?31WhuBUhI.ug=gqLS7@jHQu&-(q&?U0D@r8Sl9(6970LYo[Int4UcY%qtMZlf43J,@:DhgW]1
%9YS%8YA!3,S5(`s4C-fO=/6tod`Y`uDh;2^4.cA&#C>j&`q8N2'-8d<SC6`$*\?j"\$s(%jfI,VP(/=`F=oMu$c?a$\)6J^k^)dt
%1\[O9,K7\fXbT<]P_A5[3;f]]0-dlBVph&eI(j`rDjp18V/?Ek-q1[!lUS0(>sJ!i\S]4,W18`Hg%[#A@4U.t0eC_0nRC*]f?7Mc
%FoRFSg5\BciUe!eU0hs_,Df*uUPhQ)?RIUZj53D(c!R'-T=!HQnpq4j>dL^,)lWk9Mh*dcB3&7&JDCHd$$R"Y"9JK=TRb^6IQoI^
%kg>SjOQ49Pp`8f\GksAIP':#s0?@Fs*76iJS^O%&(7S+/,qGe?`FIg"\Le1J`\F;DS+#+kP6\QM#f,b6Luc2)m'+DJ7_s_d/I>QB
%rVlJg1G"2=?nq6J?8_s\L.&%iT.<<C*bbNF]]4eP4'"2QV!+`1p&*UJG-uS."J51C-)5eJRA7g(AGgKdZP&/;Us(EA8Vmf>7^@#E
%>d-U%7)g4dF.bEuVNT/`*_e,fgtMtNH2o,J`j:U$qpKN'U4Y<oZ0(6"6go\mlnS6O:;q!.*B]CuG4C]Z?jqe;LY(6)"Bpu`"KL?f
%p$2)5_L4TQ&69DG?1tbo8q%<Bm*!i,RS.%73Wu\XaBJEO9Yca%M*?SK@X,g3Z[77>X*N5uYZU]b4]$0NIG^uf'ZQin7$F^?%=,o?
%n*)iR]=tNEZL]Yof9?FCb)BWETD0,,n+4N6U>l'=!nBu0+m3u9PmLdZl?_7.`A*!>bEc,=VcK0s/lZLs`&_6'5b`TcVW%@9?B/g"
%X$PCb@pjGQ["tgXd54>cgI-@>jU9i=WSM'2Bn$F+$?N1)cR$?)k1cDT*YWVfa-1J=\FIRZ4*b0O]ol>[:@GuLB_m[0^rt$s:),R=
%(g+*%<`Gm#?EjhY&fEbq!7X6+c3-l]*M[Ner>Lju87cER`/'R%:RAAa1QNZ)J$+T!CnW<qJPX#T&YQK'giBj_rMtBfWP$%jB-H25
%.mtbZ2:,L"K]-d"rO!)j%:(S$9V4D4g*eK1FEYNH&LEi3<FuO:FW*j0.plk4#=R3m/rYm3p]Hi5MY!B;*Yq\td^W\rSK5m<SsBtr
%2^rmdMb8W_,XR0E(%SrBs0<nFI%bf#"<5R,Q]>2'Y,jB3=!Y)o1K:dQJR?nFV;',dS4t-E\LNrV0S,Ysk[&Ur\!bJP=s30E2_Dd=
%K.?.('5mu=9^:cqhC'X)f4nN=aOpiNB`gEbID8JYf^Xnl^PI5)p'5@OkKr-'Mt3MZ+ipPH(L,gAcc)'m3#fITf<34@fGhRrJQZS+
%Vd*I^KucuT(e$4AYqW/O>**i3b,faKDa.`h?YjTf`$fB`d=q5[ZtW8#_2HQD=@Q!cb!hpWkncqFX"AL;^N<2s1".f$DB-BhTuC3V
%9KR[AjE=Ka^bB[9:NHkiI+!7Fo8qfY;U7sSn?Z;[J'Wsf)$;lZ:7VR)e5laK-Xupo<dYN^M&UTGbBtH=_D)Rl[n9ufM]bu5'NH15
%GtmB4aBaW^(4[h_2m%ET82CK",mZnWg,d\<T)FqM@bp'"l$URZP%X_R%_MsaUKDZCP0m[oB?to1'SpHXmh5]XZhN*!bOW<?1\R4'
%30abW1f<s$'_Ml.VruFDZqO1CV$s?2C[n2_fA[Z*HZUa@/lUAJU\Wm8P#XSi\$b;,E%j:`WZ:g,.ZuL9<RY-L=DJgpTqI&7%$<q)
%!3>F%.BRYt#dP4tjef%Ts%UCQd`&Sb76T.tA:A)f$4kTXEC=$RB(#(0Z%o=PIaa?R3qfn;F2)mV+R`/1l<lpCI/ePK_fU-%K;&@9
%W9_mRR?a\&Sm[nP.XRd/"G9--9i`Dg#Na8&r)BN@\C2'!p?"otdbBOl?Ht-I5V&l)"GJ^IVN83QSW7"+77F%lr78DhqJ\l0Wn2L4
%J=J.sOJK,`laG*SW]Wta%s[DeRm`4]URF1nSh]a^\5M01V<Fqp6jII'D<afe&'ceu@j\:b%`^'f9M3(Y"_qA702tb),Nq[==I',+
%NIHu8S*TcPTR7EDbOspU"IA#4VQ>MT0>q_-rg)#UX?Hhd3,ncMHc*l`qIH_rBY^G+BM"DCIs#=mD-bMJ@oZEOk'*\`p5DXcHbnQ_
%9LTq[*b)Vn(fERX1,5R+S&F["VU$B(!m.fE5K(;B;USkO3]0&\D$U$4Sdp.85Sn8sKJSs5ODAqQ3$ta4Ctjp!VpjUGcF%$JWDNXD
%8T=K!h.eNDS'!4KFD$BhEoAp$(C.6&h4[JShRG7:m==F4).6'GGoe_40gq#WB8XYWRB08V.L@#ZU7Ck;UKP%bUG#$mg7>f70!QfG
%I9)h@[Y4U)2R#`)XN)M)ZuFI#HnaNqb&WcXU`%b3.b<@]OG:eZM)%5(db@GtEL01=3?.-t)b02A4oULO!T8@(q!`+Ro8X=Xg/Ep"
%;(1M5;]R@(9_+,QeZ`FZW("JA3Eo-=\'3Od#7ne((8=.?IZT0-I,BNSmp)*_o_XI+kgPU(IG679fbJUe:G!Z:=d*oZ:A"?/\C;5:
%`V6^*IB[e-]&s_4NqDV9jeH,R;;K&#p;(hZY<D7%c#7e9Pk.ndVee!9/p\=n&E>('H$sOf[Sl4d'%q":!S:kYkQk,]i(2:RZ;6H[
%i)?N>ig+5S`/bVJe-1?A?_*f9`T)"7Bo6]IRd(/SD-pBO;hV("Caq$7#?OVo=f^l*jf9tU%P"4JEGW_,f``%OZ6LL-0Qh.Ti/rcF
%_^Y:UVJ'g=G\n<bXkD[5-1RQK1$M>(>o,CP`A#FTe+Yb#7r$&)SQ(f7H1p/.AmPu[N#pFN?E%!Do&Pi:C,qUBUXe!I6mn?)g=KdY
%h\4AYA0'-ZJnmCkB"D^_-."9BHfAZ*;S,quJq1/-VWZCuO'K(;)II`9]4rYJo];:^rN,5&f+0<1)#8R.Vq#',9!A0/R`%8<i^D\>
%%44r-%9q,!A`#"fP#oLDM83)VfOKuU5U<(-mLHGsm<:jr+;\0k5VfY>AVmFg'dh4eQl9>*?TW[mleZ[jbjc+-9pnV`'q(Lnh3s*N
%,rc#"e?rALQn)m_reVbe:,(A+6[`]-1_\n/l>DcVFkPICA[`V@q^"87LBcUZ<pt@Dm9<SYo%<T5CHaa&*oWLOkoWHFSa'jA^C"V@
%m^i!6*VQr5&qsNRW<-arF5]5PR?fQ8V6tFpQl8CEH/"-f">%7B)UCc4a0K8L+\")J8rH6Gp$B"`!d3hR<FgX'80riNZ9Fe"g"EOD
%OhHfJ`dfJsKN.qA2l=(@QVFi/=g_a]Q_ZfIfc(iFjn4RKA[HIK0(FQ<6+^J#h;8)faS5FCUorJ7HJ3nA9[NgWTE"gpr-9ZMs-G*_
%8O*!:J,SYNrjVq*lLdCAq9RsunLq)e^q]a>e_<=el-I+ootQ"V0fH!QI)r(T_OhckQ:-`0V]YY?SilGIp;C6[/2(rt54e$Skmn"K
%>4&a,q-<;i(^UA;CY9c-$Hq#4J_EIcp!H#n'`Q\)\T2q&4:G2T%5J!G#ASG=phla^Dm8%-e09A>7fsJiYC8]2a\8%C5>DNJXmp(p
%<b>UO*N'V^c[J)R&[7Kip1U,!Ek+:NW+,G![fc<;!WQ`(hWB:=UHs75`dTdFE)N'gD0@(GQ(51I3"+QITJfLFhA!GE[kEtlj:.^9
%s#G3c?iA]d3+K?=qf$ALOunnP.DiGE,)[?R6Ji>WOS2[CS*u/-TFduN.a+NfD)hinP+Y=[0tt7W6=GY2ke!arnr%l[EVh(i)IKk]
%g^.%j*Qj>8aOX_78;?I"%EWci[Y-='Gq$:/;)C[OVG84oRXer86DHrI1ukJ]Mq!DE>!hC%OapHVS5/8.Jg!cSB'UD/m,q.Z3(9'8
%'\g6*;<cLf!sDH>;P[Oe7e3,5qF;PX9I.baG*h2OrSep"YWE@%\UG9Ar_$.0P=QhU1!l,d/kLgj@O'&F'+'sp0LI=N`haL"SC>f'
%JJ^8)asfD-"Fh;:D'L7+N)YKuNpQjJf;-LlSLJlm&lN0[pY$fb1oW$&TWr2miIi0`Jd`+?\XWp&o0AjR&\?&01K'$O]pbHY"BXMu
%>iG56Rt#3:-AXbf!$)8upC?,L<Vs)9ZSg_kjBE3CJnKeTQf:!6`qpkVjD+5+SN]2J^_d<@Bnr^McWtu(^8Lh@q:[5o*r^d(-e"#Z
%%uV=#%lD6MUW?m%]:(ZJl77b;0G*Ae(:^W*7Em,fQRrk4d>pF-/&u0m$Ep)bBK@OY^YWF(hEH8ED2n$tC5TE9/"u*3Ht&(*gmIf9
%]QHno>Q*"=*ZO.oDP"*Pi0i0nb)um:bf:6GWZTb:UakM`*s>t9`g?h;R\*TCn5Jl>jT0H"=Z$M<Urhf9`d`]ZKV*9`^AXdu<h&SW
%)u7NH+FZ\##sY-`pTqlMjT17=T2h6I'-?X3A*);l9DGU%m45UHku#^H4:Zt"miP[G56)Z7Ya2SH`$?La,G(<%Y;`=Dkmg5AXpY9$
%3T>Mdg4O*(2NVA%$9FZOn+C`po"*lDZ.fn&%=5YPWgiJ25P=YI^M_kV*_cUaPmJo8qd-]d@<I(jB2g2d45W8+RZK_:1]]PAN8J;_
%_N.F+Qgr*5R45PAPH\VhVHPh`f=S7br@/lm(7QSW.DY;m&jnI;KR6_?Yt<f^>U^/XNgNgWlJ;^@;\Qc?pMID3_'n3:>`ZUGc-JE)
%IWa:%WU^g`+lAP6aF8&C;I)<6c?F7XXeOEZ4_OhN;jdV,Vls9tpk?+dJ^1bA?6;ko_,ntnJAGbo9n3lD/)T-_J,toPn.#cHEk&$?
%`kq%0qF*g!E^U3K^((RbWfs[t0XnQabJ48u!9XI4@+qtWY3OA5Q(7u692P"[RK/@B3N&DC._-e>+!RnRF#jC5&'qM:+,/'DKE*/o
%/rjuA;IL3S[(a!sj.ERLUdlY)W8sEbO`eO*FC%*(Y)bbL#Or7*JoZ><cW"cUf/$rD]*[pEp<@N`@JR!uAg"+n)Y&8\Q(Zr6NU&sg
%!@GPP>=5[9>4'<Ze"M:j$ah$L-6g9JXqkTd\@Z16<&^*(Hb4?,5fg8C6`@0T(Hb%QNVQFldClb-*mHS,'A8RYCMbQa,,u=]i<1T:
%n^M0V=U[d9_gU3<jYHPuMpF[J)HI!_Z&.$8=>)JEiCG:*N(/fQOS1qAQcGf%p3ht609cTOR,WH-d#"UuaLaeha\VqAR^[_;Znjoo
%^\cRG&XAZ<lRdt[-C>+.'"g+<oI'jNDC_m5YR)!(>0<1T6C*`?J]#T(h3T:E$AL#.Y*fbd/;;<3VVAXMQ[S1!klF)>fniiE2&2U:
%$4!4N's'F;FkgsT3jTCs9f>ac#G?@EcUJq;C/J)]d8Vi6)YR3n53Q@MCC_T`q/)eT'Rf;A?'!\dpGZAHme0#t1PjX`4*mGJ!,I1O
%:o<;W*N=!kD*!.tmjYW6P,?*m2;_P)mRQ$&1M=FJVL*c6a_<csT<3/1Y@FrPN[<n/X1nD3[VDY/YCoDCNp.N0f'JYRXGlBn71`Jj
%b]=_5XHjh77^c32<&Tr@9OdSnh7d&t[HT,Om:oisKsBubYJg#d2.hD5;b9bY+aO-Q4X\M+VP(Fe49TWL42tp?%CG)gH?[8Z]IcLH
%d@Su\C@O2,G`o;&h,8Bh"4`iTS6g<@q!$>:h))OZhsXVLkkuj^Ybm2::><A>ICb^*LufXP1oX6-r.n%Y=3d-%G(Wdu8FlT(<n#A4
%OEbotdiSI5BmV+sZ"'n]/WHEs-$.cdc"oN*)*p**pS$\?mE1A?TAB=Rdl=4.$/TL=H(R:`a79GMl<gQQi@E&acVr9f>ri'Y^s9Y,
%&>:GT(c>E*q@o5B=HqbbTtnAf/%A[^JZ)lpX6j\LpQ:"9]_gE\:]"ZY8Y#(9f.YWG4Whh:[*o+c0Ij2f#cn+P?XVJ:'WXGDs'`C"
%'o,$u=(oA*42VcmHWt&R3Yl-*gEcu8'_NI.^cSI;;CkY<.X9dq'kp7=,Z+8MSP'J/T<5@<c;.kB.IcM9%UZY&\pf7QEu_$1V-EC-
%i+np8n==A!!+0Mub9S!_V<rIdlIn2"!7k3Zf7>#579hKq*X0i#lO_Zfp.$IbL:;'/XBJV,U#<;W7%4orA_eki5OGeNJ&488VWH`+
%(H=_Ud+D-?jg,_d04nFMg`7iMKo=IXV@"/GkI'>l[7YRuC$cjSVsPgMoU7juC<UB%#4G;4o-n2I(b<;)TQk,-);[CNXGiuj[Z8q6
%r:-FD&f>Yd*lLp<-SP;;)$Um!;Y.XY>HSa3i\.9^kKqk0,uA]8`/j>hh#ief-\LedAC:P/S49eg[#Bir8J>&f%80]re-"dic=g8^
%P%G]:3/`Hp\N1+#2r^6W'rdq"hMZ,,cHuadU>Dd]b+aJ[=9WZ:7ptBG54+^&NbA8=5co&ZjSG?9=-92"%67t:P816e:"#DjWUG1T
%N\_YU&H_6F_0MD"^)W$u^`ni/;c@X>#^BYW;1Zlo8F+'/,R&CLW#hEpjJQL'94)MNCRDj*XbXCsfaG?Jk,XRU^eeH3PU.-$jD2mK
%pMDI2ampB0Fm'_Ej-BtIs.2q7#TdO)bq"\6hUm"c<jf3tVnc:j>F+RRY`RW;AjIOW"Wg+Rr?Pl^=k.)@%kQt]g+>E$8Aik-m`@bt
%E5'mn!ulYuhsM%,AM%Z?h:1,n?[e;_o4_B<=7sdf3QMdGa/OAVPQASZ1m9EciRK[#k0o34-mI:jCPmhHcnq,):$H7t4YtYQ\N'WV
%-\a30^Fib^&7eJdQ_TXR2fr88''l>e#GDaoBT4DEhOuAM&S8tq=[d(m%[TN/Q=0#iP)Bdc0<g^iYHbRdY!P:o6aB)sFX6"3QGi)n
%U?kHTMh)*_7un'YB#Bj3A]0!pd\sga7s.4G8mDI:^"OR9`e=k!XT+p+2sI_$9<L)NM@U"ZOk>)7)A.uB8s#ejYZM$<,\21@5TlR'
%UmM2$^T[72Ac'4=Rdg#>P7h@>chs;SGJC7_[S0c$1[n@#J_c+&pP3K,KM>17'@C)F2dE9A!,`MRP9>QV2l\G)*;/7HH^m`$m0r:N
%TZZtX4S2G3aO>!h*GLPF&P7;I_6O/(Wm,u?<MI%HEMuAf6qLcLAYY?P(p+/$M]nF6/)N03WiV1nBRnU[8!bb"b'>a)e^K@k*aGVU
%ck0'jmS6Yi?cH2eIQ<7t]3#00=jOHk9"J^>S;=.Lq/q$C4$A2PMPcT"^J4?;!1o.6a78=`G+K91Hu&\`7>_\XEG+H;I.3"h]gXF&
%(1R`iWJWhGZ`s-l[")L\;l(CYN!35@6k7GKMg&+q_r5[4#4@9^9"Lf]XP*E(9)*3YXQ*:,XSDa>S=t'bI?j)DgI<+8`HD)ck@U.Q
%8!C,`Xqu7H;PYf1k*c]h*S;rHn>fEu%=Lr`0tB<I;tXrt5&l4==jkd.dtE.]D(#!H6lKTEoPsAd<F.Z?c'SP#i`oCKA1AWtGu].N
%VSciY\3(puPY!SrGc>/iHlIq]W"/RPPjeS'&6otM5dS@Zq9<C;:lW9FO&e2X7m!<Npt[=;)LdEZd[!'Wra3Zto!h>4aAq1n<=Q<\
%mkiS>($>t62@#qY"Vo"6Ualoj0b"/:"iCaV[E-7$hc5$pCo#s;mR[AtKDH%8\kicc;k[&0h.'^.+To!n,)SO;`iT@il#B@Ya]qA8
%cQ:L"'P!D,$%W2g/(_DGZ+5]1$YMpja$+dt9/76BniE%(q+]/^eieTGL%e:r+u5b=iO3GdG_=6LD"Tm4PUdeI]n7J7*0f"=(MDl$
%UC8*(e6<ai/JgDAN$pqg.Q^)*..S=3:1ig>V]sLPAh#E5FQ&8N+oH!f5>aK1(L%MZ[E2hGeD-KTs(I$hl!d.28OhI4/i#!<au7:G
%.7nI/"irsIZG)W"-["mKKghNoX=#WE,d%C%-tS6ab;1Vbes&nr)*2:C%4`Hc/?0W6@nDR5po&ho5F@Z#RaIr_59n_$/nOhuL&t3#
%>UA`.Z?:>#_@?t#`49+HN+IV#O1dk5L\a._9%ECNk33G+NoT1N$5I)knK\dcjqW?O8m["L_;,jG;[lL.bH/--JLT'"9%!:9J.DqJ
%nQt%N+.e0ZZPfK.YLs+<-HFVe8nAs?-h*d>Poupe5r4j[<XAOb'`g`"nZ99n6TFS[Ysrd0CL!TLfgcM5;ciF-)kb"Id89"+Tf]n/
%Q`d\aD^Ln]44Cc=WsGO3o6-4o["CAe6;Fs*'IZSQBYdS"0AfY;KWNcuKj#t<Zq*c3?MT0p@LLk]E(oguE"W5Nn(eJA--QYTN+X8?
%m=*d"O!]m:`sBpMbHG8`83:n5&Q5<?qd<j).(VnsRqs_GY<n?^8X-m-[[`K@.atNsYs^9Q&dj;+PG]1/JT<Ign7OVkor>+Qj2#WI
%B%gku)*l_JWjJM%*=a8bG4P/]Lq#>c5OE&0?##m`e*LfO6Ep5Z&fgO\!NB`KKN<(Fc<bR^Q2M\\;u*7.MfeBdq]U;MLnBrlr?]o<
%%Nu<Fq%Y*3W:[#<K5_ed,<Ai(*%O>J[@;C$QgcT/eeTNid[jD=iOWP)SeNG]BqWKu!D/`a#`'%hk/Vl9&iXaf$nPkr;lh4gS"8%+
%eCC"fVj`KA+b@'p8mN&sh/L'lG]36$#`-Yi)^_9jY5[5:8lm0%Ho3_84M'_M=Z=I?ckDUfL@=qg^Aa@V.,.=*5]WPA#q8bb+dA!D
%A6:PMp\-DI9%muYE%Wl+EpY`h"0@kmHle9Bn[M5<e:q^884K3aLBWj:iuUmX"r3!T#AP&KQjE#W$rPY]*!6Hqi/V=T@`OPPlpkNU
%MF@J@*I1N0ANHZ01O-!#%/C=OoAOun$-3,pBPcXBQ&,RCas8u6&`1Wh#F30U)U9lQ^Xu70R)SdMrLO$]HE'S6=`+/Fr[ut6)HL=j
%bG,/$N^f9B]JGg@9P!.=##e=^gW[P,!gl-6p^de7_MBY*Y/d?YJLVj0O,o3j(.k$2&7_[r*aR'h(#YjaAOYnr%Q3\2qgj#TI\/D`
%hcrgF`56&GE[Rfa1>DjeX+PDUIl1/\U(E7<3nH?(PNTjLE[_01-M1t#kT/tGlP4BU#_/dmDoQsB8V68#e!2OjMBITI=#b<)4+3Nr
%%_rrgBim!fOTQJ:[>'0BbS@Xpe:F\dkHjQL"h]"]9,k#qqi&,>4<5JKJh:hZ\QOd)LqY^44fjW*)kKk#AR:;/r>W-&,]5`D6?Do=
%`1&Ea+UD/BST(/s2')on=Tp3d7++%EiIXt7JM=+(7d`O7r8`)Z3Mt\b>,^8fP"XS7WkK6L0_CuH;+B)7dK,qKP[,=LL[5I=;XXYf
%,mjC&(HV'Wf]lgSr+Z]&nkr`Y*;*DIBr^h0MXNKb"G:/m5<aCN'.+S%GBL,O;&,*b,Y<=Q8IL%:\B>F')YY>,"S`b@kd03Ai@99F
%WA-UfN_'F^cM=TZ=,q]eK3XI7K2jX$jVG.sHJI1F<LCCed3/A3VClh*ERe%q'?c\p'<RfIm/"Q$g6Yjdb*&/_`Uds8*9Eb\Z3WBE
%k-,iW5ZZrI\kJH#*+cbr#b,9rKU[ffn[0Pd0dX6HW<u2([$ug!E:+k8G/aYD,elm[:4ASm(5V9YY>%^QY1I\e*p6_sGEAh^&cKCQ
%GX[MAeaYM,f&kr8?;QJl\lEFs'q'4WM#-Aiq>O%=m`fr5Z2c)82$Q$'&M-:8Pj`?qh`[c14Q[&]aU+UtEM"W-3uYa)+;8Qc<D8K^
%!t&Y;6Xk)SQ[TK\7EdH,)/^Q'9,i_lZ[?K^M,IXC:GV2Q98Lnbcqb(7mj=R`foh3R!FbVjET\f)]?aD-CqandI?)hU=r][?5R@5b
%K0tBF<X'\$.gTTU'NTnF:XLEDS+.dZm)P%899nDgr;!K/%a!KPik3Br'!-5/E6"r6Y`u3G@.=[*!d+90b,pHZA5/_dUM<IND>FU@
%m"g4*M]a`_&sEtZ*gtLpA97N/)8qR_p$pPH^5`FUMCk"7c47lC`F$Mo-m=a+bR>-=%0a)f02CdCLUNN!c,S!_m#XO^:6c%CIJ@Tg
%9#hRI]36uL74k_<>0k(n<?M$abiNHa,--`X'':KTjGrhC$&3%d1GnA0ct>P>X^,ZAaecGg04"_$KY@YG<OBVc#A?;Gl?DE,gZFi[
%>_ZRR7(K6>R;Uc^@GNLBC8u-N5cLFd^lsX5bI<B`7VK[&p1OXOc-n=SD4-%c',J>N=Be33$qI6pfZH-9='J75XR8t*7rP<0]%YmB
%0mFM?ZouMKpqJ*JQmu/#6\!Z(D35lpD3_O=K?P2QVH%NW7Y`[1C9+:_RYjd6>=b8XIO5O?<GprjjD-3tO;_j.0p'Y+6o^L0nD_^.
%/*4.PjEt.Y"g>pnLKa3RGNgh)1HoJ*_@S`9#$VLn)V9KF+;=lK_@_ic./A>e+4&B9YCgK8JI"b?><@A\JrbbeHeK^qH_f85\][Xh
%::@]lQ)8s6!o&[*U6>6H+EE(b.?=\5Q@MESjXm)/*.IB2BsRf:Z*ao)#h-C8_Qe"Tl5"_r&"lO\110Z*32mYc^qt'>RZ(tu5?0[q
%h2ZRP7mAlBgc!?`L\Op;iGI%gr+&<!(-FuK)7IPkZ2F-u@*;oZ.6(egF;5*4E'fCa=8+fW!]2WtZ6[\6Os9I",X(RCZ1;sH+r',a
%/1On3B_NOgQ2":g1hV%.Nq_L=etaJU2W+@1/^/*fV'MdaTA&c$][ucGH_T@Si@u+lm'2cL[R-<OE'f<e4-$4b0?lAs`q#[*f^0$<
%]%A@?B&s5ukq84Cr$Xs'C/]2G)gqC+7]tMqRqpec'WQn]+]bN0X-i_]-pO;^cU9O:b5t4:il/ek>L6"ePaufI,6,WMBaNK5'&>40
%OAMcArOP/i($D";X,#25MNQ,EjQ,kUPO51_`@pZU4hYR#Lf;]dGm[`F@)4(Z\_:9uF&*IZGfoZNWr@!\hLQRGHRK+SU5P:AMtcXK
%NFd_==b#b)S3:+FBceoCImL's[?>S&RbGgY3OqL!`p2fMhBS6bDP,o<2=A[6Is8WK`&?_r!j/"%\/()Q`[=9jQ<61P%%8qg"lPEX
%:'8I'&q=TWW&Z)IFg]IlKLulTY@:_\[Ed#$)Zu=TVS;`iN]CpUX.H_=a._@]Q9XZk(P.IXnJi4:'D-?/O9f-m%l2h;]'qealg._F
%hUT&NWPSG'eNH-_Qbp$cQ9Wm\WofMA7+gMDkn]RZ$>tt+8bSj,YZ70ue!N32KH--T(.kH@2h\tO'LER=:YFtYNXJ9uaH?WGs46!I
%b5=Sn"6MOR.u@YiJ:SupcWle&m5PI-7C`q[[-H-5.\6CQOX7RFNF2#kSQat1,b4kQ3r>[\IQA@=H]EN.YD-P`joFFAJ1+1*n_#'/
%L4e9E0'^=LIN;fe<XBCAV9?U)Mf%pPp[VMIZ^e$18W6BqVZ:AZTXe-</m]6hdP=g"RTLLj,aU)38L3lt9Q=TV;Ja?0!fOYWq$e9\
%h`agnnqi(,_Xk@-JS]B=a_sY+/#ed\X:]:C,0JFo(%OQoo%CdF<*N*BEV5<RfP]sl_WQPtGD+4a$@Zpt"@3.G*M_KuOd*a7]l=]\
%/c?EI!*Bj`:*moh_ok7*'W=J0?gX1jGGAiNl;b3a<3W&$r4D"-ea_LJ<(th1-<Ae._D\C]*e8O5C6RO7:NY)<c$HS>6[$0%m.5Qe
%aJfbXSOI!;d^r7=)4N9@!5C_$U&73m4gH\!S-P20:gK9Ae82uB::S`RJ9B'go0[#?<aM:*gnM='M\<@b.JJ=tVJcI^_[!/Se4qWh
%O9@e&[9N5o`9n4dS1Ri&8e,^O#/Ep#V(+kLM%PK]W*74!FJ=SWQio<RJ,R&c8k&Z'km$ff9"ItRZg>`V!&6d8Fc3-Vjff&UUUbt#
%Q_g[m,0EVVB8(<UMNg^u*e8D@#=UfZJ7Pk\B-EcFe9d[FRD"*A:XK!*B'n1U/_haXdLp*ORR35_0p"(*U1cRJJ+LU:Q4$e#];sY8
%L28?1pKD>__Nb0.@L87!3,MpZfcA21Pc/IUDRr-Vrt!gcMu4%>eNHf3pmr-GaQ0rk-Wgo`R!4Z!Wc3Y'mn98F%><nIbC11.%:J$-
%b/%Xref0%6+CG?MM[nF7qKZAGT(@r+_d^HL^<`]Dc:9\Np/(k&TkHdKY0o4N\ek$C%ZO&OW00aA?X@5,8ZuX-D1Qg,Bn1Ka%^8k5
%<MrZ-l1#<Sq=dskYMJY.\6PBnc*O!iN]$\#0I:J(0JZ;X24\<35SVbFdjX.9n]U)h2%k#<n,;7eNeC):&!6&^h>NPQ79(6JMZs>m
%XftqDkjRj%7G50D!;(T@-%@LNe$;a8RV1sbHd1F'N&oL7.Mo[!7Kij@ht[Q1'[LsEHgR?.'\[eVaA+u'GRV>gH>r9-05f:5/Hs9o
%ZO@!9T+o]=.J2AR;+cX?GoKY402pi%KF:_S<a+Rl'a]NXerp.?Lkk2db+GW"\Vl"o""qiTQf^>[<CNV8MFaDZSk\;/\=UE[q-XKR
%Lc[J3EOMV^"oBH.e]GZL;5i./8;J9.'6ITFr'n1E_=ht2aCV-`WS4$sXm7+qPePe20lA7[dk&THCI!`OiL<XI0:bb^Reb&nDZ0=q
%j40f;=$g$,P<QrF_%om_<ZN5"d#Q6RX4W>%C'C-o;Or[.JCRi!7,s%iWE_dRTsQ;dJ&s#kZ\^2'%c.V5B`p-J>$h:5+`<*rb_cN#
%23JV+T/H58j/E3-Be-rNoEdAM,)\$_43M`:h9\1u#FX._P->DJUaiu3\b,/H#2="9jWttjS^TTA*D']&_;+SZ$[;8*a\!V/oB5,o
%_^V0/A(sR^H1sX0576q1NBr$D]SWOLq@FiZoi\D`6@rU=$[6?>%%Y(#.%RM^cF*`06=HKH7p,f0eY`rA8^."`+M[mA62liKo]oR6
%YR[L@Tls4=g^EcMMNeDi$]A]@G)f*4k'2M,S&,BH!&/XX(h4\)_Es0FCBgqQ?U#3;q0!AR2P-53@/):t-:mg2Tb$]uJ6`kC21S^6
%gHV.9IafC@qSjb2A6"4fP;+V#'!ZC8KI]K.LXX"@j_?1@<iN_)P9/unO#=3#UXlHTK20?RHM=`Xqe1Gs00&o;Z^K07Rj/glgVE"'
%Y%'Z:jM*ph:f\&-+4Ju)P.-mWMEf]Y&"b=b^l"8lF&G.1\p2u:"Yo=7W"<mc4RO0AG&<W5![j$;Gm%Cp)0>Xmj\WZ#:WdWOKNMi6
%cC)g[d2Le#QU'nF^jI;GjfK925@bC*=BiOO?d8pIin\Q9*jaH.`lZQ'c^/'Q5%>d?N?aqPlj81tFk.-1j.udt0p$EH2jlDk^bjHB
%?%RnTNSfS/Q5M!jjmql+21,\u,ZF]6AF3:#fb5i75T3=[cUR7Q:l3GBp=?1[hcUk4XI('2d;a,Xe)J3SXeATbo[9F_7*^<K[cH"[
%BsP@E\0%j)Sd_XN.*Qop*NMV;R3Qd0Rj5`H!81\*#^kJWnR6e#>ajooR1e7*>pf[Tf-aoXNo4!Ib%J2&Gcht(G!U9b$UE(&6d^1j
%dOq@FH?OsB-/B->#\%^kaLp&lO1nW\rDX)o*(OP=l9c2*4T_:T$U;6]??a]0>Nc%p1(oC.&'>ABHX-;3GIQ%CIPWaA&.2coXbPB#
%@ds>P4rX,rT3"X!#I^IIdlp+aV"io2/Ib,SLnGk%XVY%ADQ:0llS:1WQjIm%43NMd$\0NP[\Zk.5YTf7g_kuf$!V4)1>dgp:WO5:
%&2[7+S301WHF5aNrLeF`CR'0H6N[HsIj\BUI"TEN^b\IW&!]uO4$-2:<LNH^#>tcZp90NZ7;":qO4^L/$+So`j8O19'0+6A+%4cU
%a^$Eeb%,"amRH;Md)O3=fV$@?H"WNg"fbZPou(`ZO?mELo-JBhWqM$'&rs-UB4rcSO[I;,#5Pl%`=\DLGr:hmreJu!hFSJs'O3W!
%mW+=sJ/o&Aq*U"*.]K9DnM1.e<(Upsd)P+NGW]<94s;R^N?%rRGR>1t=tNW`1(_?5_$lSbL,>:l1aBShWLtQFNj85a.[X;RYY6#Z
%3c;h2S-M4#eR/'sWbC"D(C+"sd!.&%`lT,(mlbZP@ujV<(RC$'Kqk$Q8[&i6,,*dA&Jl6ANftQ6,K'/t=E,A^DGp""j!m]Bp0P1f
%kb]jUe*S<KE3!!?=bI-jfR03b(>30N65L^]pTqAT_!B8l*R>QM"?u.J#fnq/l?;GjDlR^b2A[G[058=G_/#)YTMS@LqeKA\P`CfT
%!)JYp1LHjLNo/R5BLLFS".-#LWl[>A\_)1/,!;iNiP*,:ai)X7:$,@(i;a#phHVqBKb,!;'e:TO+0+lrP?'o#\%jr(PIrTiZZT6"
%`Vn#rW8XOK.-$9LZU+V]^%q>%)p&j&Uoe1#*qdCk,$%J$7.$)fX#UPq^d_c\f-oBrN>ktIL06d/,ooj^!]TFgWI3'O1-2bl#D^tY
%JhE_a*&;8K4`/[231dnS$848*%N+[e+&A6OZ6!PVhrKDT!"f+",)mui8q_$#Bd&@R^+pp)XItaI;e!jaop2G]FEU<A=_5<l%;0V%
%-^lfT7BF^[`+]gbju+<F"5.kG;V1TCi.-;N;$D6%;rk?g3^W-\Xku1n6L-$Od`gMB*qn1`htJAhl8M1E]HWCdHU]b,F1I,C7DNAe
%2Hhqh4=u@_\-:PY>B_=-75CBGf>2S"6`%_o'pE)[!9c/gIFboRGE+Mr;QoJ_g6!s"p&Ls7(t89-2Y&jAdS:jmCFe\Ih)gefVSW]P
%0qLM6FL2P,26!4F,?`0-3dkB#CROL;/058Pk=ioti%*`1F>Vh_c\hE>/7RX'66qFO84(]&P!kRI8_P>Q'SoPjihli:!:Lb4Cn=58
%*aFk[Zi''G8c4U=jT80greI;"'Wusj1]sP^=R;f;Hr4:Ljf"+n8PN@g<H\Y*MkH0RT+;ST+T$:HNMKCm,[-?"#Nsh]kH-;R$']@'
%=YCV$,'[T\n5Fb)3_m`4>NMtuV8Z:l%_1R]aboY_2u;BRe3`]7igePW47Y?hWB%X^!h>0KMotYVQsS3l4ZIZY'br7s:(pX(mh&H'
%4U8Zkn]@7Tho^FQj9ENrk45Auc9/E1bNaY).-1I(Eb(YS5.FoJ59j&^E[U]?l_jAlc1PgaB",kk.sXqB*,iB&k**dWGR],A@Xn!.
%hQ>j;H[+a1ojju'eCU6jfpf,`4_W;9eMI7L)pRt<&is6S=,ZZKB1YrC/Q911<)kN+bgYAC"q;@o&N%EianI8,3<CG1[EQI<f@to_
%UY]"\;G<]/8du)imb/,l8!k>KVFH=V]T,7>];>Wi?Othi6,u+K%.,EJ2,H5p/pCpZ3M28\P<o/KHf5q:d\304-X$+m+H7G4BdaRl
%E!'rSWA#aff=3$gh/<V^pt!9.R7\..f9QlIYd[LC8Z:fF,7Y4Z$Enq&ChS>G%!>KI0Qc5)bEcJ'F8-W`$kYI#%#l^$pj$5m1^Tm4
%s*U[(V)j3f.(6@9-`XZ%])Od#rlmkR$':$?l98"R"_$Y$Ki^h/I98i<=Hb8O.Uomr`G3L$!RJLTd2G'L<:LP_E>6um`2V:J#@Rh/
%IPk]8A4?"Y%8rX5ID&5/X,c5=-M.[Sa$ZRgi-afUEdj,e+,&_6?/N>DlAXi2_0mtEM48WuGMS,E4R_5*hd:6(lQj^Bh(.+N>41s"
%<86a#U14."g["[\X!D\0kD=UVeG$M.^SLqR(Lb)\W,Yt,>T,J73FV0Q7+!H^?BUks*/o68HTK7@+4X_8OG?"4P0V9#qnl&9r9/_(
%Xf+s*ftUDG'%'7!OA=q9A\]]H>B/&NFXsk-ecfm84p-O"JKEgC&m(/f7ar'ucd`MP67/aHhM<RA_18p<!*[T1$b2"%XrQ@lBi5OF
%;Q"c:=gH7$ra)?G=L_1f=,YUfD7hH\2/54H(CLS&jO+AG+(fT=(.#%)$Xtbj!WLB@\1Z$KK?DUq.[@i(V[tIX\?!nZ\s10'dA&*a
%ZLB#"*Rp.@I5&rP2tD26(8tja-fD&5U10*S<B'sm22[F@n;F[W:Hu^=.n;FhqV:IEJs4Q-pELi<Z$0P)/38Jkc4>ZjmA$P4n=>6]
%78&Z&C>&8B-C1c\_.giY0\UjIV<H7sZ2!+MJ1pI:e>U[p#QT[h_Z6gIqB3]7-DpmWYirk0$m\bb.@^%Eb\r9)<!dM'>&`]8-M34J
%$a'IQ2&g#qqCd?0cZ&b#4H`D9,Z"=pfcD!T[osBG#Edknn)0`=IPiBLNq0oZaYHg%'"7-S-LB6*7?&$U?jh=<5a[XlFHiKJ'@h$g
%*@n'W`Z.[]=eWIU">r<ZolNmrEWL-K,]!T?3A>LqDcJJW<mUpbloW/s[ARAr+;Q_Fak\c)gr*:`#IBAC8EV\mXuc7BkML[ogA]9Y
%SJu49It%)4aj*]teG14d7ebbGCl1S1Ip6%d?'Xcs/Ur++Z_!S5R`BNbFkn/8Uk6WZ3@"iW^BYE^:G\As;NJl`#l7S!+_tNSgP[om
%^YBCt<t/>\W-*DE7,KkC(uY^_%4AZ0Kk#`'9UK!H2,"VE&k;M=Q5^uL&T&9+MOWbUA%`=E;Os,4aD!.PAOBO'1>uB&QgJ4CT?bDG
%O-8+g3*s)t!XlSp))VcO"8WF<N,G6e,fmf$26GdB\b'pU=L]qO/g7.p'S]ohc7n==5]i>KJ?i%Qfi_juBC`O;r9Ko)O,T$6(*A.E
%I@`:]a,U%>nXGfXWVF^k3V:Y;oRhEj]%gik>?Ss:VCEmnmU48"c7_b6C)Q>g@me-`b(Z\O==,kNp(Mr)""'WP)f<F]?Ll@c,rbH/
%q4`/X.X(l_5WQ&]3Wms4,#XU0bT>Ii'Qj5?jU-j%T\bl2bMFVE!"kA:l11a=ReBqpoN,?"6h%6IZ=S+A]qSK^nK:f.P@D\$`4ST2
%PT[=9K"Ea!<j&Omem[8h28((FW*1jo,GjONGVZR^P(:B'-8LB49%mV7)_*=Y*&\0).#NXR_(4Bcou9YXL#GP3i_1CN#]7u:onZ.\
%jM>.]Z48\h.NQE51QcRVicUA+YrSm)RsY&=9i4c#n6rF1F:VJjLSt.`=_Q$JM(B!E3?$L4m0Rp[3(]-GQ!'Q"Zh3Yka*p-DY3kd^
%E^.7@*T4e]SYo@]P_3\U"b`Q:DF0%:']hZE<*V@N'c=<PhJZD+**O)fdF,aNPn(Vp8E)/\=WY_k6S_tKE8I:imbu3`WXGQ]Wg4LJ
%a9;mQ\X^W*"VFIcaS#Ih8K#B9aEoF!a=n3b_mkCp]Ad>q@F[^Kab5hS#t+pmFJ@5DM022h"D^@bbhFd/O?,q`<-c?.3aHYX:dpD/
%kKO:pjtV!=SGQ044;k=eh>F=&+UF,mKJ;_0%\`Lq@4<#4Fq':CafOEHH#$tYaF<dQ)Dujpfat0$"d+Tdb2?_g+Rh`g=m9hBhT**i
%KPpC$CVj#0a/2h(K&uDj(*q1Dh>$*/(GrFA(2XWf/'trRZ*i]X,rV<lqh+!#Db@SmhPI58#Z"0l.IObDJU'A,^JK_b>l4s$UW9c5
%Su"E,QLZ3`P@i?.(u1OeW>J;P_;#YLT1(s2b+b$Bc>%VWOn*\PKd_U+r520eq5=\dYHOm;j^8lLdZgMK%[:Ha-9H1dTMV\H6W5Uh
%T)@fI+c3Xnm)B[)=]=H7E0%7Kp1+.tB0aX#;mIePan.HugXBb^MT<?SCN7"uNppUPgT/R"W'dus_).DTcunM(L.YH7,HJUO#N?H9
%PFQ:'RC-nT9S._Jck[qXlh#JYA7Z8t:UG1Feuf?2P]P,gSi>YQ56Kf7\K^O'l!RocZ(LI<l+n<,^=>9SFAQYgUX&*M<2]9hOtr,a
%[E+Y/`<*)Glu@D+c6b-;SsY&e\hHJq+VpaqGmZL+j:N5?gOj%acP53G4t"bc?t=s0K]^KqI]]MRqpg^j6.FdsU)U^O9:8Zk=gF2Y
%N_3_2gq6"^)O;YLC\8DY:O2F'p<6j+D0FMR?AeFXUJm/;8fDe//l@i'hA^4.Sd#qSC\%:tOK"+!^`:8sfK,M$=ImHkp!Uf"LC1L"
%)48u<L^)1/hE:8d7t&VrZ#6V$p=jMM02lA<(kdWWeGHckSC_e7P)+r&8Pt''CpGo7d?sm&22`T3KV_hH1UKtI`)WlW96L%H`TZsF
%o=.1[7U0R2V]s!KbgBT^RmZnK;FQZISJ4Aj8>Co;YG)oj:b%#V\t=QlgIIjM@l,/Ra*pY9_a5:_at&?d.q3TmKs[fL?1[*M\KARf
%=#5cW#b'jsX;$>X1<o!7:qF4hHR)OM[2l[=ORst#K?57kT;Ybf<PnuWUC2[,<M<@ndAdE(+h("60)$[9kdqBYb?VN`*\)CoHO80d
%]'mmc]VG@O7-K#?=Hd>[X2OI4#.2-%<MWV4h,/,%$YZ*N[iT-1Kc,&qa(?8>76*!pA+OpN5<;AsE!Temr$r9rpW+s@FifqW>=WiW
%f"7CipElXb1*0i^!A@[Hr2k<Sk(o4(Ub[*Ri2+Vu"u"*XeK=3ikOW/N.!IoU[,'UD/q?-Jj7k5TrX]&"rnm`H,lDZ?I&6.V0&2=;
%5Pl_;:E&D-1VEYPU\OiGrRZPrnW,p4l^sc%dI/.VLHkh3hu7`r_a",g:q]%\nfMfOpC2D"$qNV7i'78'hu;^js7"&nrTdhjkJLC$
%mf3:X?U"DXLS&LD?ZT0:f=[>3]AN@$PqVDsq9#s*mtpAmk>oPb9VUB0:@90K)0GFnJ,fQIcThI!f7/:-R/#@sUp#4:9T26c5IUtA
%&)$c\96&^^%*aj9o7-c1+37eHn+@(X.(<!b![?`Kl&M@Sk+A3"+7<^n#Ws)i!f9VH\#Q[A>stM4Gcq4\bO'S%ka]BWQ)CPMiraU4
%]mTG@%BSmmhsoUmc!05:=ENF$IH+Ik5(S*+XZ@3skp\m]X04q^Eh"$\k0&O,)8Y[@oZ'TT1rH,h$"-KX+:=CLK@L\13APQuU8:&G
%Gn@o4]f5`>Z3?%NGFq)Ejq?\CkI6JefbA>Nm@daJcY&jClW%T;JU$qpo6rfD2]60kMlfU&AY>a-VW_ILr3p\4>F[8gg;uq.[r4A7
%m`+W@,:l*#j6\?N^XR8t9-JO!p8hG=*kJcRI-,.@??P%P%OLU)4FOEuBK.1U][J\LX?1\>TQ[mfgS4`<<.][EXd2-Qbae3!!jrY3
%GmSlIU6;)J/]bBZ40"@:J,i7WrfF.:&eNm^\*=C2l\a2G(9tPbl8nlJNrT`**`Jk;%PJ8(`d`mD4ob46[GUYl6(\kiIl\XCW"6I3
%YO/`<,JOXgj:W%CJ,A>h$&'K>=<Hfogut6*.*9PW'2a^%ZB_EC@=I2(!U8e\$n1>7"&k/[:D68$6KBB?5,FuQ/=bnXJ'T7'0d-Tn
%VX@>k8kp@4=$<i17gl&+kD7_<2T<h>#DFsScs(E$'_k:h&,gr8&>+P\4>N5:)1p]p9EXX?.R&*td)o>LeTE7Qeloo3"T%(C=ur&O
%m%XoTJjjr<U.A$[I,[Fq`:)[8HS6+"`q@=*O-D-/h"AWjCMom@pFX-O6,g;9"K('J)[ZA8;7leJ]dR(%(N7`+bC=afN@mEmaDE&+
%(rpPOj)AGhnoHkX,<N&YkTo6b3HcD+!@!l&A&j"sP($Bbr0`9Zh#Gtps#[XN^>u-]jZP)#43F0N*<1bp\M"f&o39g4NH8gbca)]I
%i!6u2Z2@YBg_Zb&HttUW7WELgZ`7t`N]c)g>rtOWoQr#qmRnQc<!9PVa[dauCLSHA[]<6,fZF.&l7_BnQ&%A`g9#sK5V&kQ*VuW(
%ER6&:*&kuDm].>\QoF7khcE1-M49_;-c'!an/I'(+NTF1NBs"$@s;^2+VY:ndmN$\755(Tk!=:tm+l/#i/qffMdeN]4)0@Giu7F!
%SfH-^hf\AZ&SeCMgZ"/Sdeg#$hfrT'52R1RX\5RJe<=iXD(8@bXBgnq.h1H.d07nAd^Xe85kcR\EkQe(6*:o2L!%uK.daPW,:X6s
%$QR?s:0?iW,#H;T>Zr-:ckf;0[BcU.JAtAZ_BjmuGAq*e%=6TtO5BGWs-LLunO_$XIt%)]rn0N=^&MI=n]fh'roGfbRJ)BQqT\bQ
%hZ*DtJ,.Q_s7S*1`CY%K,N">`[QXI00tHgV,(A)>k!7D"5Olqsr9Tb7b:*/Je#/!HilMgJJEYR1Z@j-m#SjMP8M@-jKKTi=#Z2Bq
%ao)ieJ7HTJZ</"kF%Of/-JdZ!^L'=Z6N'7iX5#;#"sd0!l+7-_ld)cn<dJj4Hj->/3aJss1)_rriHC#raqPSJ]h.*aR[#7CP9P$b
%#9o>>+%oA%lER^[b51mKm<n<[B-hm$[#+0,#$mc^i4IS[4[0JR7imM)Xa)0lWulc7?$eajT+d=i0aK^#(p0V$!8!HMZs3tGJ8(_j
%9U@>4Yi+m&]6;Y\CRO[>^YN*hL>ii"ch#q1>Ba`sBBS(k8g_JLQY9=;qpS1P<pReMBNEs*gM_%8FqG):g@FsV(;B\DX,"re2*P<#
%/PoS'g6,j@AniNN]kGAKR(==[!0b!2PQ'a_,8h@>gl=fL=W"?tTt7nV$P6H5o1m5%fYZY14)'D)7!VV<ceXNWX1\9O9FJ_$CX"th
%/\rsX;=X.^8&VD!d(\7e[n`Hs4mVD%0KXR%e>If"R[m]I]Dh'UA1.jm0/o:YqTl!As6\tr^WHb^@eeU+4!m6er8Fo&\t1D;\?"bT
%*%YJ=$?RfXBY91tj\^[Dd)*\Q,Ya0^lh7l9;>`'8hFU;)]p,>ic_5\j]BoN@6c92CCLB^%]+LZ^Ttg%\<iC9Ch!P%4^@4`h$IM6W
%W%hZ]AB;a)#@IYumaouq7@5eU!`nJF(fdAZq+17VUf:TgU?kB5hf*-)jPLhI0[LZ"k]81sIuqG84.K.S"c"a/+\Ta,K`\t6&\ZQ2
%O4G#Ub?OpWBBOD;6'+ESG&bpI&!f*s16=g8o?P4IK\JihE)?E()O-q!E((1gFCp'$J[W.kI]ICE<*9n=-<7kAI-k+?+e$2keX#@$
%ahX,KP0lk$6(ng@Y!H#Ua,6hT9LdNCZ6GafOf$;"/S&Am1l7@5O#SMlVujs2Iu"lcFn^(6*dhC,hE<-\C+rV6Pi!uD#,aX6F7KU!
%,['tYC"9NAJKL(hY1iq6880>Li@6trK?PY$'orlZIan!Vn`[GpI'TBUQEl6S$HPc9Q!f6coa6U;>2*n)Q'5I+4&'VJ>j=-[Yr)`e
%.BCWt3"r=G'[bH'<!H27F5hW:*tQfS0<8';g5loR#:0L-Qkm9`UEK$5%]H=`ZH1_b<DDEaXe\R(-oI\T4m[J5=M"oZ2XSnmc-mm3
%GhAb+khrJPKU8Z+ClEG.J`?R0%L?#O(IBiL\fpoX9;1$H?qV0o^`[V6OdJYRdrONf7K;T^#Y^p,IAi;IU\Ui4M7D,F^%CJ;U.HCO
%LnqomRSo6,<s.RHQ3m7OVa$XG<iN3ff'>`8Sm`_@Wh8V6kUO1r(E'"7Wd/_t-]g+'];^J(.'E3@3Cpt'JTP3K0oeir"F)j]B\N.6
%,1arjoq3*8WWC7$2:!KHa_m*^f,#A#.2musY9/+^^u0@cA<BdK!DnI=>.uNsQ,ot7Vs<GSX8!'u95G.K0tqU&..X/bs!H5H#4rNL
%T6pD1kNd5j!$a?>WOeTDisSOf6+-hV)XnfIdp.S>/PlYQ210i3\?/c?R*pKQ4po?W<1rK0-@KV0^1+4LY==1aoNp;1r^-Wm';]?6
%jc'=^Q\C#OU74NgXj4Rs8JPq2*4qB&4pf0AicQkbbW&pa,rtAj$FQ+u!bmoZ\G/bfHVV"c($.+E':>2W)QH:<+UqI%Jl4Am[0B1I
%6P"J!R?)si?U;L0kutuMF,bbF3OoK"20T6b@F_C_J:,eOi9**#J+-$,`K#`>kVW*hms]@5M9$h$nS6$d^6Lkl*OBDSeA)0Kf;*tk
%MKE&GD:3$NbO&W1@*Fah0BsmoY,0Kun7b[hFs(A!gD=FCM^VFm*SXkA\2u=H7@E1\ohsh=V5!LBHE*toR[,hEHo_Cl\jND7H@;32
%S[$SAe7U'Cb+PlW<+>hf`F51b_:+,'\LomU2FK,t<>s'QS/_uR.Sr5mq.:[AJ$;4'<#P8lQHN`kW2CWL-`HSM%=nTcceP?oU#3j9
%XI(i=Phe!U<L`I.$CbAd*quqBDf^Y=pIVUq*[gccC6$Cb1L='%86n[6D8[10h6'YJr`WgaT?[)-DNfbXo#ml#IuQt)pL+#4fPsje
%c:48fS^d70@hNDj$jC)+@pRblO6,3X0bkD2khPL`idC2rc!7Fu!9RTp;td*<JtC;_BFg8NZh8\nFE:NDD`(T:eESW`EOBT8_<*T6
%_+'CpMp;<]AAF)!V4<R>Gj'3Hi,3&qI.0>?l1t!"Dkic):IlJuEPSr_E^(/Z)5\3ca^shkS^iQc\p[t!OCOMAR82jiiN&T\`2RQ0
%o'b_rD-=sBlEdJ.,&S\qfh(<4U/<0gd`PF2D3ZZ71/&Q3`W13m^8uE"do^A:7>>/I233kR7Fug(*TPa#QmGY-j7')VX%c5'V6Cp#
%eA]>$oo0#"h#P#0;?+*0V9a;$CuN"u`C]cTNnmF(Oo-X;;im2`$Tp<&Mo?Y!.;QM)f.f_h7G_3-iT8c*q)tVmKY=)^k>JgM"h_'Q
%jZSXoeC1^366/S,d)CVrmFIh,[`T/[Ce8]9b1VoJPDsU_Mu-'14Z\-&7>Ns'0hJ8i$!dDF;AmN$$;/(BH8JUJ[&WcDFn@K<faSX0
%ratYl:&$)rhWod*Nr._cdHc@e*r)2JI#<$1F>$)DK$^gtJFF^s42n",$@TS]]<0`HU#lt/"[pf.ATSO*e`Z'W$:K$I.%Kh.SQgRp
%f-iqrV3E+@Hsr<&X9I:"lr8nOY"$^X)7R<sWDaX<EpZCCJo@M<26GYJ-@Uel2VSF1>cMb9*Y229CV]X<.b+cdl3KNkXXD$_$RPSs
%p,u"N/'<eh#FQcRnf*Zs8i>oV]UpMR2DULP+kG"blZ=^OCd'Ai@d)GC^9!2i?/k7*+8`u">tXSIPmVke`TX\7UU#TDBe.5t9_uF4
%gmhXCL03pV-%`eNeb/Odid#9I>\@u/kcJb$Nuit)M&U^*Fq2iBc#IubH:Ta.9L<-Lk@X&m9!6OuW4ot''<ZMNoG2$ERV'tX9I*\G
%D;]M/&T3cHob_AR?HT,d+;db3HBeK?FnqpO#NB[=7UG/t3]nn+jfjk#WL,V_;Mg()QO"FKPs\J`,)M>TXG>7>l!PX6.SQ[`O9.mt
%.%aRF5(9g'2j+bG*&0F8[W[V6VTD;j::=c!&!R4eZWr-p`+mA,Ghg#5A:duV]&Aip`!CUFRdkfnqQ!(&7DFaoPT19q"ZM9+Y$7Bh
%?Zm_e8`=dCNrWWXde=5C);-36Y`^9%=d0oql'I1kcffs>p'LX0BHT@JjZ]QJdg7K0P;6Q(-tF`I)gCg)i6@rP2hU@h\r?IP_P]gI
%VL-D7[_tL=T$I#h7IedCofp.06KCBjcBs+u*nta3`iOno,'uZhNOU&MXcTKh]6c<R3glMBN)EQf!XB%50Q_GJ:MM,.@[pll`BW*"
%[e,pqeM7eG)W_@Se[@_m[n),02p)hn-<'NRF#1Cd+=)3m8;8P[iK;L+VBK&>3ld8-:Y/0E&^k&M9O4g\Ql5cPrcF7dUQ$>@l$B&p
%8"7"@r",tC7PN9!f,;jH\tTHW*tA(1fm.o\1P(K]j[<d.-WKTO;V.AL8J/@Y?j*$pI#%iHFG]/:l_[qL'[r3LC'A\1UmNnb6VI?S
%<b*$UfBqCog\,GJH/k(]!b]E.nL8TNHo5KuJEsT4fd6@f=fp0H)82DD1\2-c#M$#^F:n@;PI.oH;cQp@%D\0iqIJ[J)i.!gOuicl
%04e\+l2:$QG*Ohmp*_)&c8M>M>mU]`T-[a8,O"+o<#^7,P$Jjb<eRVb$s0MWQ0#o3$A3rP)?>RNeN#'>6FHo(MSZ8HPM.L:bEc$B
%$d_WGc=*-c+_eu0H7^9kY,3dM`7?u,bq&.b.Vt>ol0-3p*e,@a-s\n"r[.*nVs,&5p.tmjQXDn<p+ZX[Lp/q[XkMunq3A*:X>qY=
%<ArfX'ilS<Eh-;a;'c58^[u9lMahiYW^(/tQ%aK9-^XVgK3InP=4V\pMOIh7P-h@6S_s@Y>nU9cAOY48IQ%"^^NJS7QhpD)2t.ZN
%ao'=UeE]u`YX+Eh=poXhS;!+5R>eL@W=VY[Q-f_GLm3s"7>qB$`mT4sXZT&,KQIf#CEPI0h]SBS8u^<N\g^1$']O7o("HA06;]18
%ot;rE7MTEM.H.3#):$ej6X!lXHM:mHhYe5%lF".1^+PK8Kh;43o96[-f,m2o2Ja\0@ES\"r)12EB\S2K[+@"8):B-rc#,0-9N?^I
%E5"[Hm[4t:Wl]OkSuK,lNRZ^.pN+OHItd^qQAmB&_s6U!=`\E/#-NU3Up)OHU"kWf%X*5cAbp-eVQ'V<VWQ6HS',pNE*_sW1$.$*
%'T7!Ij32En?5kA(?f/e6gh/DQ_#`8dV"RnFW,qeZg58]rZt@?E:L`Ou#7J0o4?)G`IVd/QENK]s<[4V-7:WiPFoHG4j1V3BHg#)]
%C"Bhd`Ye>9_7J_`VAqM9[lda^XD_D^erO.Q`(=$YIAbo10=@uD+eFbM#J5mq>qpHMo:6C3Vh%5W`CIBeSnr1NM$TG9EdaX5M;RJD
%5Bs<6:tI1`-`\md[ORF)eGn`$^?US/DK+[bO;*2,BUN*C<NkU9Ba"ZT3FkDBZk@GJJn1$Og.P$@[QDHDBhreD*RT?"c8'JO'9mNn
%k_`B*;5G$TCu[W__cT&q28I#[`6'2h>%,N^rAN1hA'>(9q8pcggF',3/L)$;R#"O_@t"kEn/KZQ:@/eTXmhtVH-RlP9TJaK)tH.n
%KB\iLQlG\$?0X_%c1&$<J?7UE"?8+[48%2ORb`*iA.j`K!moV36u=r&RTTIqo^Z-3Y0-4gPeM>4k?L.Z>heHo>e*gCf"2gB&R9E3
%85B?\)Gu2@]5+E51874KdZ6;LgXOc`8c%n]m9H`_kB_1,7E4uHDV0hagQReR>Q=qkm!i!17+q,:lZK98YMS;>BV;fokI]D%j9KZX
%&[WEM/!!#Rm$Ss_9/lmR^bu2S2hVU=>L@;/7VG?(H]I5bQpu:W)^rkgiOQQOf&@``a#=TQ_/V^EG5/1hH?"plFNMEfg%51ifC:M-
%q34@XMp7DW7:;NIPgc/s(n/W]UpeL`Q<r^27]h7JeF>hI+G+nXE3CYGB_fk==?fH;p-(TX9']P*!>^](LimjSM<ui*6:D5e^k!+H
%_AA[>;?#$Od&QmZp`>3F$X2$>ahEY-A/,2b6],Qc*$Upg&u?60p1<D#dY$tip;]cNicYcH/WqYblRO0d=nTG=P8'@[M5Z:6g/lMV
%BCbjTcA(jU7hLLa;AW;u'SIkU"rE2[#^UNJ`1\?q(9E7:[iX0QoG*$*jIPeK#C<.OW//SYU>tafe39jL?Y@,G6$/h8,=NkEU9(\P
%nP#q;\iU@jAVZHjN(C,17g&d%L-F)`qL#Trfk.VAKe=Z,qUmV,VrQ\hA<tH4Ap4ld3M^aC2rW0jB]3cij''5b'uc-dI&i^;VD![.
%Wh\Gc_+Tu@>&=/`k5*-bZ/)fTiUEg0VHLp`[P[=+P+t8oU'cJ\;'YmBU4.R#&1N^u!SeDr4OaNL*iC<*.*>49DD_-7A"OO'U$GR.
%U4kW-TVU8QEP!=I4+AYA)8:$_VJ45&)lr&u:>-DlnjtWC.A"j\U$NpsM?;7aKTB5k(#=GD"iM>_(scpo'ID3FbZM#=XaEkY@i0Yk
%Ketnodiq_jX)1_#=@e=@:-Wj7V4bbTkem#;IL-khKf+co;gj7p@R>3CH%sNb.=/)kW:=p7jGq=CNg6EL=%%7OaK'5M]0\?uV'c-R
%22lT%4e=+WSn*7&Q#NRuY.B)4_qCq4fn_ocL1p5NC>\F+X0>SRO-`&/Ahn,dAc(\,=I[/#U9(tt6X"")8;fVAlG*H3AEPL7?**pJ
%G7+8'YNN2A\fXmg=[Y[BoX3?SZ<C;/k@!Vh7[$hAMC/(gmmm?0m!M:TrImlm3F8C@Rh3l##`,HP_+ff#c4O17#t!RTBMdaSXksTP
%P]t?./XmF-1>PS<AO(J[Xo,%5$R/_;WZ)iD:P?<oaS\T^c;%lgUj?h\'2bgB,q#9.Tb9YV9r_2b!C](_.6+g_EUZ9?PSHgqrD'g<
%d\WcD@;uh*/onbj.!SWZ5HuF>76rJu+@)I2g6L`6jL%==l][q.!.$=CK-2R*.,k:ZigJNTU+BkU8Q#aY8m6;kU(?]rC!_#">f9A.
%2Vno1,,Xnd;lSn`mUY(jB2q'$4eE[ar%`3J[<SP_&^'/8JV\qlNI!5mY\n\mj8,(ZHUSn\cD<P\3^W,2"6Hq74=K4sM2-Bhnq`'=
%V`;GR90B.0m^o(p.QKlG't0HB"JH%-EedVe[Km5/]d,tZd;hdC$k.W;/gDWP$mSX=SaWE(QCJ&FM);OU/36"s\pY3f'i3B.Dsu9H
%1[MXFEsc"s_^E07Kdl_4OBW^E42UG-q04Hga)gceddHSc6kn/rZ!C)dK0O27%Csu#WqoCDB3%g*WRd.+%dp?*+8nbC:mTTO:FC^N
%+!CiCa;=s&?9=2$-Z+/'9@Y,#JhY\VNk2S!_W:4I9e)9L1_\0Vj4iTFAYHZoRd&+Nd-BkE[g-3SE[4rZ.XI.Hn_(DFfJjdR)Ra[>
%(l[19QF<mLB,r!iU+(pD?[?eN_M,,9OH-+e%oKfHp3<dZQfJ^)CP=\.(=SGXb<=O$[.bGjkqUh"7sm-k:PSL_n7Q)dCF^UhN*bDX
%73i&Fk9EtP!0>*T@D8o7m.ejcRS(I3h:C2Y4k07`<tC'khsmjA@tq#PqI0f5'(=62lnF#rUo*Y:M=@^9DkrofX`e:I`NjF2HX:&f
%etN#A&:dr:(Ik.J2j*FHr:[^r0g2edq3inA1GgbDf'?+&JNkpr1%M:=G^#-?\4ItrdPrPq+\K5AqPYI96un!qR-b'*(Pdm=;Fk$d
%l*H^Jr(+@p8GmZ'!)4dpiuCTf3u^%FA`';IO*c^=/dV[k;b0NK@:POs#rH'@*Hm*b6u3[&<r&mi*1tUo-!KN3e`3XB_q`K_FDB5B
%GFNn2%tEtqX<%o;X3V_[nC;#F`c<(,SD1`I+dM\jV00t>G,0/<D]_?rZmecrXd^s=YuClV*e1:_pO;b@'"r_I6qL2,/e4i7lg'r,
%%mP(fH>(R:["hQMn?qK6Z]Y&0#/<,L^;2*V"+gSJ_oGMC&Y2XK5A,?(6^Iuu;N;qTDML5!d$gXtm=:KJ@cC:HW`NOh"*0VN<Nig5
%2/jX>,hGQ'/`:]M4fHuu&(Y91:.lIt!i=BTE;e3VFhu%DFmRj.\;7Gdnl3D3k--E<`ft:d3m%MPgh8XIe`m?Q!qIoe8S9khJ7_dH
%Q"\[:m9+fj9P]`QeD&WIiI3O8YCBlUisR'h8Fk)^#]f<PUt$jB%-f"''q1g*Z[.s[f+*i$d^AD/YE`lfa(:>:>Z-Pg8Aj`-Um]GD
%M+3Qj:>di!Y&,csNTr760,:X9FV;:?/%!foO/O/&/g#Nf(0"u%!Qo*K`ht>(\:d]&%ej-`Oan'JFPLW]cDdSQLD!%Aa?&5%o/:,i
%X!:5s:n5p^@00bbH]L^.@"hMa160r:lOgSiA$:n-U+%!`*KDR,m78Z+$kGr6%(7sa@l]ee1G['fGit1/%aD1:S&(i/@!Wg/8)#S<
%:W4376@VuZIN7tHgeAOPYYU_ZC=M/23Rr^j2c0l9i&N6JCj;Hpc5K3CWbf]f[sQ%C$]df=fBr&Gl^[nf_qSh>2D?2hZ([_8XIkRQ
%f6W;\eP2YI,3pqC+/qT,%oOR,9gUS=AT013Db?Hh&i41C#7"SZ(BOaE80d*/LMe6_;;qBb&DZ*[M6b=7@E=q8#?T"7IaA`YQO1qW
%:s-L+jCr?(`#NiiiEI0DG+m%RG[$E^.N!8fn#qo>H.@1r1bX%RL4RhK2lN+5Q]]i'A`+N]m=tJ>F,)Su4&PXeM:=8W'G+7N.ubp`
%.ORo)XH97$%o+(:pB1G+L)rX"#>#C[ZmsIFE;VV2#6c05UBOGL?!HXQ<,\(S-qr3o<H2B7rPZSh2R'b6U6Rj(idKMCh5t^1I^^6k
%C<X8<`1t/?M$:2[:n7hH#E;L=*qNdLk6.$-dF_7+qam^WTj2rKTtd-qgcj<UN01iEgiY98UDL46r"A"q3.sjWR<=4hml?V?5OJ'<
%,5=GY4dnD(I-s`D^FOO,OV54mF.92aT-GbS2F3hen(pIFHY_QWK=>_\I-u90hgZ=>)U!3j?\X5n9)%uL<CtgK_Q2RdAmqI_fmI%p
%l<@rSr4//DpjX"s[VobrNZ*k;\)X$D9#i@ZBN!.2i(DRCrNI<'ke.!%WAl!g4@i=7'eOn0gn!YH45QcEUG?5TgcfA@bJ$1FDB`r<
%e%iR#:H'=YpUn8u[N0i@3lKp%-\B+.[`0ib`/f?7Dgs.K7P1K0^0A!76O%qi7V(=5jXqu/\qa0i7<t3,Xufd>-(CZu=L)`d<GcQq
%;IU[P>ZGgPF;'2l#OJdJ[j>iDh1VGq[_Z8Q#Pq$IXQ4E9d*Rh/oYnW<Od:*?>S<l;`U+q.gO"ogSg.u5O;J6Oi@5rP1+T[mM.+K@
%&2="W151U#S"HYH-E7O/la!3RN"gN$[iUa$e-1pJ5Wj=2W+(qZI]V'A)(%(M#El1K3Y[$]aVG+.LI$SaZ!RrP`A=D6!DfO6fgOgg
%-lKN0*kV((n*(h#q@8Kial4uGpW$W_JC0LZ\?4"5(o0q7]dXpn<o=fp<1J4;rpC]K.5m<1K<K(mS]sg'(W6/I82%[RT=i%!,I:To
%O%U3_q%#FD4Q1$8Q-7s6HWadN'QS!?#]o7YVVpH][PJcG-hD3(?di\XX=He8;mr]-:[F_j2V!.m2:Y'>r*Z/mr!!]?%0M60E_%rn
%8b18-Es`0mP*Zra@?@1i6],0*W&D*qSam]aJ+CCPA^c3_Ab&8F:i.;*?RMPn%_iq:0c?_29O.k3XI+<nLdi0K?43jXAIHaA022<,
%3'4i_/$EpV))'C3RLiV7RW@$gnE>c?e<&9J5#2nQ=sU5i/W-@f)L2*`Pa9@0!.+GgSqClV-6jN/FGg:'[Z'%U7d1h-I;k@ADV,fO
%+VbPRB0>X+l<F;\;S,/N'E([2P1P2uIc2iD@2"EMK+F)Gb(b$5Jp]p>=DXt.[;DrObBcRbYip"iS5:u]?)+^/Or(qbRop2*Z[@X\
%eFB6"hpeeF@OFNUQDu8k=%D,XX//^1p5!C'"dAH)MlltXAfKjc^Qktl2/q]J33F&k_T>4%rEs>r!'/EI?-YGE/@Z7D_$:$ZGmtqD
%#"u>d1C`/qgCP-;ke-6)>9Xrpp\g$H_)k;*hiVUt#+>8ZFj!<K]spe_g],Y`Vq2d^=%sf_Tj&V!Zphi.!T[MhHWQ#m*$W6C&h.Z:
%d?mC?U?Z9%EWQoLL'fljIUF_F2>4o6^\tI3s,@9Z)qOqaVSPCj0Zj5F3b3Dk#]h1,:^-T.d;R"^IuN-pca\?aAh2nGl\pcfEk0g>
%W>]_G7W\=J,^Uc,N!hDflaP[#DdDOVC;[M8d9%oSH.;ni,XN#+qI&1mD444rQSZ[a,7auHE`%.15G=A0E1sY[>U,t#8A(%Y;1$77
%-Hb1@hI7)pjXr0g1II4]gi6?^F<AV#L@q<e@)(VLq3l^[%=/3a,\Mn8S8OJSSQ)<h9]4Jq<n#ec@&VS8#)tkI?ruK2$EZ(#,&@Oo
%-sKR!0h24PjIhcO)rNGYPFe@$71u)dQ/$2PkVRq'#"1IW,1B$Hh%]N8T]NI[E@l,):ZM6*&Rer*qn"XG+/B)>DnT?:6-U**9"]1G
%TUleS<f%5R]cX@(_tr'f.1O+\JK\0l_LM&WD7fM&<5[mh%QZ[3(c=hRWaP*Hbk&W=KIll5+&TudX^<[?+BQWC$e+GHInK):EAEVW
%PQc>I:pMm.JB!,-duBil[AAT5J?U(WcUpARY3lP#:Q@/X56]9.f+KF)6;b3HEST(>>\tQ3(UuTu\NCe-BB/gQ;ms15m8'Tq',7D>
%;MiDGLjGJFg.?]uOjo81)5`?L0>BSCEo.T(*u5kR<0+8=cL^*Ni,DYPk>&6X[[pi#c"J=up!l-E8(f1[l(fSb[Lf@eOfVX=$/J'c
%#h&'-9jE/jNY.O>o/Wc4Pc4!^a8(QTaY'u.K.g-:%6/H:rL>%589FfO%*9@Hf%E13*oKjE!X/6f46?;9]_2sD9A)Ii'(`rV4<,IR
%.AEaYJ4QJ-.@n6ef@2Pg:EqR9_.0\NhM(SUOCYPGLXW>ubfmT-C4oa=AQROj<TPo!BZn+L)nJIC0Vstm#puJ#rfgp$SD.)3hfg72
%.@(KE]OWj$Ff&[D]+EN@DM&QA=\*%:#7HfGH(Pgo)lLa:q>-SH1rp7bEU$1>c)+,q;PuJ)&@neRU6.gL3%R%46)?B7(t%e=H38##
%PRJl-"hM9+1bP&:+#LqV/!dZM;KGBuPiQhg0bsO:$W`+Or2-F/gTXiW=]A"NH?Up.P<n(t]9\Ge<m9Vu;YJ*>;proP'lBrClt2O%
%OQbViDI`?M:k+=mp=uOrRSR8]G]J_gWS2Ap_.>SH<R.o7EseOrX?JVm9&Rj^J#cGK#K<sh8eQX15*IUFYoi@rRZ@#-!^5_mWh&Y-
%mo[tON2UYc+e/WUS9]iZR3E&?4b:/HcquOKSOq^WAi[c6:'p#EKCAfKZ/B+MYH+5\5EuPjhn\C"<WA8':Q@`mN?cm4^KhAfPWN>i
%U?W87dF,.GSORqdFsiPE@6K7%,f44q7S9KSZtV4_ZjN_Bo]=LJ'!7@[-#B=4>s4?Xo5Qh^,PG.eALQ:th41Gk;6m-%o9KA]1q[/C
%Gs9;I?uC1odkI73<6bUgZ%Hf`]:?KX(fuU%pb&/M`H-9GOfU<JTP?"C]Xa%5K,('rB7*:,!BZ'PGVb'#N@fVH[qt:Ydq:sQ45USF
%o@\EfZh^#]l[u%OLr^KWs6`SV$Ch&&4*'&<d8%g5nrWiepMJa[nbi%=msIl)JhK9i`fB>>C\;reK;b+]Bsu$&Z=/WsQ,!'u(2eVt
%9p7#=<\Rf-q,*k@iY8A>mc[.;J@LN^GWak6IQ'W).F2Kgn)im#6iQ\'MDedUh)MnCROq^<'F4FJ`[LopC0m'HqDS+Vh"obSJb3%Q
%\9uO]?Y=&D&(^'M/@!XCNEV,CI'>GgI4n$R%T66iO-5;<f=8@,gJmN10lJ#dPTC5H.Jg%dfJiRIiuOICV'TX<f5XTk<6p6)Ci<f9
%#L4cGWC4(`#n"[CUa;X%Um*>lfZq8CP.MEWGLePoi%Uk<e49jrQ1m*>a2eO7UJSWrU*h2YA4Sptf"Ri^LH%gp0Y,_Obbe%E\^">i
%8RIC^%-iEJ!j!]S*iM'"Wala2-r<c,1V]Kj#l&Pr%5'ln4RfL;9RBGnc=&1^67p\\b4QZAC#sAB/B:8R!?O:k=!J[_qO-LUs.!Ka
%\)4+TB!W.RfcDi$o[^aq>?FndPZn_I<eEi?Vn>Z(154oGL]Y''/9$ce*%Q/(q/e/_RJ(uu`(T*kU)g0];I)d')t9"#Z+*D`Ob7>9
%04u>M+JMm\-$Inf:MZtDB@TJOM4E/lr1ec:Mj;_/eD2!u(WPU(8B00)o\Bri(A158g?9-##cS45<DcgUU#Kup9YZ^b=8*&M*4o[8
%$e;C87#jHoba8:*Q.)lee9Tp+c>:Gp3^srC.FJAu%3luUZQBc5n@.B*n.eWC,*@be8s=$&,2I=p$;W5p>]E>(p?j5(6'SmT,!/i<
%R,N9![glAHA?ndkF,3G&2^c^Rg58G#>UPk*8]UjIK*f]OoBqY*&kT29B(IiJX<9`rMeA5sLKN*fV*<0uNHM+?c5_hd[Dl?TEmWdu
%+fZV7nPkuh5,`ih>,@_qq-QVWViRgeO7mkk=P%IuCs<cm@t$R?VVin<V_AX,+?GM$aqePZY5Qc*:tWrfA>mZV.7A.o&!m;=N?$`Q
%3]U][Ef-lm;0I`1^M8O#G%fQAWtQDtLatH8+OGa0/DkO%\&_F<.;?%<9^S_$FJ3pSiREIl+3"EuYZ;nTQp]`DfZ-e7%t8*k],P)B
%^]46sra5]c^]$Itj1kQkJ,etes$,B>^]3e!s5u>k\1:bT;.<u#)>.6'O^HmT;9Erq[c,@ti[jVq'HeVM#'*9OfdiC)MQ]f5BdSq3
%C=*UcoGFMcSs2juK*\'(GR(F!YH2-kTf(G>UF,<5#(@!VpNK'Qnb#UVM>m@OQ`>qg\W@XB*&Fr5,5PjRmrN1S7$eorr>LAjMfK%*
%j15r?aTuJB)?K!"%FB>49OG"Er"IQCEYsc%F289;&I-n5DRqQGe3hZ`l=<oN*>.:uo;G#\AF"Ch^nhTAiRR#lFGm_J8_/O[=B3hW
%d7$kfI_'M@+_bNm&:=J#a<c6Q2uPjbe!&be`QJYeEY,?c#b_dc1j,1u8I>+YG:BDQq[O.`ofn`h76lU8aKD'>=1,4p-'*0>`MF3t
%Tg[[i]BY)Wru<W])Zn5Nd<KFtX-lJ0hk!T'V2WA4_gGp!Q<XL>6a8B_DA7jm38;#E0K<@][NQ.J?O7pRC\ni"9mm!4W,(=EOMW:&
%pogLgA"L*tUDU[+*U[,Dg['IM@P;PK**%lYRL9'cKsgW:>+02F99`\q%+[9EK@o-A=VdkCJ]R?hL4mpI]W!@lV,A.JS2X0@MmPd]
%=iHYOWc5!E)&]"B<dXs%dX*33bDdQMqM;qaY2kaGH8eJR>q;fuVrPb.Hf_2FZ$5qpb&u^>J;-N8;t_C36#kAh`L1k$#+MOjl9ec:
%58bf"<pGtpp)_F+^5Oo)cCQi1EgAqQ4IMc;PbY%qE=Bh3-YP;UK9n[!lAoQ'*L0++)s+FMRQd2C'REStE(E&a*89ZJ73P8?fF15m
%GsCNQ>?&%%o$)ip2+T/.ocm'hhN^H1KA@b0(o_c(e`?-RmAl25pPiB\'44g*rE<h<"J3!%lR=WVh"C["0RY]Vl!C^oeh+n5[V&9A
%c"o-jUmDj<01AipL't)\6=G\M/iW=MKklrpA%?\YMs)W$p),k+;P3UiC[Mban>am)Wqf$i<O$:<:HqrUV1C%aiDRM%*InC1VS9%/
%S^R.8C$1!\B7UW?-AT3$+si+J0?^#CFC[W"JjbWb[N-qS-`>,SNWT7m[Y<j$*$[dKmLb)<N826`&u1ju5CGD_WlGs#+l2%Yfm>[E
%:Zgi8(3I8\k^RXXRp6%u9/p?bR2b*kMRNV_An!do.'"N4&STtZC=PgBYC!2"F2!-ci,\L8S^6,Kicf\B-7)jF'dUD>mcGO9pt_E1
%lIfn0_h5F94FHRBJ%n!rNF;T9OZ/KG=/V[oS2XC%n'B6dHTB"+X#&C7*im'S]U@A3XN:b3I6ZDFG>b[h!%Q#bU=):5(WX2G(,sWf
%/"0s/Ab/$_CkC+(5BeKdgQ"4lr$XUGDkE4h52i,ZfT&J?]=/"$4a=R.n@@`\rB4bsrT6335;Lm*15"s5@);WIC@Jjt[DV#uAqh>i
%`CiP-#0/_Ng215;E?&eG+t!9mE.123Fq49G^o@3p4h,p#+CgtaM/I.R.%`>MKpb]&Z$0-c<LlUrVI%5MS*g\(hE=(d?/naF4I(ga
%^Je_"?n:paDh-:98*dP6;&.TiQi>M,e#Am7!5A:#`S:t#Dso4+l]T,nh#6<iTdB.Mfe2(lX'lV\E5r_o3'b@-QeUQ6SL30sj<aB8
%@74i\LMaT43lMKUohk_phMQV.V8%IWMfVljN3?W;!PiDE&irqDr(2PoL^^[7Vl3!Mg!91)W/b,]AJ^P:%6EBXI"Hg_5Y4B&p=<Cr
%_E#kL`:(=B_tjj`iL),9-c-SH0Fu2PjDj^G%hlgnGFhm?ND8q8pNX)7d&@!je.7pM!)YOnS4;Z'`=V906q;R\oo)T9aIr#d)6>3\
%qYJ:4N,(k?Ro"&W[Wg]@1i$r!&RA"RZcEh00YU"5Ze.<emrs[uo->,`%9>YIP?$t&e1WeWKrC@HWJX3g]VlqS9jUpD8@0/*/NG!t
%,o10B.6\nH:d6O7"l[@da-KoN"F>AO$4S8udI[Mj^+%IbeW!FPfo/3fcF]4GT2#n&'Re/o]Cg'KSdapTBC;&55,rY\beZq,`aiW%
%^h%,,E!ed6/V\tt'>fU`SFoaWOt_Z^PtB9V8VqN+MkW*1LEr#R5Y_VjIZ<UmkEld[WB5N("h;g(JnpGjljHPcBJG'm#BoK9:SIRI
%6p*4p9>0JRJPN7eSS7VVjAH^C@.^Wk&ht.g,Cq'>D!AO`+ou^n(fWMMm4pT#SD%TnOsWb#/N$#kaI[kQ@tCLQX-6\?6LL)2J,#B)
%s8GMFT>ui;+u<l*n\>"g'5c%Fk[/f2OZN5\s7P8ur8S=fqPP]Ee(s'anE7RcgRkWuprB#RU$>9ci-d\Y."^^HgAC'Jr7f!ajWFKs
%Vgn[2s*XV,Vd&3Ugm7k<Dl'X`X*dcob#aVkm8pI^[f>.\h<W&QcGmA@jCKk%93_#`,PCiFr'b+\DC_5l:9a8;Ck]W;"o[es^M\bT
%0/,G)T6LOGj6nhlZh7\uI/U(/[7$-[@<b_$-@r\P*-&/U*29HrUefMEgEM5[Ji5A#dB1e)3i`"5b_EPm8K:\BbX#c#]B^O'E[q@7
%'^)b"i+o_P'7-][9%GS]qhSSqRe)5VIl+,&>L#_?MBTdUW0F:s$:B[qM?iF$[)s'W-5,1uD0@NH-*hI0FH&9)c8bJE80b)`+Ol"2
%Ttk*2q/TIQV3(s?'JE0F[0%)Q^7#=teL.D6j(Nr*qmCc#8L5[diWi8JE`hs>8'M$V3:3G1H)_Z!rd13-kCATUMtM_!JMDhO=HPM?
%-mAg-Jd/;`!R_KDF0L?Tl7DSF?J3CNA"Ute.r]m8`\6\KfMC*bH3e)U<T.^NTY]PNQM9AI<c@3RbjAR;EF6Q7]--mF(O7&7hknMB
%f%]*N9I\EEj:L--023D,Ag*sL>)"0/-h5lQra9GY,P"]c?IO^t8`LG#.W$kWAKITF?<kX'WGO7X+=nAgdQUoC`?6pn1VBs.@bZmV
%U27W`/E:fn\Y=WR5Xu-c;g(!oiMh*@Km!Ze"Ot:".7.n":Ysn5acl/lrat]n*,a]/AsncXJq^;J-0M]@a[FBBp/j9k7PYQ/DdGXY
%UbQ[D#'e:TE(Mja<\AImNJ9Tt$Yl!46O2I.ftp*%^+hisnoB,_!pC?^0$od9WCZs(SgTLdc$UT[85EZqW4KPYkRq*UP(*.>Dr8;d
%"J<L)>^a/ad,1jFl7[%6;enE"Js\0@N"X5[VV:3.,.#eJ78=)(WK8jY)Wc8X*f6M:BQ$tT`2(=Xj2';A6;[u1ntR-<,lh6N]PDSL
%+?(Gn5*s"iNd:p2P0cTZ3*U&NMh6rb+Cr#/Uq'(QTh99^KWO64JXfY99l#8.G+%/&`oe#lc"liS$N"b:)1D0-+OtMR]*WEk:O58-
%=1COFZ%AIU2Wq,&"eiCr9]4@lj=4fUlG;0M@?)YC?_V([=Vqs`G96E$SLJk:QeJTBTEbuBePbY2Wq';4(^4m`BNq/<X[V8YXUneU
%abH7=cQ6?YZ?s08;f`Zg3h4GYVr`JNkkQ'CeE?F/VGP;j_LEe*+-`cCX1OM%bm]e\gWth[cr=GS(boEFRBf)QF,HI3&r+K6Dgo%=
%#IjD>3di@*[Q`1)"!%.RFS_g5E;KKa:*4HHX8Qu!oZ8?fP:Z7=Xjb>>5$tuYpo?K)+BL6+./DMkd-,.CiS$Yo\n"lKg-OD3@7`W$
%WeiP[jjrm1V(Qhg@AVPr@>/-c*;`[!!HA6$8%e>D'Au/l_>%9ooMO\%"NP?5$D.iZbid7M6mBNe2]^f6o4cQj[CFIBg0[P!g1NBU
%_2pOLfT4_>CdA+?H6?WPTTM7@$UMe1;t`cGBs,g`$@[,%$C4_!Nb`["B(1GL3?13jRi0We]9[uSJZ+(Tkhk^U4SSS4?`"o3hs.\8
%DG\L"5q46&I,d>'b&oiN>_ZCS)"/?1g@Ep5]6j5pHtakL]s)-Y-gdLX1MoDZK#NmXk*KUl:a&Gug?"WJC`!oS;m=+;*pSL-M]0.V
%q:[rt/c7qZJ%nqT"V.0flhQ1022[3PU,om^5BdV[d"W[&JK)FJ$O50<_;(J7NO2=>NTfltO[G"spj?krr"k\`kB#-1d9[hTIWW_$
%b&LWhYb9MdF[aqRF!"F7D66:eC+tI#p?dRJra)MlbO22V,?R,G\>Z<L@MS!.PZgrL<c-b$bS6'%O0+-i1nRb=>QX.#A^Z[D'RpE(
%[H!_A[[Ij&;h\O0.]?#YEdF"$]6QK8i@mr#Frf'ULL/TY?71.XH117V?99Y@P;O4GCch4E?'&]TdcSd^^&@oSi[all6j?PAr3CFB
%ASYCK%5Vj>>Jqg.<gb+58co)5IZjl_QQG*`BU@+0fL[jo;U*7EK5ZMIcqHVJ*'^\Zl97$YD/'MZp^Df4V?.sA.MS//?('hlDHBr0
%h0b!bDqJ'3M3MoT6>tbr3!LJtc$Tc2a0g;E'q!"=f>0ECCnSEspB/VZgIF*rhY$Y>LGE@]$Emjb8_G^8c9pch0gYK..[OA)FL$7\
%MXB?C89V7OcB=+DaVC24DT6=Kq3:KH[?f6Zmm2AmWIRgN`^uJO'7D\P;)h4BfB&tc>mhg1lSLhI&aW%Saebsj_hGba6m+Jmlg^X7
%I^WRW51"ThW1+RCn)MFcD`&8nbfZlAeRjf?8.]eEnUHj')5YY*S%+PtS&462`6oBbCsj(pOYjQtQjCN:2857u8nT>AehA5Wgti]?
%Re!G7!/"@%Pq2*oi6:@V4kfSC'pODNj28-#9>-N]'U?lSFiS+3fo@K'==ZSIF2V/oa-/oOEiZdR_X<[WWt<NjNY>>/aA/\_`4GD(
%C-KEo?%A976S@)1F[jn<%,ro4T;QF@-_suVgdX>_hfWb!hgdjZ&lUku,#Lfu@ra_TJ(JeiAP#gWo!=gu7mtJNl(cXP4KP.USUFpi
%`*;K`&sq=-'6#\JDFbAA)D/'o;=YYKOtsN<@5Q9bA5c#jZtAqXjVZd`CiP:U.u%O<8Tf_&Ct_YnZGIMgV6C0T+!-Lni5<7,(L8P;
%f1ielM3u-H;DSs-#.Z!8=+b45SKUmNd^P5LkB<m+4G"oTh]U;bK\7&p9)dZDOa9-a?T0Y0&=6l*V]6A&Ap-9pOt-%i@`;_B<%"s.
%l4nJ.O52+`kS_%^$B2_-C%0,?Pg\$,\3PWF'X.BPF`W=P2.NLfOQ6U72'N.LgPE-Zb^DXH:M4e4+k78;bnt)fUD>)V:=E%n0V_(1
%^>=*k7/m>i/TBr<2#G/",J%m/a"TXqc``h("HcioI&2;(+_pIi;MfEU4e.fta7r-<oA6Zoo,UI!M?hluoLR/bkJB8VL1),\W<f='
%7C_QYhh<nEm8DgT&-ZBuIE4H<b>;3#i38KE&_Z9)bW,3an8TTYcGp^UTG"(?Jb_!@029*dPi28oepA3"e,.OoUbF=SKsNo_X%-[r
%l8\j7\\/t-Pm-oudNDp];FIo7+L8.r,b_CO-dtT\YaC.P4c.[:4]m'0:2i5WqkG0Y1pAM'n-2Fg'<iSHel8EGL<-PLRLs)E2UFL2
%6H_MKC1eq;3q[dB@":"@U2!*hQtR!2C-4I2dEWAiKS>"g*F_a>41l$gc6U(jC!c\NNecr]&qFUa-&Sqo[0-ikh\`;:GJTLap0phK
%Q*a`fgngWtj^EIGI!t-l7T<VCPU9_&8,TIP#iA)>U.irp".M-`d)Z!=W>mLF^)M8!1)K!gkK%,;XAaQ?[Oe#OT3#Bo38+%GBSc=(
%@]Ul:,>=t\lJ^"?&7S8@Dl9AQs,Zu9Enu7"m!qJ<`H/@e)6[os'XtBVkT"Z_\19!r#$SD=>YL;/D)_,)nXA#gNgf3AbXaaFALk2C
%qGkR=OrM7CcV;'_dZ0re710u=\;"\][M@hL!(Kp(2uId@=]5m+J-'9KjDetU?65u8>$+QZq?a=gBM5,OHDp&<6o?f+9JWP9A;H&@
%r:h=Bn>I:XJVG[9SO17h^;g!Sjn3s4*iMr:a(HgbZHK#8O(l41iqA8.\XurMh(dS%GI"qpc13EU(Y7%#0@pGt8=W*>\9N?^L=4XX
%C[7uHlg/Bm#BP.b<+S2CX%R#3;!g4WK6.W/L_?2%2<?f?70dgE@\'OJ8s*W"RK0*BCI]#<YDc\Fc-NtmV]>422_,!_`3<a]PaOr$
%fPIAgq1sEb#Q@Q?E_p6<FY8_mDg(Ue+ZZnc9q4^nk32BdJkbrX$Gd_jG-$m+;]je_D<*t*A;4,/@jK#jL(6_,_>0FaW6_e\V,daj
%V.(>t@qJ!EnEa=RPi!P@PFZ?U1l+4c#aJQFaHi8l@XD*D_&@GP%Ws1$HFtaBUfU!B?X7BKLW/k43PG9@e[er3$o,JG#\i,T:+E!I
%Q(fP6>auGW;`fAsp^fF%EJC%+'8kYo#0n&$0oN!$A$UY$it;G^5?"(@imnSJI_ZDTMLLSXaN*D+`-[4hTrg9hGHba[SP61_?G'D4
%?p7o)!RHomB8mL#fEJhoj+\>_oK*H@4N]:I;8)"MO&sed$`!.]l3VluLU-,gUln4kmXT,<XsE7V)Kh+[Wt@fAa7,oAUW+qM/T@J_
%-)B8?E<BYC)KXsa?_S=1]6@I>1HFTCGN;br9_i6RXsXV;aU7m'N5r-B>`k_IAp=;KGG.?70W':tCUbgJR+KZh1Ba30hs*M]!GbXn
%.t"(2(al<>G\2q\,@OJ@]7IT;VtbQd%6qcqZfBOVfnfm!@M)PF@<CXU93Oh;mX_o]*_+pqe^He>JfWIGJ@mOWp\+f[IM@)'Z?(e7
%FGaA[#Wi4d4WH[Vb&DN*I8maN,m<;H4>'udW:E:`Bq/I6S933RfrnFZ&J`V%Y5,S>Kq-J?Uoh-sSZm.AG(Oj_B^GLt:>r^L?b[[X
%r9`[%4U!'u,=Wg0co_B#'!E>c/Vj)C#"BS7-"Wu=Utgt;(_q3NIO3&0ji(d3f$i=@6];jG->Lf!B!,o#I'aKUh<.)RHtCa-T$P$d
%3A[EOXn"M4DE.9ngmX*^Y/c1XfIf%AVoW3e.L)6c]5=Hr452!2c94oWe<o`</*$:U]lJLf3Z@QQq(p-8$'/&1qM<B>8g12nCT63O
%JXgU-%elA(.[#>RW6c)TJB\S9\iG9XM&3RR0\:1NG7?E[+sY(1f%Z'h_<GmB[oLF_rac,Lf6M>d*=W=_WWLq'8@&XZ&mqrQ'nG?\
%7ubUUSPRUNZ/^#N-b,3$RiX`5amKETs#RAcU_k('ZAl9;\rB>*6R?udOlKjZZu@+m5'ecPLT@MN4id+j\L9VmcAFBLSha)Vh!Z/p
%Gde\\Gb8P*@`jQGW$T#DP1#4n8u#(ic*YRtXppU^O3Y]<P[W]`H>#CNgocr'cG>!5X<*[[c+^<cB?Thq=$3<64=]j/\;#lo%hel3
%9ioS'P_k2)o\Le\2"#mgg8=Ju/LFqbAAJnt,P9=kZEi<2M,F(M(VEr+cG"LgB$i01)BVLoIVgNcNC:?>D:7L'0dRABRln%jbc024
%noJY`'iTD`"$iTN6R7`*g7mr3(4?Sb%95obc2`;(93remRs+u-GVEKS\h`>,dGio&ASQJ9#9f8_m5nG--*egj?Un4?.[@-`e"Ds(
%`hM;7ctTpE+mK\MN9=7%</qHjg?^P*jb0T]AV;(&W=!D:HARAFg!6hp?o2_?8%0&p`oO\D6aW=`5WpJEV0VQfa.09:c:ji)"&boN
%mY;sKDst^2nW84!QJ0MUi]b!@YV?UT)K;MQ!#T!\aaR@=L'`HO5,,c+<Z>[b3OE<+%HR]?iolE$MGV/of3)l!k+44@Z/PN)U)_KQ
%\IOrq2+<drJuE@%C`pl3`\3,a[rj,mZ$]ck%@U*9SlD!NBl=nn<@Ygi;DC[Tn;,NJCk%f)CKM#u]`aZIn2s*YE`+_3GM3FqrM\`P
%*=ghog,F!grVU3?g)LmlW4(>F.:o^ul"F(ScQO7@XSFg"?LI51CUhNjZ,\(9&ma$Le<&nMga$/8$h,CSR<0(Q<JL,AT9B,:]Le\%
%=:BrKC%6a]4_bODR>)Ye@(&maZ"gXZF)aHCYI``DQ6&us)r47'l5!bp^X1etcD&h@1qng7rR[E)0UHU[$?*"sR.NR\OY'W9"P;Cf
%rJ0DGK)/.!B8E!sgJ#!pecWcq77pYffbC"[\7pCh:j)FL8VN2KS%FE_ksd+G0js6?aEfLTL3X*JB0LmBq:1'e`Q'BbBq'F7k)uar
%.a4kQ8ubKE?TiYbduSE6iY/<#=3nX-jnU-0D4<.uF4L%*7AEjgJ]&&//s/&g7SK$%Wp'=;:tL:Ws"+CONI#C")-6ijX=Bc.%q]hA
%6$o6nic*$t0p%=&\iHS%q*!h9@X9XOZKhM:bmT;+g1paL_0[u'2rP%?5;sm1+)5V^.#m6>WYhH[!)W\Zn*MJfR%Sb;qaJ$cn#cO]
%h,S<R>'+7)I2N_)>Z)G0e3,8E</F#1n-A]OAe>Q%o&?1B4S-D;H7.]jWs^1(U+IM0,'ZV`[_^<"%'I^CWE4)Q=AAjHSMW15Ku%Ul
%*^6?>$rRnBQ'C2.U(gh7\]X*CGchES[rT<pmI>(N8?OqkV[dVP-[7dVYLF*(E05fe9)NL*aA,Y2AsYAs)%idF_KC:=q[O[q=k0a%
%mm.lX83pKPU4Ae(%UDB\]2W5C;)\N4Uo%;H&9H&=MPK6Me=Xt0BBcq`^*ZtSWY`PJL9'ouV=s`BUkf_4P(^ugP/q9qB^QX.&u?.^
%*HHd!cJ#W+ZP>)5Vjrocqj^bIb8dJr?_h/2PGm;^C9_.<DXgZSH+`[M;+P/X-P#C5%=ru8L[.<jATU)`>4VKZY'pO&;t3Gd/"2,Y
%$L[1]4q].-hA72>F454(P\HM2%$SBR*m6MCOXaeZdbtehq=o3]T?PTaZms]2]%G(WJR^<-M@PgF6)nL3DLR1t*8`eQPa6tn$k)>R
%5.r#XnYL=<*OFG/\D?L45ud/2\oTSn%FP5"a@9E`fB!TT99'Pma-C3]3_kD$->ZkoI7FF#nrqdfI@j\Le@7WIb>53a:?@](_fTad
%6>>-=hP@K_m&2HPfJB=-gm/inDjD<h#`Tj*KEbSeE'9`QG$GI)kdU&c87]-lIb^Phd''f1HFTN1hd.925[)`58ou"LNWTs+fk$:=
%UE`ZQnU8%h)ki\<Z@P#YkI@Aa)P2;d-YgY6k\<4N\(hCT!l&Qohp;t:#Pjh*&hBQr42nf^N5,jE-<h9X8b$%1nt7)W4[ctCp.b,e
%k>MBfib*AMKcK:Y)n*:^G77'(6ifl!-;$<I:Y&JP]%rG2$\S@+e+o-^9\Etal/4[:71*\6ofoG*WgZPriK*sV6(dooX*^CH(ofKJ
%(7W#9lNp/?Ud#um!Sk:Yd@W)B9Hp]Qfd_,Aj:WdIP-p;ren7[i.e3IF@@P[Iq.HE]9e0^Jle1=0^1H#LpV%;Tc]Y]bmY!fL,:b><
%nFB,QQLjSRZteKaCH_t6iHsBlVq""6RT0CPTmO;-qsO32n9bX/VF=gs^\mU.$2K("p.,,85Q6^&J+m=Ln]fh'roGg5no+R-L+MjR
%hnOI:k<K".:N-6e^\ecQkg07LUJG<qc6nd6J+_hdpWq07mTWANbF%;5d*eJP/f"Dbb!`'-Ql!tK+Ql7pg\J5U+"q'$Hlak4/`HC.
%>:bh90M8A;a+kCWSH):er5/jG^uN"0G:U1>\GFC4-!Z8j5$hX*)=sULS4,1/A-Ja4k%@>sF#;JF[m:3+j*J1jagdTPj3](55+_T7
%,-GPV]jJ^>hi((cn9brM@hF2?CqF%!>V"undhsZlTkr=,KntmgJsW%?p9\kR*Gqh/aBM+$jQA4nO\Xd!bXY%WAst'WGf]._duQnk
%I^?&?V3%^W[jhX.2_VQ#F,HQ;OU&VaG+fubf\WV8-TUZOfH.]hPeL%44P>hY50eaG>f&s2k&m$IT'D].a](pk\7Cu2W1dJq_6D,5
%lk"[kaYi+M[cE4ikj(0o1/jl^ilfaa,8HAp@ti<pl^pl:LB]4F=_(hN'%>e>b)=p1AB1HVQs.j*3'f@A\.['2N%BDd@D\"5T2*DO
%:@Y+L4G<`!HK]CgV(D]HS*+YeN7ID;_Hs4_8%cG[T6\:?;tkokr<TZURf*69JL9ga+9AG`pt;-Qr'<k3Cf8)>Yaeg;ia3<GA_#>t
%J77!QXkKM&6FS$%H*35c#mQ55H7oHKM0>oMpEf//;^HFWVf#2$?F6Ft>C:[q'ri8Zphm]&qm:`#;Y2)WeA$E$@8KroIKEBGP="j?
%\+adRQ<`%,k.:Zm#JM%R2F)Ddqc`D8=5"*&SZ!</QYnr(lkEk9SOjPER0ETeMJnHa@deAH1,"EIA=$W@1G^4u`4F5OkEocS7<aB%
%9AmIpoFA%I!%G)VO1JJ35BsM3IQh#O)GcO%kl'u'nA_";g3^;e>cUb)In7c?>K40j]50e6h`[n>]X[u!)rfnJ.bkgHe>]op;6k/I
%gjRpg]8"gacu%Du*h=Bn^cG5'?,=uR#&/Ja6g=cRq#_#JJoGVuS1!jV[3A^R]`^YZOXdB))%/3'ogoIq!k)R_fr?o,_QN\a^N?/G
%6=rp<0ok$mh3!MP7?A@W8heQ8n6?L*"'W(Eo@#7G1M%Mf)<LQ;C5_=L7Iq&F1-oWiU@@m0Q[eImH#'Y1=!0l26AU;jY`5>&f#(li
%9FQ9J_j$$]ad*$D'aZJ-`*uXTm.`m6:lS\?!D5%;kD8$BPbAmIM;aMrC5mduPpE>8V@jp2jHrf/4e%2$oEauN#m<-?g4cjZlKqYj
%*2;WehM.Mtk%;Taj2t?)!2i^d?Xf8Y^F"IGSeslG+ZMQ#"YK%Xq+.?XP>Ns]$8,e\9L+J]/;^;A&fj-;J9Cs5*F5/cBc7sm,o+Oa
%Ro9lq%GH"I9-5<;Rb97#:&OB8JH0E'VQ#IRNZFglIN"Q-qLIE:5s6L5V-9?JF+`V"VRq=/_/bRkEub4%9"(A0J"Y+`GI(.N+A<@c
%J6`o>9+oNcW5Z\9=?JJsd<LZ.Zc-;WB)GYoj^$JPYb;*#TmtA:_ME[<m#QXPTC_m$c.DfGc7t#bmfJA15SJd535k!"=jD^SKj<#:
%9F-KNX$Bft,b_t8md<aTW7NX.+jSSK-"6m_]h$hEp.NT-;C*'21r4:L$1l.G\;Ha_1h5nrIT66GMa^%E,*-)3JQ=C;f-sPIkp?GI
%Ajo85(u9=)a<:lb"kJCMG@;*%1ca59oA%MT;eTtqqdNk*<etAu8pngdYKOVln2A"/Y2MU<^Rt&M^lrIa6pHtKm5nNXk$tGM:f8Wb
%<_6_LTOO;>^,P`#]-q:2bHC!5]@Ye.C^;=<2EAh*8CX>AN234XBU-l[![KUo2AD(6e?Rf.)H&LVMIC1VI^(tP(cS>HbE9)hpIMcs
%&5RML;,2VK^b^u@+l:(KBOEnpVQN$`%YO"F1!2.^`%PE?_IecA(SjGRLT7#A6cqU/P67cX9@/GCkC$TE>(;A6P,H"H,^4jW^)>t9
%:eo+pck1i/d0rN?o4<P/.(9;!AGT'>`5<))j)=]):>0bAXO#(q^>N^biMg"IWY`9.5bN0\7P[q=S*[ocGWETdWb"bS1<_L]p;;[7
%/FDX`6J&0Zqf6ajZ2:/!LL)UPT"9e-j3UYOa^Vn:TV<0T*f1=bbEclcmhFkq.B,iPaj&cq<-2s+^7nuQqji2j9Qlp0B6IkiT71Zm
%?i9c2p37[9lCV6m.Kk6Gi_9'/G<T2hBX/\M<!>>.C2Bl0l&[0l='%t+*0M3\6Cmk,67^=o3.#1QZH#D*fct(83-6K^%6ROYk;,>%
%[(UE*/E'/g8E,pS-8R\$4$G*L[P#S(U3Hrg599P@J)RS\L@0=Q0;"rk^!!0'QD8C[!NMn^A>Nlr;:3qUQ')Vf6Caq#jV(4r/o!\&
%&8>'6K:tr/B-JG,ljPN[qHR"Sp5eAFb%@.p8gA0feO#!jUFj+%%"BjTTWgr]ELFD9/04HRe5Hgq`7#;[^"m;d`(*Z565c"5GWY@l
%VDY#Bds5!N7C&FRd^68>b-:r3&"BGR+,`MiFR*s09nNR:C$E'L:'N23(LrM2E"ep$mH*O?m?JKY?.Xm-;Z.Ad+:\u4Er'7pmb6H^
%FQ1(mUW<aC*]XR1B84$[;e_l9G6Pd3g>P7oL3%5UlZdF'R?qCTaf6b)G0&r"]C,](,-&*7Ud`$pR>B&,VOPHc9eKAkgf6eCLr@t,
%!>:H*QUD[k`U4=KKgf`$VbI>E<PGTYc=a&^FmOWDOVT-elc!N7-SP@,N+D*\1YSI;gHTT*W+W<6OIS9rh3J"GgddQAZ=R-<2EV"q
%/B[dT]q>[i*+!nnduF.t(]MY5$f-)gMc2[)?>;9+NjC&LE["ET7>aUo8Cc!s`mq76F^=@L\AeU!/aDpfUcpkBEQpM5#VOGl:afeF
%l6*>%h`pjEJ$aCu,jl1*'n9UAiF<j)O1($M%"VS[a/ud,*IHjU]2ghn!)6-!$CQ;$1qJt`@udnS+`+t?7R^km(*_..9!_j4N(kYL
%0Bd>[B3:;u`&q5"Y#krJ]^jebX)j;WS;-?P8TUoklng&4#V;N&\1B\5o0qlVlGd^pZ^W/nGb,+@1r]$ACLXt/7hfU:hI6*5'N5o4
%]RJV58#!-7:!n=7=V4_4.4m><Bt8qt'f$C:]r:lQo-f(A>/=Wu;3!BsmF#.%>S<(5IE11<mY_m['Zsm)&6ZZ0dt.'?q:0=\d+iJm
%.t?2ga;R6@m#ocKA<V!2-NJGO*q77TcHX5Smpq7cc'(sje0:2a(HkEQde#e"=dchq535^<9A0Mu!(kr(q[SLrq)qfKbWnPk%<-0p
%0ph2p*DW++L6""SnDL$7611$i,BgJ)Qb6_l_oBd'bUBQeASO?L^`+gTR"rg:/tFIBF<70U)YCb++*PWHG;bGZr`LjChO-)HQS,'(
%9*12P`7*LUXrok:![_1ROmX!KY8q$\-`\SqNY0eY6H2eNTt:CZ`l-*d(fi3;LS-UDZb-lXQ!0Hh53`R+S9!2UW4I3gcAil9-8-+C
%YAHs*.8=rP)/^u>br6r\_Fpk@%.e/aJ<C;#ED;M4GhK^[H.[op:k/*m^7IO8.BitSe[mg6.l1S]mC$*_-&F5eW[sW.=;4dl@P[%a
%DML1tn*m/m_pr*uViKLLkA^8+%ckijY'_4)s+17M8iNUb)o^hRI.(L7b09HnoZ(KaI,$_($S:Kf;M&bsIRqIjA/?ai=56D?nnJm6
%N:NhNU?Q^FSeR&1(nO0q$-*[$;Yj9?`0qq9',fCZHOTr;3p6%&rOMU=k;\m0bne@^\QJKO`E_Ie(6m(EF2`QNVpI4[b3uuXBHcH8
%lS.g*Pb0<`GBapr_X80VI4ltGNu:)'='j@+Br,Oj*JVmA2-5!U*QRq+L&ffBS?9hsiGK;)MHXWiS6S#89Cu7j2\%#C=Rq92r:B_7
%M)8X,2E/>UQW_CPW'2D53^Dc+j:B6$k)9`l*JHSjV-6a]@3^6q-U*&EEAK`/\u)?rCTb>gWl4E_)TXYF/]2A"c5SP"IYYXnqdPc1
%U*;%j?DJ4C\`O13gN;gA;ijd38ZK7''6\(Y3,CTK_*Bt+(h*Y4;*@--3IF6sEXZ0tdn)ra9o!g\,K#G-(i`\1:;:I+TLDDkQ<e$;
%hTNF6R4B<BGkbb/6jYXQI_C*`oH's/e"=7@VC)D,ZRT5PV"V$H+*PS\q`XaA(meH.B*Ps[OmsVt`:$[$Qf0X.#njK'&r._JEqbu<
%YAKbSm^B'cV6_$4rQ@[dNUP?]!Ja7nIo&k,Vk41#$pt$MPAhg/+j2msD;k.uPmj^T`l;-Tcf;.#RoUE6`MJXsda=&/Pb2k6K7_lN
%P_1[0,MSCA`b:m_D><\8`'BAj..FCPMhZ@C:DgM;M3bW,HnNHkBZr@C.abJ;O3SC1'KI"Z=^!grcl]%&6s_klp0>RHEqb#UU6m5n
%@(mE@&Q)\F\hf8KGXM!LJ)gE"+iu5GaO+#-J,qHbFH#OFWJ0*q!8_neL1iaO@h`:AN6i&E.7_!gR`@#TngB6uM:WjcRlfEh"-77M
%h&RWfRb;!m).p-K_UoQ\bjo&].1W:(&)VLLm94[l491Vm@rpp9d08.Q"!M</+-[Pm4r3d&hFimYCEEq3oZ,Ujc_kj\V(?gh`hjM8
%?^(&FIBHT3rRe%*o0Gh3&oNFOmIKfWT7_i-nE,iLbaVfqN**+1b6>Cr\B?1L)3V#XN%*2oo%Wk#j2MtM&Z^98brj3M*G<)oEi$Hq
%hIjR"0Lh'06RC+(s#*F%qTNU%+3cj!?quJG;='i<+nfDWhW&J7ZT(&(r2<(.jf?I=GS;#WTY:n?MVhY_pu)T[>^,'f%iXscR3"Cd
%&]6*3?LpP-9\@:QX.di\+&N[BhA2!7bO&[fC)YMPAoX0L+@[X_VrGMS.&`.DUBQ$D9FiP?>`YmR$pN.)jY7WVd!VA>2Id;ZmX#JE
%h`YDJh*j)h[jY&Ge$8uf'MKNrM^$h,Y/tZn^%.1.lMPa;NC0J4QJ=UC&_`X8Ydh34`?E45F?(Z%@D&)HIC(M"r=81M*(5dWK+uqf
%E-KS,Y`iCB(fXNL]Bi`S[SR4a/fP#$H4kW?h]*ERKZIS?FuJ"1FdS87(/3^)9f]bSZ&qJ+$R2SP+_'u#?4;X*rZ3C*RoD!5$]:*8
%L*%cI/D4i0;qOR;iPeSK>oXm62gE!o;sU$h6.n%]-:\G5pGa":?l*E^31RZgMb$\tO[q,CP\hD^``>^Efnr6<Z!nuF23KQTF2(kX
%0r@EXrdZ9iKWFnjG1"JDJJJuuV7AtM7>iU$\W,l#0spM',<JeE_3'ei"/N.BKJTs7Rek;b,bTCo&N&!,#V^X2?q^XO2n$-V6VDW'
%]9$#okB`rn+"92kGIVf8b0%U-H>?E_88g+C![%,02*?hbT4Yq?9RYP+"jYZfL=kaA3?,]gdmgQS>>@uMaL^'2+22?kC+9A7IGR/0
%AhKeu*r#("\2umM_`o(?6D\ud5,5NAXWJu9Ue"hMq-uED[]3en'_#A6rhKfM6[;76J9kIoXoZaon$#Yf>%b&EcN$ZAAL75H$IoN@
%rSUD!5"sI)Un;U`__B'$6^fI#+:,]_R*9N0WAQsjNZ^0u<$QLD;=&SF4UMbAXVsj"&q7K%k5l*#Jf.Pg-9,T@)?A!-3*$5mj"N#B
%iA!TTQ&7*iFBoP,Q5S?7U:CC)=GPhX4=!^0BKB\=$pd2Y:$';K!=+#f%3qPH[t3/H,Y6Lp%=cL1Mmc,Morq"PW2Li<Jq/9TWd;9%
%AtL&Rl_7)WC6rlE+XN9ai_DMF0tMdsa>jHt0oWDoMq433R5QjC,g2"1I@rd[l=lJU@?$6kF\X`s0B\li;k%W+E#8be0a72\R!LOu
%Ii5dciESe>UE>&h7j^Y>0cBd9e(V%R,B@)&UN/4R!@_JT=iG3SSE*/b1l!uL@"qA7O^<;<GH6Tdo[UK4=)#X9qpp)?VE\o.!\0e]
%s%B`UP7Xegc-%S!nf$7.dVhhH1?IGu4BA\0W6@NlnsJLT@QN[GZ:S[k9\LOs(7N(#WeJr`]Rb`J6cXLP2@^;[RLDmrYNi\&GpY;+
%Hi^8MYKd6N@*e"El2$BuJ;o\Kl;NOPqHXT0HhU/Df[+![C8O7E1C#GQ*Y`^@crQ2Gog:e1o0I2M:U%VCLb`2gi@Pl3D5/Z9"0nML
%lsL&[`R$A"GLRgpNFLtI%0W`2:[JL&/CfteD1ckZ&KI3Q7&+7FRTGe/<'i5nW;Cp#4)`p+'X`Hp;i6;l?GmOe=bcQ%m?9W`*%=3:
%j8ehZiPJObC(7rTq1gO23\Dtcp+%gQ<$e;#Olar^:QtsE6t2Q(N<KAb1\A+oCs!sM?ohi\I>YUSk(gY?hEgX4000Y@Uak*nCTsMS
%-7<XL<W&l$JQ=PB0TpU,>E3]=h.bW;UNl(_I#6=@*&aW^Oq"*%-lA>VWMAA^_&5mU(Pnf"&JhQ!@bBPLpb3?k4RukcjKb`6=I(DR
%h/0jl[kqP_RXs0)W4p^<;'<Xi+0YS6E-gPf1$<EZaZp.H2[[6KH9g)ROb,<RG00-_dH-r:JO%;>U8b:BIaAZJ!pPWX[4?DX:^Pr\
%-!p#!Z@Igs7;2PH1.<34^?04rF=F3*T.:Oug/^J//c_L/^I32t''=2i=%1sR'CHQ()gH"Q.7_Z[7!?\s.)CdBdFo4hK+sKQ-bcHc
%)'XE>$V\EtXE_uL.ajZ@,Nrp+Y4B#Lqqsuhi[4Q's8&>Ko5@uTl>V]F._J`(lTVY!*K7nu;g*A5Ea(S=PQ7aUbrgmE_"EMrP@XQH
%PclQXUk4qV<Z">-1+TgfI&CVl'HthD(qrj+.AZYccK]Q9^V?"0`kK\c:srj3e=T#7Q],,a<l'O&bb\5K4:3he?JK'`<=6N*TBa&u
%)pf!V&lg:!2s2'Hl0L?Z*%)03mpOdodj1Bhs7"8`$CSS;845RL^fM2NW8M_#o^^`E7snC_%GppMNL$G,<iOu*d;5]$0;TOh1)6\D
%Fm4O-s*u-el&"P+nte;a-+6rV602\mhqW;k[2k@P_!Vj=f9_K<*iEB_aElbJi\k&pmP)N1beQQ!+$SY,Dh]iC+0`*eM3>5N=?UgR
%)=K!T0Fl\WlC?(u;52>3V]4.gc7.=m@kmZ+<j$rj/\WU/86$a-5&f6nIQ2IqCP\qYA))!rgTlUF0O)$0eh?4bF8Y5":YF0u-@:)+
%;$2ij+53%5jLsj9?fi#,O`\KeBM%H3@i4OV_2:b1M%>(j/:/^)?El0DI,NSY$L7K6]2&gX23RYHDM.?HR/AD=WXf+7n,+WBn#5TX
%I-,3143`nkn+nXc+=Qm>P]')n=9"HR_2EfX"9"D7,63fGs%?D#[cP+A!0WMlFW#(r_W((_=^5!4!#GP`5\mHS2D+ou/FF<&OJXf`
%S"4WkBYbKh3n8rA7t=:m_WM\:RhAZs$PGJqOu@9)MMiRO*QuJ[+ApTBXBP^I[!T'F(8$Ee/`7eqnpO>S</61EdTlIQbMj!j;A"3f
%-I'r.[qR6;J*3l<'tC4#-LhVtU^%m5,Jk+t2M4\j4f^\t/G\^$cDmLsko$_n#bQ\m7r[&7=ZK0;G9kOh1oMlf/<!RM)Ya2KT7-!O
%K479taQp/>^0dTl.L`gYEMo[uSs_HS<f&XAPs%HQT:;qo9pYe"\tAKcg#r@)mIA;\$r2,KbSm4d%,!/,X,=1F22,;Z)QKU-Ye!7D
%7Y@%5TfHlWFGNF3[('?kA-\J)U\QH\ZYBd)T$8Ae?n.^+U66]i#8(]R3dUkZP>rm'kHq(A;ED"GD\lYFIV#g6/]B,_D\*o,Iu>OD
%n\[JNl4U'A@9mgn<8nM3,9HsukiW[s;*d2>QUgOg*QoXF)Y^/!b(Z@O")cqFM,pA#H9Z0!2S=CQE7sUD;pP9ImGFu'rB_ak0j*r:
%R01ac4GrZIOMdI7mG9=aHocoLL$I<f:=\OQXKmEt-C)g';Uc-!(09t.QdlB_W'$&523bl]9Z/p/Qr8`qdQctM2jI>ccG!$Lb'`rq
%@XTm:N`!i?p6R5:OqY=1B#5QnfGtnPdi$1U&eBKF0^H_/o>h<ED(CJ]1'q*7WH'2F8Jkf.V-?8dK.e&dnAA\R,tb*jV#nDTmQ$Y,
%4bE'rj/qe=D(2RGK8/Q<ARAR,W+,&SLS:k+7V%4c=-R05J4Qh5[.u==*1ZMN8\^'VrEODn)(JSJ`IrB.9_!Y1!`O9nJ3u$TS9f]l
%2_>@OTI+M>aAj_K+LR_+=0d'3`!_@N3O4,$KskX=B1/ENNaQB+C,U4n6$u&k)&fdnZmla_S%F5/=K^+?;tA8Jo"EeH3E/(dIV7d+
%7Z;*q6dq*T)Yga$>g'6E.P7BmPX^M-=M:\k+&&CqUY?<A*O#_O--K+VJ)#?<=m%L)nGPJ4*+es*R0iWMVd;>h#%7<'CCM`[2IkSr
%<o9kF:M[t?0C&SR_B*J[&\eRYZ[sN0\%_D3GDInW$\;iE(^Ct;e:.NF].MOtWthU;U7[2^35hhh^:5t]:18JKg)&&K]ne!m47pO?
%?/]'uT?F/YKiKZf;G7lt+?;pT#=9O\6<2$A",`m8GiBMgR!Mf<K>&&<^97A$(BLrb1#g62N:12XU;?A.oSjiJ`@LW.iPfYX;INCm
%Fr3<Gg57MNP%o?t90`4PI?D1tT?,r"=d&DqT!lp%/;u]W0+>"@B0,;-^\(@u?f&dQn"F2LdtIk*8j,j-&PQ2YPY_%O=8tbaVjC'Z
%q/F`0\EGpu3G73:nnl@QE=P6TZ7TD!3L>CELTO)%.WI@I&kQ'"6h/;KP;U2iN-I-ZOLZlRcOhW)%4p]8!*Le=fj]krPcFQEl/Wut
%/!kfGjEt:gGh%PX![;/k8Ii\Sn8<W5CS,YUYsKM/gkgoZZ`eDR7U-1oVGBk6r6R=W#nL\tZm@<fo=[k4'kIfE[W/Nr@M+n:$i.UD
%QFR(UFDkDn_3c[Y8YN'aA;d;A>*2:84"ZDgk(X+q4u)h6IF=PpQ*'fEpX2B+*U=QiaWcPZ<6$<r6`eH9dNYD;O,gU9oqstj1XYe)
%9Fo1uVaSp8TKFpta<qAL]<I<#m]80DP7T@A87]kQ?T#^>cOnoudGfd'FQ\>132A@_!n3*B;1(gQUPn;g5@QntOGJR]UNos17g:,f
%RKH])l)gNmMtpf(:f4prXf_6*e_+\2SlQgsUqW3`),Te-V)EUcOuACk!2oEMZ>.o0f[5ks6:XYGQQu,qc;EZ.%9XS=Qr<J[6bdlu
%j:ZY+_X%r!(E=BjBV>\sZq<:#+!uWMI9#A#(Vjhlk:"WCDWbMs6]e.2<&rDra]lSmlIM7HYL!>B<!2!j6r[tl)Kkcc)44Tu*1OAq
%7pi*R?/pH;K)\gk7O)A7@pdkLnfX;lMlXj`NPTpGj"^A@6Zn%ma5Y!&qah[$b.a\92frB9fF+%UfInbPBrogG&4<n*N4?@H/SX,:
%OtdH)qrr)MDSpR6K3^$``WF3aa"0C#BZn+/Xa/T8ilo\f1mm+7(oVjd$<YgkhQr%Zc5+6KFR.T3.q*2Lpjl!T.N1uip1YsRKJJ+3
%a!:YcD@PL/Ti0>5j;``.DH`'1L,E\3@S/.3<pdr0Zc:]RS0lbG<o4p'I:F410-+S">7%[C45)P5@YqIEX<-p^;9-[3]%c#a*eq.a
%I+%%>$Wr5+T",jAG+"Of[M!s&11INZ$5PrnZ2bu.V;A)[;g5R;p'ShrV-jG,G[sqC;G=T<HlJ>DU(58+@?.j7RHhf-RK]ktEt&LZ
%^:;SfV&WddQT2RV.GusQ^1.c5!J`$+\cecRTeWPkAW;ccLVR@Va#m?7.l*8C,M&'1S/NaoT2ZT*QH^hbe;]sLUs;j2ND3[JU/It.
%6,Ut8>PUQl]QXK@cslfUBQ=hUg<>^RfBuP>6V41qB,*?]WH$=MDC[9OD%V;1f?q.uAc^Ts*IT^R_BFF7pTkF3KQQ>LS(mMrrq3]s
%Jf7ML[;BTq$pfR?j6nP.\%"66b?duU53SF.Gd#<j-1d,r]o:;;)2t+,LU"?d8ed"/nsS(Rq"ii<OM;ab\o3&;FEd$]$Zl6EJW.G#
%l59Q[X5EpL?iT0<DuT7V2uigLlbEGbs6$l+q89s81X-#b.oO71?i0-SDuT8!\%ds(6!ONSIK%s8s8'5)r%EPU9E2moI.Q/qDh%YR
%]8h2Zq*4lH?bcE]q%*Mequ;-E<W9I#>NA$JmW[!iaP5Ucq>^K8Dh%f[mCMIfpikVEoC]Tmpsj;3qldcL4nZkQ`qT:7dO3jnI*u<r
%UV8+*@dEIZMJGDJs/Ecls7V.Rr9s[Tbo`N^ndjXUp(+q:l7M!FhgY7CVtTe=\(&=mdRU^qrY7C!9q_0n+o_Lje?_AVK^@+]J,$%q
%^]!Tds84NWnLqZRlJ&N!rI.!'_':!aqX15qs6?*2]`%]]s7FjRYCGKHqggC=.=(2I5?c@h4Z#lb>(m(eLNZ4AOp&`a\!Z&4/F6U]
%h#tL&0"YITrM[aelC1;ECo3$WmR`oiT^KSn?s*&Rf6^eih-N79o^MI$NgS=M:qkOWs7FR9!V1)f_t4fPji]V47-.g86mA^;YXkn5
%.6sMsqooaJf'T\IQYeIGlVX![s5KMTghG?@>qg@`C5IUdh#66@khr^Qm(2QW7JfqX^@=YhaVa#,,e`;0m<BKTL(K&*O0/M%O<eDL
%DoZ^OG"h9?pQnJ$EnrtFZJ;qL2F=5fNeQdr'0aTehi?HcjM65Lla#j<Y=CbO`YWL4*s*5XM"CSS09?/6,%l5t4-pDQJ:hq-]utR:
%n,0NXmcSEdhOV+I^RVa)ctWBN?hq1rYE=QWq:s6oh>1n?Hd$mB3<*YHHhYTn5DtE+.^%1dMZJuro&5/CQ;pOSmOl+Y5Q.P$/*`To
%X/m>DgQT'!G5K*;QgOKQf4B0p*fkX>Kg/40iAn+/1\[r=DGEul(L!L/nq;NI9*Y@cKPm);TA_P30&#usbDj,_n_W"6rRLjH:aQK)
%I6Hi#h#H<W\DM'dl1XD'^[Td3p6'j4gIHtD'@!JMl,sSM:LKZ9IaDYOd#+004)"L_QOe<;W&n&kJme]QY00Z6CdCMX-f$?JXgjAB
%HX2]D^&-hCI+`-08=/^TlbeC&&0JpgAI/Q$U`bp!/&ZA*GTO6-Z?Dt<*Wl;0`Q]UG5O&T\oGRKELAm?8&9ALIY0*d<'EZo=lg!r/
%Qmk(G8<L#8g!X-2fHcYJRR39f6c2)#*!-^VRKpA5n39Wm]Rdt&>ot4$YGfjja-4GZ"O.s=YPcRfNhf`f>,Oc:L/ME93`dB283)*Z
%U+C<Ij[rZ1n=GDE6MtMcYR"6#XB*I`<MNNmG9i3M']Y/#YsTso(6i&0gT9=n>)A2U[6Th\8AJ'5<_g'qY,d*Q2nM:8]j!o$h/$e=
%N<Yoa8c0%k<LC[rFSC-5c!QW1AW:tDAFjGu9UtS/-+uj_i/4(JOL)&98m<L5*_N`JP(O4\j-B0g;oU5k5J]\iNL^oQ^45PUI\^'G
%G0KL>7M-!AhaDkQTRt8lE0BHe_hc:A%N$?H^X;g5h<Z9),Ws8+oVj=9V@RRg(d/7ac70M8qK&.IBrR._d-kJd+d=aj8:lZl8^2n7
%2Ug*[QB*RA*[P(_/&2$"h'G7E7.P+4B.a+5:=66r8%N\F@d&o+b-D'iK$c\R=pqnp4-'-@E?;RIMq=X3Wk*rl1@l*h'"$](_A<':
%B5>+'EuVB_."mI`Z%?<e-CAcapU80`nT0;JCA9gdf>@%B_.t'G#t7L"l.KpKL=6a$9aM!\>8FVddF;Uc<J>MR;(^Tfqe8F1\#E_T
%[2E?\P:@7sPXC"8lrnb:7").f4[nr&e\+R=FG^p;L*cI/JR&S#.&3*$K'Fe#q^`oi2Pi/MR_0l0Vk:WENtsGjk>:peikGDjU&X%d
%%td>N0i[LWbX6LT-1K>B+Ku`3kLL:PLE194VA6eW-Dp#;6g+3i4TEa00gDT":ujL:4j@Ml@o]MFUP_DS<7;+NjtB/u*6RNU7Omr(
%<-\d'.G8D3'*iO`6EHW0&<(stB*`#Z.c*Y!+>gCgi%!^4mgTQG1[;K,]aIDs2p(X5nJVJY#3Xq/ad,2^2)@?mb4#R`eEQUD^;tT5
%`k"^XJ[A:^dXkJ>N;XMG5,ij/A1kk/!:g\k#_(bdT!mX*RDe?@ZZ4]kR@>>7W2Y:<ReF.>Q$V0mUDhZfht#ro/S1A>3!X7-`>IRG
%MV+!$Y)<)UF&Z08YUd?jn^7)j=$0ZJ_@+$qE(+i>iSJ9.+dV2Xr?M4Ea`mt.B'R53LXFo0LNOhP);Uln/YL41P]tSDf\op2C*U(\
%,5gWU@B@9P0$Q>9S2'FMkA_0L\<B2TUnD)`nDh:T+_(+jZcR0fYi,-LS.QDbp`WVf2,Xd*.Bi]8-=/-86_TNJ4=8p8hs>Zni>]re
%cB?COM1$A<G:^'Rq^G+*&W6^GiJ6S.FK5!$#`e_nWU$oJ*&5T8+\k8dcRL5./kH!9eq6GH-hZV>l^G:>=3(q@b<0[W([iLmF[h<`
%nD:F:"Yg'M7b@j"r[:koN>!C3:"h59VW=V:S'fJ@cuQ(Z?kaeX/@Duar+(ZG0TTY#SZ6']IH13>$,50Cp[D2!GUu_OAW'.cq8!gZ
%;V[X6h)\b:pe';=`VWT0YPjp-f_+3!>2nY5)ZMMA.-V8i92[bd*<:fO_X<=+$'>8^*a-F"a!%=>[P@>ZH6glWm(sTd0[6&X@r;?;
%fU"Pl4U9O2b/$+r[h].e@R.Rldc+!JZC.L1^oqV;7,<!=@_iCY)l%*$&PaH4-/a6p\'KNW&22qjRkgoVX!GBbd=D%0[#:6pm[f;@
%?:jm-o(X?q7]K=Y?6'IXj[Vcjc?QKS."OJ8VnP+h_<*1ei+hcU-m9@G:`G&+l^Y,7\.QHcak%,fU^ueZC4;2!QS+\GXA)"T,\&ZH
%KdU/5>eLgm'!n"aE:XKn-1oQ0X^d_-s60"JTU7;mbQG'=YoE=YA*plkEQ^&C&9kWfpgH\*HrgsoBr7n;W$o@6EC8!N0^@;biX7;3
%8"daVGu3:7VE(2l=pe1)_]c!W_qjT(l=OcEh(mhrTW70%T0`rO87Or#ZQF='B**7'bV4\OOX6M<*'-?lbE[.-Th>oO^MC(:QTD8]
%R;9H&S_4OOW^e_]_tEmWmZSr/lrs(nbS;PhBk?+)P%!S/E)jdIqXCLe=3btL\dpQVETDSXYT,r;,jt^#Npm)B^2"e`i(pW"`Jb]O
%r)uQC<+3`)MPrX(T+4LG6/WB'$kep85'tF#fF'iHUp3b*A]ksMcr;uap>n]^YHfg;@Zi<7b5m"4+iR9Q$jE+E^X=#m^8g>#@ZX'p
%\@KZ"#]r55E(&2q:^*N:;L('ECt00+HHEi".EW$H6HWp4cWLYN#_H<+Q,[o?HWjWt@>4ig/-#N)9cSg#oEg/!hnfmcioN<uF@(aC
%e&Mf]>Tq%PSb^3D$VQrI,p%L+Hd#jnW,RDb"o%[&>n&0P+(*i7a+u.k&iZLGACYWZ+25^@,MAKjlZ;.cYt8g=Z.[#5=tRe?[j\==
%TIEbN+/@SILP1/Ok]J'YOIYW%i'm^Z(#5Bt#(=sa+8CuF7QWQS56'iS_jaN48Lr5"2]VFY<S=8[Ai0_R/=l/B#FS;KB8U,!lR&41
%=>?*#LjVdJl8>Lq3=3?HmT8:pE1OiROL$&<8H`Hu!?MU"oIUfTQgq3L='6H2gW3JV`sA5`cE.BrgL]U^jes-))+I4Ej#BQ^dBS/9
%(,s"A2dX6bMFm)kf6]XULA.AAIN4uF3R,#T6;KfKBXMD#LCXH"d15Jti%BN%!3Q:n]5QSTp%BX#=W__6^JB+*hu%u=s4uFZrPN+n
%d?!=o55*"P-]$fc+$q%J&?;=33TT0AK$sLO+8GGZC4.$"8l<aZY>t#H,MSA\35KBq@!@HffMRqkqdk'5]Q$m"qmu-C@J-B:0=?k-
%hb<G7h35o1*r5d?_\/PP][smarn[OOa'\Ue/+8*>p31H4rq=,,?=VYP_#6YoG8'ATnG-dANo8m"Hg]k]5oF"\r9Caus5uUop$Ejh
%?f52c77mEKLL0;\l*6hlnA1k!@.Crold=.O:eRATfuMq;9gAD%J+q3+mQ]c"Al@F`1X)UUhr\G/5X'"MB#2KC"8QW;N=+/pMMriM
%JB*4h/=R.O!N8guY2V0:81AFU%CdsLoJY<Na,LR[8^408Lm1Fb9:UifP_h(^A"0W.F<.HA_!dBH?LdUL):<=s<@g\`\\7H'gA8*I
%iCZA"-=!I8g17^f1SbI]h1msE0)@.DJCl'q,d!kG,5+*g*6W-h>r5Fp_<FUKa\f)MA\OW/@;igV6(dXa$NW(`KHhdLlJ]Y5;>0gu
%7PLbaQ2"WEiCW3Bk_?9ch%K+U*7+'oH0L*/=m>.uK3:XJnacd,A'^;_EQp6=6?Yn2N!OVGq_48q:?NUseMu1jLdNN\cn?MG8^b%M
%Z+:R**==G>FDe<bMWR;e^fht+EEEL$f]"[/LpVr4?AH'2n>'8=<ZPKplR9kW9K.YW.2;n/Gm(<#0oGFIQ,m\k#hX`p@moh"U.lAJ
%e)Q6pkK)J)VfND2I!JPgs.0%)E**]%LDp,hQLCI3iqFK;?OA(PP9LpCZkJt>55ujn#Fuh"@:f'!,,CFAj=^-2B=#4LY8-T0(\g`3
%ii5WKiPT34"p9PEPH(ms*a.YteQ9%YKPcN%'nd\+e(\MAqIaX8Vqr)O):JMWG&Kb^G*931c7"SN)-G7c'A-5V-^GZE8JkS5Ypn>^
%/"HW>JB7hi%HV6F=$lbpeuhQ58tpDOleN?d.k)G]h(+E]Uk;!Ys4h=qC0Eit25MZ@'(\*;=Nh6PSDo]6G/76]\?-"TP<LUScR6#7
%7*KCn>>9[5LOqq1.Z@:_EmTGo9LMt!K52_PG?RIoB_L)Y;WbqTF>\n0mV:W,h=)SGq.IXC^n[&9OfV8p7bsS-bA-[%42`#c8tZ=q
%DuO#fSAdMEVGk-r%U*#NkRKY!,+]\gTetYO91WN5Dc4r%,'4)L`M6$7WaNXSq8!]<4N'6;Mg-lt<D:qs0F3)oLt7"s\^B*)X%W3Y
%]3oOt!O=lUEsK@4^Fbui,.X`$6_gK\[UVkk\-oK)[iHifm_o?6IQVHR+T[5C1&PX38Dkf,RTMtXO>C?b3P8-udAm\!i7U$>jj:4K
%@P/F2\;5BGLj$ZTh35#=3LB*Y)03]<B51>U-fTR_*&Su!R+fdrHGFN.EW]YS^insWeI,+@\.rJJSRU0*Y_hdmqqUZ>/FE+^-n\@Z
%F_`LN#`Q/Z92XM4@gPOg6V)EG#Uj23I*/h8Ru%3pMKn,CfXoEP>::$qZ!<T,&<:"WAg75>/97Shi9=IY2[J=!@Qj\(Ij6p66!Zg"
%N0LSn?s;XS99D6pB67_VXdW7N:aeSb8JjI->odg$dGIN*9FE7rY;9D?l3P4nThM-2Mupl]l!+(4l@B;c>>b$<c:nmLI]6!]s&`"W
%^;S2^EWq8SLgK2,;&>D</Q=?:$&m]Pp@,Y?hKRTppOurnF^;'S8',ZJ_e]Zr?e(@`g5mNHe:MNg=J25rMm0$S'3!':fEuHKrZ?XH
%HV<_`_B%eir0]hZWUK@i'*oOgc_;n3VJYsYM05m%(mBZb)Hd.0L#Nu3$V`.7VSsHe1),":gbtr:(bD+B[*,5$r'q.G2'pcu"\8jK
%'[i;Bii4RD@/2>F"*:CG8QLo2"WLhaQ"Q+<T.[ugEt+0KfpW)Dq^]F08#FAb)"O16O)C^9q0gj8gc*Nr2LP<m":F;"js#+aTi9s6
%Li$,aPt5pA],88#*F!T)jKs?mZLaBW`FQ%CBls(;I[&b:F@-Q75,MeO^`U:(0c!_^qFj2"n(?X(KZ)XQMFK-qB*')MG#\2Y,H7g8
%fIO,7155p<]C/ZJOjUIK*46?Zcp=aaP,.=gO"1Z3i`fpQ1@CXp@4V=^AIM0RE[Ib2kDq#:WJ5/>e*a6,l\LZ)2A/&3C8QfR/=-F<
%\jqmL9[?ZF?BZm]ne;KSOgDk!S;gZoDQ#Pg]'Srkr.q9Ugol3,DYt;o(6f.k&8i;Ii4t7_]$)S&VRCKSF<PWXr[ti9^dSSH0^b[F
%Xf9"7(F&WHJC.E];ocjshGi0-8U9Ls`RD<kGLQ_>9J?^$=]IT2G>'51<_uZH!/1ZT,#'TR[98KpW02D$d7Os?Za*\W*0A`B&KYVZ
%MC2)sFI9XX4>sPQ:AI)UR(,gmY:-;!7@Ra]"!Y_b53*?!b$$!GIR#euZX9eXeIFIXHeT?4^[Xg]Ab,'jp%;t[1#OGdgK^SX*L^-8
%*4!t1UXgN4:R/i2.fBXB04,re[b+ItM]sj"jD.D&NYO&5`3pm%(KE+7Fr7FV=OQS]A/8?`Uud"qZD"dKpR!EL;0KhL?=M`<jd0'8
%jErTeID<3BoGhl;W\He'a7>'I5,^gb.8(,l4cI(=0J9hf=^^^Qk$\q;]Yfgu0j74L@)PME'\t\$n\R;iWpR)X-+Ob(jq6?s$;kDW
%1m!rJD.?en[H:V<YZqD3>''8u[[91H)*!9&Q*W4E[>Y`k*DmKC\\(]DJkP\$Et3+9E>=IbIP.OLSA?Vm1#BC[H"0I?MbcZt6I)0Y
%V"NDh0*AA:OA,]r!lU6?]ka-nD><Zm^(_\Wihn#A3>f_F+et4[QXhbBX`Mb`[8T7i.])EYc2,D]/s7'O6(4^j@^q;;?Qd?=BR:_S
%2%F4FY!sg8jL>%2,fs08$@V%1$:/2hZr,b.)G?P0mo_=WfMWYK?5@gZFU97IWo';*DAmt-T95s!EpImY4Dg[^,+1>/5%YeZ[\8rJ
%@[Bs:d/hEk$UbZ=q=QD8HD<QTeRr,f"@hk>bBFf0e.ts2llI*O.qM/R"O$>c3i`^(2&C!E0.aWLi==eZB##;0LIUY;@IgX^^h"Qr
%M;om_E`#elE*MriC4d!fm@p0-PU`NubIBFKe&H\/n_\M?]lDb.=7f@D388-%U!@T$-c+7cXSU_.D0qO78E#s8n=p2G3,qD.15+_=
%$%.Skc`uWKc6KXiIQ/H5EX5f@?K#jBo/niHrHKCPN>)sjZue><&t*fBE&I/3lch2Xo@Gns(YKC`_l:22*Zn?U7?O[\h;F0N!\T?a
%>E+p["a+l#nZH^M2rP!`dPGj5N^)f&a15>WhWH_U3qLUPV9_[ljeD<,8d;^PpY82d4Xrl3CKfCjh-nFaFkpq'K><oWIX^l*'FYX!
%l`%GCL7Kp^b0X%gGqj]QV$G\U)[!sOKr7.sI8p`7l_>^F2>b+kMB&H9@!kr2W26^q0'V9:%XkfZE'qhpb#>ajgGH0aRtZEJi'7"(
%"`3dMe#X0rVlL!IPK'@uIb5P,mF&cGiGPLbS7cUo>%sIirUdtpN,E0p]obe1jq")a,Jl4a76GHb"cTE.1R;gs5m.jl$!Ghunn8R8
%NuL63V$gEn;aCg)0]XnOgsuA'd$:cteeZs_(shS<8p[W^D1FQ5Y206"ddXeogG_/Lg(]h\Ka!_ZdUO!\W"2UT6`Eu/]46nNICQWf
%F%A+B2qPrJFoR8VM=6g!_b?3jZo(fq@^"WX21UQo)f,J\njG&]OtLna\Sl%,lm`0%&e\0_CXWWXAN?Om_P=_cp10E/!(QNhC0h?=
%//##9OVPRXN:nT;ZgU7D?D"!=OkZ?ir]ku3%rj"',P5o(GkE4UVfM?L,ukDsV6jEE2AtjN5]/tAM%iQk.9ADV1<F][42nJ+pg(r<
%')kDjh'S8e8\VQ"RX>nede..MAJdn7Mi#GLlHZ]$'`P3-Okc_lW2X/D(Sp;#[$4m0.kVaJTLeKqH$(*9<[@VdI9@c15*aH4Y,PEU
%/_rBu<BWeM<)q7H<-6`U<P5PlF'^N4a]KJ`d+PP?B[lKB_W='&5Nms9U!6Z',@4J`a7!hD;:`2'*,B5Q5R1r5*Tn#5YO=gI^&^E$
%3f5S+;UEkA4(^1Z`ahcADI:XoD1n12Fu2HYn:DnS%Gha/;p)cD\8^7d0!1pi=^EE?_4,2/l?@;G$m9KJZP?9e-]5i#7kjl7d>sdZ
%7jl:Q-A5Ds!e?N(*3@]ENcFNgC/VX-V@^%0r`,oJ_qT!&b-db*UL'Fi2b]d`V\LnuAdj^^3E.d1nr;h$GY),L9M3?=@@qk9l*1d6
%f#Fkik/NX'RMbU[0P7R\N7`1OKV<!eYmX$r;JJ_:2@:TrL'!d/[d].W<t9@C\d"Mc99J=pgC>IN!:f1#AY!7$1[HH9g8LY).8>MV
%]-:8XOB0k?b/)gj@^JX,X8q]d\2Rf'_-,4gM)Zh,d0Jf^QR#'\B@#LWF2;#0iQ*f?,]D?@BMmrL$mPqrRnaZ-`JNS2e?m-m/#qY)
%3<e3Soo0hB:0F+pCiatr5,.gfm\s+kNs\^W]ls0+&\eWUQr?EDDVu-\9XVe?,Ikj7oC\dYpDVSM=Ot"IK:RnY`Pa)/^/W)<<uXBg
%M>-`,Mi+$pCH8>]\lB:d+d:gu&jUG@c\:VrY_Rg>&YmLn";!0(Z?BB;Hn`TC'(q!t';%-gpV2,a^&8Ml0U>qU?K]FW^\NC9h.LN?
%A1?^6LWri*i&pVV>(N@ST7;:.Sa!;fDUuFcWNZ[cEKECt]Pjr7lg9J[L6)2hFe68?H^j=-2<s@7.Im"K@dnoo\SaJ%Wp2OtJ4*j<
%=[#u.NBM*;<mPN)a/`5lchV->HO,lhqhL2RTC4XKOT8E.UDaM16VCDea&$SZ=*5[_Wh?jj(4u^o[+gS(i0oYU2m0N?m<SI3="V.`
%Q]UrUKP?8HnQs@a2/O=5n#k)SXss?8"Xi<<1]c/aZ,O=dQAYO6rLPk0]n=4(3T,*B.WjH`D>@S):`)hcD6$sHYn_g1ORF3KRdr/m
%j%UQAL_&Gjd#RfRF(D.n)dHPT/X#=4[(NT*mTHsWW@Yp"WR40tHWM07+>E7l6on#D.!ReLR:r*SrPBZL;kER/Is0p"ip,b6.16H)
%^3a65X]_N]2O<<U7FPl[2C0O[gCel5!LE[>_Xpua'\SPYZc"N>9t?2_q6HOq5>"S&cC=\I[q-XSojYDRY*ZmEp%TIjA>(UE,cNVE
%.WftpmCB2S2=5C^BX`=k,s*2!DJ.'CDV7FVTp\9U\to#E7c]I0Ca(!;_W*DIH5NFsQfUq`858@JZ3Dnr]R/)OinrLm,MQ>_f"4'O
%S_gp"h%+DH)lru'[B?R52ntsVq"m7R;*TE?_W*5I5eNF<LR[rlp2bd-;NPj<,rIV589oMD7*t)@o#CXU,V4;S9_"Hks/=*R^DQ>O
%`dBDikFfJ7'HqbWhV0]<jc-fij2J1EY*ZmEp%TIjUhNER0(&Y9n'\8Mjmu`DTl^rsMc6]-3,6M;-<;[sR+t(ZcFo#i>e:m2L<s3@
%bBFeG"O[<RFE?d)64W%37,Z;qTZ$J^2d9iP-Hl\(FgnW=?`1jLq`F@mnI7!4[uG<CS0CS[`gYl4.eEB34,_u_&%cZJ\o7%sqlAqb
%o:0s$g$uH"hNqCEJ3n/YcLG=shG>'jCAgCDNm%k(+bebp>KZijQ/:T-I]u$7O'V2P0fS3Ts.]FjXo*+9k'L!!oRdK+5>^rGW"nOr
%LX^_;#C]Lfj8#/4O6QC'eWTAs/6-Om&mmqCR&h@dOF$2]O(t94C1N"A`)InY<+T/V!]ibA"R,=0F;iOp;2jte^-=7qPaB<99(qlC
%SC8L>3gIo\a9<rn8YfW,NX*G`NDkP8V5Qorlel2O#KG`f84n^W81rFomE9_kW&nE=W=`[;4Pu#G^iK<K4fo;52*lBdB>fe[1n@T&
%Q2Rq0oNd`/*q"92/rH>(ToeM<Si5\k''R&s3o7pMq4'X*M,L]r[m+5QS7N*%\'p1N`!9"'>lYqE?2LJg>,Hi^*KBp.*"AFfnMGW<
%l1RH:4+6[7X8Xk9p,<:MSjSAbU_U6h[CV7bafE+AI-.a]l5DGBif^@H$ZnDl%>9Zo/X1YRVEu6A3VOZLc(IlJ,JgQ1p<`ECq_!9U
%N47#8rU^mijGQ2\\C61mkY#R2[>Y?+^nqJVMC'T(Dp02)51Z$/,2puq-Q1h7[:`R2Erp(E@J6KlfC<-u*S[IZI/D^&I`T!YljrDr
%:7\`:cG\%,3!T::`Mmt=(Df0]!=SMLLQ0e7Y$+^+AGBAcJP))sH:X:LS(-`),L2Zj_e[mbmVr\3/*4"unb^mK8YEu\g"coS*Q*cu
%kN]!dZ9)k"ptOugkf4%0IS/:i#51qWMlEEMDR.eSX-.PdH"(4-c!p1lA[_-Mg&TsIVa#UtchNp#ItFJcHZ%,)Uqg%gp]Z^*AS=\2
%:+N28<9hZF8[k(4$u8`%CSE#F&4]Z>F/_If<Oq!(!c=":F(^opA+HE@%oZ(QC2?_!+,U/!j9bQiK,@k0=H]!2)L5^6//W\)g/jad
%J7S)qH`35jBsfuSoqepAT#M:*pr@JO?F%<U7Yj+e>W%FL,j3%0NDcqK85g9)311ZQj/W!5!%3ndeC)=<f*(a=8-S1IVH9EVI2FP_
%rqj6*Hi,@EU3<@)O$KYFnib"KF5K1YCEKd:4e6]QpdAY^Ud%lG=1&$_?,iapBo;5hr5c6`h,5:rQ1nVE4]<3rhBnY;$mY)f$4c?;
%PBPK%A'$?U@A>U4XI,lEn&=L4.7QqG[%@YDL]nW>'+g$,p.?YGH/fj5;?fAg29nVR@m_EJXX=F@#K#saT/98aY3(2@_J\nt`cChD
%H/,L1<]YIcP^m]_UFjq2DY%u-k-(BDM:WiT"&idU83HVcaKeY\)FOFNk;R#O;r4ZG<`"M?9=>s4!!'mDpPZt-($j%H=u=&7T>.,h
%,Gj%[dUYOpJl)39#pfcc=B9.VW\XRcb;@TMi6c,_+5r(39M>`#nE\An"I()PG<[3hpS.+O0:?RVo;tSc)ch6&4h&V99iCnA]WuKb
%3DK\bP*^'%"6SEo-uJRN-W2iTe:qk]Faa4)Rsdh7*VHWE;%J6Xn:n?KCM@3+Z-.Zq6q;!sE?@@.NH]lBhKWW+N0j3KR?B;]U^+M(
%>c=bpMs,WUF#NP/<L"BB./*;P1S=Bi&gacP&f>9?/>>CSpOatL=9Kp=*a2((#PJ8V553R!_gUsn&Y;*j;/=UGF)RVdJ8s"O+99pE
%b%^B_--6I\EZV,S5:,U4(d*NK-K[`#P&jp\k[Vr'.G5dbS5]S@PmqES3*0NLc`#O]dftOK;\@ZFGH6h3`4]:^id?MrURR--32@m/
%+(1mhP9`qYbFuRujb@,`Kn%0!rAnPm0\<;E_7`D`0IJL_$%Ns^FGZ,sf\-rkbm)+@Hp*R&?kF=7lO(.&N=C8,R3YStS]?K7&p/1=
%mn)9cWm,WrZX2'GBoWnVAU0QY>,o4eTlf!)&%abtQ1@V0s$X,8VYSp16g9aB`%d9&X72.-.c5<4B`]uhgJ^!gl9"J0;b+>#P;+L5
%Kj9F%i3/rbpH]tI;PO6H^h"Qh37l?bNnMqP$\q]FCV^)GI8%3@3h%WfgX<7:C`:*cUJo+5/Sh-.UE;1MBgR=RV/5UIpV=VEiQI&d
%?Y2"!IJ.$n/*V<Zl:/"(E)_;?<q#]`<JWKO$P@W2p)3chDPQ%,%enliY4^JLZ8sq&$AH]XHpB[>1`Sq&(ZDeKMSEm0g<.]-iW1rN
%T%9=3ha\s41bI5<<)6aAE5dNO&qZ%6(&hD__;27LYo$L+oQ2lQq3%?tL=&@TLU!)ehOG==aEL[1(k'@@r&dl2dihDf`aLH*%F8sV
%Y"GF+\$=pb.G.P&.UBuuaME?T8hh+naO_$4E"R\hG"ER?e[Ep;RMr7J_C$n&g(%IgI#YZ2ho(N&CnXIsVlIp6Ckm_i`f3"i8R^kd
%p`e^\H`4^eA,=nKf<$1nJuhdIfkYXm:,"J.C1QO+MJ_H3Wd\Xgp>+OA8ua1j0nIqtSB</N=<NK8"_C[^:Q=,TLL@D@Y?j6]X8"aO
%l6rRNA/1W[<[PB8JN@/qpZSBTrt+ATZUZ#&;ma4MAYuh?5)dA$G=K,SWe!c-2EG8V9Hl*PBlCc065?eWi5=Qm,prG]D/?q'9VpS$
%Rc>3)RT%g0PUi_RRG"dq89(Q3,]T_,os,bAa,6PdM1g=/j%s/h<V?5i(Ir!&VXAMJFOu4FO9rT+<DPC'oB1f:\<^"YXST/MrYhXW
%a^BPrd:DLARs-(p?n*NR^5VdFS@N$cde(6,r+Y'd/40J8X\*$tflKpN]o$#-o!4E$Yuo058o]=S(2fWUVQigKToHb:\5;"Vg*KGn
%i)[YXAK%W&e;et*#)^$2/J*R!2h[42UnEn-A/oUXfu_qAjoB\LWY*c?;]OUJNl10p&k=CJAua(Pde]9<;1ikTbIK!U/U`[.eHrqZ
%XekKS,!jTQV_.KAkuUg@NU63Z>(-n+.#b4Zn'1TTnP&\)cme-V.Ja"q_8*+$ncMIA0nAF`j<IF&XG>c;TV<!77@p^ihP'$A7>=[^
%F$BK%T@@M')QJFHe/Qq/VDri;<f)rE<_V(sZmg]C=9:3_+FVsR-:(V);-@r'M?QV#+VP(LFEaLVCC/"LoC]H=f,]H\a[-nDVS8\;
%7SFZ#`I3V].OdJjV*q,Mb`pRfb1/l?0\SVVXfBX/'b=UC`sRL;B8.lF+56r)nu^kNSQ8hSl8L\u@<-4QhP<S-NO`Ck4>6TgLh)1c
%Xa[&drDC0klC^qP&nk1iPE4.iOnJ1[.b:lJ.[*I0Ca)`28Q@E!&TiF7??OeI7Y$GOM\G[7bkp7o:8e40n&OhhSit&r:'cK@=F]rA
%M9K^noC!MDCdt'lj5/X`\X>i]go7'O0GVl^q??9^YW]h9ou?0==&6r\5u$5Z=VZYG=PIgKNJ5ud7W^Np5d'm>oAi,X@9&l5?DL(Q
%e[459XVfRC46pe[6RPKRfR<4jfcTq6-ZsKsbY\f(=X2b!3[F)RgUcFfSqGdT.CLVOR;biK?tsBI^%&cpX+FFa+'80rDSI^NX2j[2
%Y.%gW4jnu;3T]];j%&N3\$roW`bXHrDXPP.C7A"7ie8Rnp6[;2mt=Ah-8^[h3>%q,kTk2e,D+$srN1g>Jq7.o!RiUFV3bHHU:ts,
%WJ5JZM?aK(Tr6Fa`=b]=XB/(h<usWJiZ>jcEqX9Q?&'ioORKTOGZF4AR+7Sj5r2))MMTC^)+^j>X+>KBcYf/KD=o%^b%Dh8KVD$j
%ml>#p,^XN$L?j,R6J%)$<rr46UfQ[t/F-1rTM]nuL3H8)*/nXhBHGU$_[,X$@8gsZoi,$sW$2<eEZ).rV/D-=$qCnAM6+:sS*Zm0
%,p.kRW_nap$ql9&V-O./q>c[P:VQF58S6gR$;PG+lBq/\VL#+q?oQ@7;)c$0cd7gU(ZM[!0"&NoEe,^/ALB`r_cT3h15qH4?%Er*
%f\@;XXS1pG%op8#&I]bqD,S3q4JUWBMu(C[?'V!1#[@Yi`t,=?lEc.BgQh&Kpq!YY6q.SUctCI3rE+,j*5:[Z8%f;*`:42XjuF;i
%B`s\/,Tb'[l;5_8Cdfio*.f/!`Gh>eP6ZJt1*'A49i/70[XRm(D>hLlerLch&<RLnmLsW4r;t]S@W@)N=1=*c^^]+&'u,ZtQH0,m
%Lfk9SQJ9<ZWe_ne4Njn?4CX;H\n4r@;)JLY1cS-d_:eZS"g0(`VTsWE.W@ou%jjNF(g>lHTNYC$Ll6S[L:HnW%.'JSr=BI0Xu>Di
%O$h6&%-_%h3E2aV3RE-qo/VMHpZ^52$OW\;HA8^Jf.W`(id4,BJ&5(P8Mc8^?O[4lDl(./%HRW!;&1ZSGD0F8ksVskJP+peHd,c8
%WB`$T=KRaUYj_mrRL1(+@#3mB3?WBsn7\^g4<e_'=c09qESM=8B$igo-2CDD[<C>mbc.f9,T=nT9a;A2Fh^/D!.QBHeeN/#$luJ^
%JPQ:j)aRJq'p"f8"O^VB9t>&.LFr9ErkM%s;2mgaY8V+W!c+MC%@^NomM-fL=-P6;MNi"9L1o)<0N:?HRT#*43Op6Xj-XJ<!,rdB
%B@3TZq.!:c[Hq1qP\`4GW?,Ng=H01<]'MSbqe8Q-A[cDQc0T/g37GH4_<]ND@>cFin=_6c<VQ9'**MpaVFZnfoGY_oJ$BUA[EX-s
%]m0R-Tkd+(:U1;q_WFW&,8Qn'M_oC./RlJ)I9A0I_K[]J^/;kRZA=&3BmOo=PCfti[>$3f,U@,EkmA]NM)L,c@SmK]WC=QNnKf:=
%f[trI&jS]DTCO*QRN=#RgA=JJg?3J3-GBRY4j?2,?(YS:6/PNL>B2T,"3/!R)_5QaRn+aE__.[Tf%5lsQ])QX!CkI-d!C)(:p##>
%LFrFs+'uUT_#pi;U>7C5D3/.n2kq"lSl3],o!2Bm>JRt]c^Rl+XN8?B*bWYJ-C]&M8_$pZ/0i\nUJ_CT+aP7l\b<Qq_roSrcGU?+
%IrX5:^g*#]]799O*Y)XqepZ!4^iDi%5nnBDks:FG3s6>;/34j`=[J6"3D1@>D3O/Q(;OS;`SscP]ApUHm1SXcCcU?Ng7283<pQoF
%+83Xrp[o+Am(68!/_JN`PMo\KMVqO)(_03!%&"O<@M*F/4]#kmP%/LW@G)%H;6H3Dfc&Tae3mR')X,XE)%76_X;lE4?,7BV8AL'/
%`$0BN;Ts09,p/S[`T2ttA+n3/(YF+F<@p3H!b#3":pC1olq7/po4[/'9,d4T98fS5A^pOA5j+nT^IG'iJV(m2E$k5_D>^%OIYq:!
%CNprcfP"5ri(>r'#/(Y?,tP:O;8k`l'M"]5SS4V,!m10OQ#\m4_)3:*Gn.h0cA14ScSFrk;JLP.SEC8E9S#:=XCsN&Cih&$bZ%QI
%$/8hSPq%)s`b@l#7)N:USMjc=_gORXA=p/*I/<2Q]gW\IXGjc0Pq]pjSVN4"o"46J=7nQqG11.F7AFM1#dFc0puj'?e6'@`h/sAY
%539';\d;RtG3s;Va)7O*9;eU8:k.@qr.#--Y?p3o^%KcG_Zl7<h00K2<_KL6XcqDDQ"T)fgYn.bn.r5i8_EPg*d3]KYc\!gr3#0q
%]l0Bq:&+:MZlP+IefCp?%)/WVPcNeTTBNQ&bZG_Tf`V*1^A!#-P7(:Z.s?.@!`)J+Bol[E5Z&Cg0"fkMZlI)]k6";;3sM:h\TNqt
%-frk?DSoX'D$X.P`m3B<]u0/[?^UYV*?80O^DRd$;3q0f'FKe8.CRa:SNVqV5M3k>$R%F^Wpej2o@A5+Fu.`mhkXBF'?aZ_Hq7Uo
%2O005d-<UOB'(<F,I`*UFE3J=7'3>5Pe4,X.$e8ne#C7'jjhLd\kE`#<SSud-PWt(Kg0-S2qB3?E>:f<*BDW3=<Jg>!Ofs)Vi.qU
%NBuC:fp!HoF<Vo&;lHDYY#T#8+kIS0YtC*"$OGK\YN>gk-_0#:A*@]'heZU<[5k8!Gu&OWO?uqLe/]EC;2j>Ejp6RoAW21#p@hgo
%r4"CD.5ueRT+D-HEYeA=L=]_,>2,uXZRbg%;NS,_RoL.G_%mJ2H?l$m#r`2D+HMZo$Ag:]_#0ql7:h%:k)CTK<o&:D\K%dPFI<2e
%f6LMb/buWpn,q^E^&b)S(9K%9[irp/P]Bu7q*q\Nb/ie!-g13%o$AL1NILBRW+mC7P#?6rph[[T$e9VbRV$1]AQ0g(jI)e"\+8S)
%pj$IoOb/+H2g?9iln`NcC"M5KX2^8[3=@7uW9s`*<X]n%;8gZO3`Zsl%'$94E!r^[(qjU;gKcC"%FbFgM(+Jc+tT%>W8F[cYnMMZ
%Oqj\91C*Ip-/Amk4<XVTLY#1Ikb\kp6m.sC_e!1F;Oo^*kP3bu%?l'8j!Agos(EPuoX(lPrA'e"Mj*+$J+I%Hrh'2K5QB44of'Y^
%e_g;RX8i$Ws6]9(?6Cf7g_r_="iL4;$`+']f%Vnae#YU=Y@!;)i.jT:.@*9k#c^-g#:WppQBi8?=@)&:,Uq_\+4T,a"X`P%[>U_n
%K-00aKiK9])699_)?dU<o!pC+<-"ASb^F+4c>>&4a,F6+>jUb3R2rV^.i6CC'u#5fO@VPF6IOiTH,3?9[-r_KfTn7?ZobFtVhf#i
%Z^n.'3t:1R&O]MdnfS+4>6>[,I^=gIM;[r".?>Oj!brjKV.\`3]WL=B[Pb\*\B(_fPa_^i#kt?)8B1@o7P,d"V&VFf.pn\(_BoKr
%dr)r2McuXB!jX9j(UM;9c:ciP+qA%DrW::T^_bRjDT$GGQBZ/%AdkHi,H?ZEe\L5[ZrluTB6Aui8P,e$!EV)\isc)$U/AY^nCZCG
%C[>i"bjr^E@,CeqLY9NNPH+Y&`6@<?\TW_e3*]O`YQL1\1Og5(&M8;GX1dYsi#jMn/*b&-f&h55U9'm(4=Oddq$/\/mlY09_p@7A
%3<%g@AO)dK:9eI^3c%W9"a4nTJq#WC65)X)%S+NGmnqk6ll,=A;nLn6Hf&A2\\$Sqm;pPC,>8RqABiF5&:D=UQLZ_cm"G%-Z2"aC
%a.*]Q(P`c#%VYpk<kJ'4.V*.&p/OoR'pQ(t5m"l/HW:QGZTNGi7gp`]gZRGTK8OA--7Oe\-2FbT"N_`9Ar17W_a\2;(3*:*'(lr?
%;1tqkLCm6`!+kDF!T?6p;]\,9bIf!:e23R?G@c?jfR6/1$_h4B$ptZB=`=VN,,g;hVmR[ZFI-\pnD/+aOTRTPNLHr.?V:;Y2a<;k
%Rr.=PB.2keIPo='Z7n<t_%PjKU@C_#<EJGDXJTb25(6DbI+4>c@)j%WHLf"]d%d%7<nPa0!dh8cZs8Q=b1AtagT0$";Hn:q=K%<P
%V<En0s5OUcOV45m>O,pu4$OITZ.Bq&N!SdaHXHtuV^r5femiO9iafV+et8qAagA*!MVt'KmW92N]38+Xp1Rh]^Y].$RIjVp88ip[
%@BJl@H@1tKgs&b!=n7*sn-j^@qVV=[3$V=Y6L3kYS\0$6^?efU'DMp@V+D%e0,g?/9#K[>M'JTA@%F5S*biCfNEB[Lbo9.W\hI^u
%jbY`:Ca!!J4&F<ni6fM:lLjD`$bpm7qUa$o8h?:Ilq%a^iMqW'qEbIa'=DkVVRgF>TY0JM"/"cI+gOk*ku=$I4Bn/pNfce.iT!n#
%qLVh,Db3bWa@Vu9`-^Yf$5)Gf?2o"Wm67hp-`(*TAQ4O-9n!euATf_'1jMu.m2S@cH-tVS)$S/s`*WL`?%1B>ok9NM5e*1sE]NE&
%nhbtPZP'9`qA0+>gUs<$Z*[Z6+R,GV;`G:G!c!R\..UjS?)m1cR0Zi6@kNnV@^nadMm;Q#ZXC7ubudtlg'!\+dUjI:U%;tei?.=d
%4@(__("8j%_(ZYD3Mr^X9Wu7''AtS'50?Sn[?e^I3;qq6`R@V1o-59%\cn^]1&T6*rKK*gKTDE*9D^+<Mao)O-o[n`JlKW>R;1pV
%:og\F4FD$FZdqs9S#W[^I;Q<_W\SNb]s$,N_*s6=&*M-UE^oZ.NL!j[hGN((frDh@QN<^UWJEf--KM1.c$/]*mBGC24sB!\#9Ge!
%<:#Q8'^&IQKf#n+C03]-LJd=,)$L\Z#]anA3"Od5`D:5f]L\Lun_"Op<GLfqn@4H]]2FG;ka7<?l:_S>D`KE\G(P1Z=Qg.K-pWMZ
%GVjD[?2QW$@BVfF*6(f\=81Ai@WsP1@jFaI\ZD19f]d-_Y#ohFqrs7+?<\P0C>C,3]Y7TTEg.@)iPu::M&,S)g;;=%caKL5N'4+s
%8#b?+P;F>!Xn0%7?bDka0I#Nb??+J6M\$KG3m(4FJRN4Q<L!4#3-]R9Fue6U"Sd;)P)21/?@[W0g%$m@K'G,M&34b5Ib2--L#bN8
%J+3<o$*0Xm!UP.hJ2DD[b$TZkjmLkeT286qLfObaH$9u.5+a6pI.bPT<hDfA1*Y.9Sqbnt3u`sT7lQ!+:s09JB*!o?/t.o\Kk9&e
%HAUB_4S%!Ol^1V*$/7PXl<hSC2-DJPT["B=Z&[dZ:oBpm5PKp$"oZRE5<nU4a!^XQB$%Zg<LlPMa,J5FSgoJi4t\oK=4nPBAM-f8
%VL.@s<"0uG.!RR.8fl]lX&q.*(Jj'!YC<]s*l$C#><dM\/E)-2%0K3Fq;-DB*\EK(#Q"R2STGi(Z<6lpOX<Z-4"E8n\=5/s&2#>s
%W&X'1phX,tFf-]H)'fD\q0[?-cP8djNWThORG)`ooS!cIX,H8o.SM%mmkq%TN>Ee>+F,CU'IFnM4hqDjZS$q9a9tn]N$a+sir"$9
%Lm"%-"pR:ZL)7%U;ddR#q,N-Ocs7lcS5BktQ/1J4HnTO;:N-Sf1eI%dQ3o6t,_@XDqOF?\@TlqXM$`52<HN*mI8N!KnapPJj.+Nb
%$5pEs+;8Jq;Nd`*(U3UB_SJMol2gh1?De=/qUsn0f'j:^:to,*5'oH5-EAjKRLZPBb<Pja>CRpTRo;KLW!Be-lHgb*oLYac.!*BW
%(E@6129H6g9A5r.o!hJeIcC9Rj1]RLC)-?;Y**T.!"r+h1)S^L6o]_4W*@ddSe.;(4IF[d)`<4EVVk^.;XYoD1-i95a@N0s(?KU4
%b?UQ-\5@il"YIr_pPh62bGb@8PiJMT0A__LRqaju*W&9P$0+j\Bc^KX4'<R7Mm9op2(<V(kjh3NBX3iao%3asIb5AgmY<:#9a6UJ
%RTY5iE!Fa8)eD$A>Xi@7aaMe&"F>acd1>,93#-aKBiiB91?gt+`<F;d8g0+ujUJ'Z*Z7?c:R1iL&mgj<7u/OXO9*:?mNf\/N[VAC
%a2Z\LDN)c-7.]V8-'u,]0(3Ni;9`0ks/n,%^59(;:a-(]-^tO#-<hubCn6?@q!t>o,N,jG#js!B6XlXmBdTt/TO]U:8c?'SJ(<sA
%1g#=6(ro[Rd23WJmNOYMp5ECn[*Z!TnH@1aduVWSq6>1q@-I\WjCMO0[FN!P?&Ai2!N@8HB.#Te2LGP@4Ks).OMp#[jfIBq0:O3_
%c4hqZ(f+>u6^n$2ga%!'8'!U?(0-g-d#%-ZZ/fMGPpolF&-bPnK*m)[8RK<':lN=c-&2]-TXOu3:9,Y,%KDQFEXgFL*$@QS,Y8^A
%*0JNo)Qj(<=(Q)mqqV(_T77aW_EQ.UD-J[BcA1rFHsg:$"jK3352=@n,ksYKe8q6CON)0Z)_+`75ld.>Bu!`LGrb'?WkBY(TiGo5
%bs1J[)-%LJZAt)5<&].R-q,d?W,bePLt71U]hs_3,DC[(V5$Uu_P$Cfj6ahk9(Nc4R;")0&r22U;S19-<0o$FJf\Z.Gt]CI@O:G2
%i9U8Im*b=$rg&e"n5GL-',*e'8<`1Zp(KQa\8jP&4r=I/7Gn,So+4p8E5%(Vj0&2\L=BRYl6_kblKc4e"R_h?VC("d>_"P@MfRWa
%(SaW&W(&k(VpJHTd7]`,@o8m;bL,^s2QMBEX7#?o'r,ehX*p14>DcA'nr6pd$+1U2Uj\(0om0-]r+hd*N[!+!c5\BeouR"c.EG%/
%Y)(#`#XGCk8r1m>s']b>qK_p'1D\TUYEscemff%/YqT,>L::4]\oGeJ5ogaD8Z_a+(?;63)u"4K\8,F,2#Yom!ddm41$e8:O[DgL
%c=E@_#?>JS!.:ZCahDA&4f^k`kaij>HbZ2g%[l[kD\RaE)gM`nX!_iUqBPW`5;F\odoCVBU`?=W53XV<V/.BB\VjZIECudV<g5eF
%:os7#8JlBq9*g/hUW0r=/*RTdmYVLA,]!0@LR"osje^li`"d..Tua)^$P'6ng^<l%n9cOkcGNP1d4seBVd4bS=hZ?AS4E@bLC9bQ
%E%)92\49JnE![i8>GHL#M<^"lnpStLDS_\6QtpXe;(TKsHtQqg8VU(XZ"C#5TPT(LZk&DgMF"@%F0roH6)K`Xa/Dt43&L:*k#861
%$J-)]<nhcnZ#V6uP-m..&<NdDL5mW8-!--7D.g'Mr_`[tXum=8b]:r48s`J6H,#["J!tm%Yeb;1SJut4oKc>jb%;Z\=g%Y9I3(<,
%bD4`RTceN9[Q1sZ1Y>1AJ2oM`5k6I/ij6['ij^>j5VhH=TlNRF=!E_O5$^n"iBuql+<9Fo\ue5D,M(&EC/h$K*"8=Yr=iH[>)#Ja
%G&"u2doV^Y72WD:?d,hE(hmK8ij/Gu;82Gub)/]+G(8VY%r2hYMJ$;bj*L7-[C/atkrhiG#si"Q@]W3_+s*%=F[9f)j,8\(&b47\
%%-VkK@c*XSEA,$'KGBtj_uRicq:FHeFa,".]?dOn:09(:Zs:*5B(#oZB@89]MWlBE$:7(cqo1$=?`&.-9uKOp<&n\"RdA:07:VZ>
%[P@&]LNs)7;+1ORA&p=F;6RjtRJXY*FmQNMj:WQr?;F)aI8Na289VH/?22oOF<nu_^UT$cFAO"Meo8)OlLoUb,;Mbnf4I$H9Tt'\
%&YCmX1tiOKeC/"hM<9<77isJl4s'bb>T[mcA"GcU>n9RO90YclKWWh4EE*!,b[1h')-@sN<k/HQVi81[aEB'/P.*KU5L81]-h$UH
%Gsii(&*4S:cil62[iFAP6^:pOq)sT*T=%%*YN,]<GJDeCD*F5D*5V99%]^;ASt&c*psj;3Z4o,]]Y+)96)Qioc.M/bnTHP_f/j,a
%mkX3d^BC;$4On!^1fj)jd`&HBdY9UcdE$qSN)Z<fq7a-*o-n_KcM[s'ZLD%[,0m&l(;/1Z%g0PD:3e'8nW=XLSrEXmdmQjRClQ'1
%IaU2/+"PK"WZ`1s(afL9<7nU<DN5H^0icP-;6d5SHc8n`el^<7_(Ifp\GSG0(ELAD.,X\g4ML'i4`u.<_9%.TO+<!:F^2[?O!o(L
%.OQ"hhr,[D21QiQI+e6Q/ekZk4KSmlg;6/+/!Ld7),em=`X^!'T0;:8ngKb<kaQ2b3Ega]1A!.\!c$/Jc(CL_\Z\JOdMG+O1>bn6
%nL=+=bKT@6DPN-4I9"ZdN5BPU9aSZWEEM.nMNu)20d:Y9$:(TE"X_-lW8YqFe\t3`k%'!0,gECXeSZoQ?(r5_cr,`CPtP("-MAG8
%)!i/meI-?P'gHHFc<TuU'^enj/;*0/`D]W-qr"2u^1fB6X/J-"Df.1]'FY0>NUs@`?bV&91K72E1EutK2S6pdWgn0eC**sa\CD:p
%#j+pnoQV@gD?6t["tM6-WfXLn.>]`s8q(5Nl5Y7:*^N=G2*q5JN/*4Qf]fd*E`oCp68JAHau&g-&5G>-bM4@b`QWkM;%G1o%3*US
%I$=P'9ANC9AV0PeMY%/6fT\ofG2KdS_a]%LD@2GZa`5P0X,K2R[o!]O7Zt4C.^CBdeOP[hL9qi?>`7-$>o8hVJho+)j?`<PGoPaL
%l",(%M6%i7^nli^1(b2>U^/+^UI%Yl<4(H5NX6:#4uW(gc@*EHRVY4lcG"9IJ>.MaHQAqN;-,K;UHW^N@q_Lb>-s!8Y9hOp\(5iS
%L-Jmn\@3p+7TS3I@\Gg"Uq]nm/^#hjJ_"r]EfaE)7an,_"!?+=>Co+3l0O3MA>r5;1tqY_S'JN&.fmd*p\=q^dYk!C^j5o/d)@6n
%e.!1[M2G5,QZ4Xn;Oh$+cD/@<VV:/+.*LZ$]m2r%T#L%O6>Q]8O1af$8'hNL"=tpY]GZi]QQ4Kf":bWr<,g9p:%g+=_&NitP'$GX
%r3.P4WB?]\T[LLV_H4H>(O]?>7\uW_^Ck3=J:R3X.YC-<,6[,fGG&*$=$8N$@Bd<E[g?i-,m@kA_GUF!dN5C7Q,)rm5^G@*ho);0
%EFl>cJ1)%.-unejJIb[cKfKj;44:`Y`,JX?`GX]Jo\*JH0pI2R3BBJ&U0WUW(Bou8(l*N"Me+$bK!:Z8[/;X[;)t'[b:'eIeu9hg
%GAH3Y4n2,B8StT>?dTYiaqFifVB+C1VK0hsq2AfSV?CAP8?4.dW',Pte;QhX^kR_T6r2Vuic<><==XkF/OqBT@^J011ig-)/udf^
%@[T*2]=n#+iKCB**L4,mSRcA(rGj#o.d;ru&Zq1/DRbM8K21k,\uM:?&JQ1dfiR;<LR?kD1>VF=[uAX&c51(uecg&jXiP3Tocn/\
%.5n98mqVu3X$sALce7U\2La9nT@T]?HKBOsq#g!sh2r5^N=skUD?L?k.'b7)Y8Z^d3+8%AcTB6Aj&+P"(^X/R)Z"dT;-TH-C]YB[
%;tndJ!rRl1.tShmSo-<=<!5kj&Z%^;28dtWP&]06."uH<Hb*("?rTs.kO,)McHQH59HdY]YX"-*oSUj6WVZc.&Q0QL\"^!^O7^K\
%]Gg:L9D$4Ul;l8R]Pleb4n7D.r2]QD\d_-BB_/K+R/js*\JZF5kqQRYN>=/DK9(20USM6`]<!6O<_b;7qjAWDh4jf#8lpu=FFDu<
%Ol/5ObP-keLu5PN-"OlXCN=LUP]\XMl31%QF[m'<=>.P!(dT9K>[tb`0ZP!==Fs9M/+=QL*2c3A^VMOsERdQ\QTeT9i7:ee)tZF>
%X+^AoGIEusd*Z@6lQna4]QItsigg2A&36$mmYRTAo&mJLDo5T((@t:0fa"D.l?/lr0>9[:=PeXMOlqc2rB5PW=7=Ca^&F)-pkuob
%Rt#,OoQT3jk4Mg5J,Sc$?_3"er7+mKr:PR8p8d)brVG8Ur5Co#ri>M%ro0ts^*3ORom]4+l&1&jp?UW9iHO1.rPe7*j`g_,$TD?M
%r8h;bh>dG'ro,U1-O^S%fD~>
%AI9_PrivateDataEnd
